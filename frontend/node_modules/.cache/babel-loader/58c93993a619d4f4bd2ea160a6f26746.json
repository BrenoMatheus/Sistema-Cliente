{"ast":null,"code":"import { Environment } from '../../../environment';\nimport { Api } from '../axios-config';\n\nconst getAll = async function () {\n  let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  let filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  try {\n    const urlRelativa = `/orders?page=${page}&limit=${Environment.LIMITE_DE_LINHAS}&filter=${filter}`;\n    const {\n      data,\n      headers\n    } = await Api().get(urlRelativa);\n\n    if (data) {\n      return {\n        data,\n        totalCount: Number(headers['x-total-count'] || Environment.LIMITE_DE_LINHAS)\n      };\n    }\n\n    return new Error('Erro ao listar os registros.');\n  } catch (error) {\n    var _response;\n\n    console.error(error);\n    return new Error(((_response = error.response) === null || _response === void 0 ? void 0 : _response.data.errors.default) || 'Erro ao listar os registros.');\n  }\n};\n\nconst getById = async id => {\n  try {\n    const {\n      data\n    } = await Api().get(`/orders/${id}`);\n\n    if (data) {\n      return data;\n    }\n\n    return new Error('Erro ao consultar o registro.');\n  } catch (error) {\n    var _response2;\n\n    console.error(error);\n    return new Error(((_response2 = error.response) === null || _response2 === void 0 ? void 0 : _response2.data.errors.default) || 'Erro ao consultar o registro.');\n  }\n};\n\nconst create = async dados => {\n  try {\n    const {\n      data\n    } = await Api().post('/orders', dados);\n\n    if (data) {\n      return data;\n    }\n\n    return new Error('Erro ao criar o registro.');\n  } catch (error) {\n    var _response3;\n\n    console.error(error);\n    return new Error(((_response3 = error.response) === null || _response3 === void 0 ? void 0 : _response3.data.errors.default) || 'Erro ao criar o registro.');\n  }\n};\n\nconst updateById = async (id, dados) => {\n  try {\n    await Api().put(`/orders/${id}`, dados);\n  } catch (error) {\n    var _response4;\n\n    console.error(error);\n    return new Error(((_response4 = error.response) === null || _response4 === void 0 ? void 0 : _response4.data.errors.default) || 'Erro ao atualizar o registro.');\n  }\n};\n\nconst deleteById = async id => {\n  try {\n    await Api().delete(`/orders/${id}`);\n  } catch (error) {\n    var _response5;\n\n    console.error(error);\n    return new Error(((_response5 = error.response) === null || _response5 === void 0 ? void 0 : _response5.data.errors.default) || 'Erro ao apagar o registro.');\n  }\n};\n\nexport const OrdersService = {\n  getAll,\n  create,\n  getById,\n  updateById,\n  deleteById\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/shared/services/api/orders/OrdersService.ts"],"names":["Environment","Api","getAll","page","filter","urlRelativa","LIMITE_DE_LINHAS","data","headers","get","totalCount","Number","Error","error","console","response","errors","default","getById","id","create","dados","post","updateById","put","deleteById","delete","OrdersService"],"mappings":"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","sourcesContent":["import { AxiosError } from 'axios';\n\nimport { Environment } from '../../../environment';\nimport { Api } from '../axios-config';\n\n\nexport interface IListOrders {\n  id: number;\n  email: string;\n  cidadeId: number;\n  nomeCompleto: string;\n}\n\nexport interface IDetailOrder {\n  id: number;\n  email: string;\n  cidadeId: number;\n  nomeCompleto: string;\n}\n\ntype TOrdersTotalCount = {\n  data: IListOrders[];\n  totalCount: number;\n}\n\nconst getAll = async (page = 1, filter = ''): Promise<TOrdersTotalCount | Error> => {\n  try {\n    const urlRelativa = `/orders?page=${page}&limit=${Environment.LIMITE_DE_LINHAS}&filter=${filter}`;\n\n    const { data, headers } = await Api().get(urlRelativa);\n\n    if (data) {\n      return {\n        data,\n        totalCount: Number(headers['x-total-count'] || Environment.LIMITE_DE_LINHAS),\n      };\n    }\n\n    return new Error('Erro ao listar os registros.');\n  } catch (error) {\n    console.error(error);\n    return new Error((error as AxiosError).response?.data.errors.default || 'Erro ao listar os registros.');\n  }\n};\n\nconst getById = async (id: number): Promise<IDetailOrder | Error> => {\n  try {\n    const { data } = await Api().get(`/orders/${id}`);\n\n    if (data) {\n      return data;\n    }\n\n    return new Error('Erro ao consultar o registro.');\n  } catch (error) {\n    console.error(error);\n    return new Error((error as AxiosError).response?.data.errors.default || 'Erro ao consultar o registro.');\n  }\n};\n\nconst create = async (dados: Omit<IDetailOrder, 'id'>): Promise<number | Error> => {\n  try {\n    const { data } = await Api().post<number>('/orders', dados);\n\n    if (data) {\n      return data;\n    }\n\n    return new Error('Erro ao criar o registro.');\n  } catch (error) {\n    console.error(error);\n    return new Error((error as AxiosError).response?.data.errors.default || 'Erro ao criar o registro.');\n  }\n};\n\nconst updateById = async (id: number, dados: IDetailOrder): Promise<void | Error> => {\n  try {\n    await Api().put(`/orders/${id}`, dados);\n  } catch (error) {\n    console.error(error);\n    return new Error((error as AxiosError).response?.data.errors.default || 'Erro ao atualizar o registro.');\n  }\n};\n\nconst deleteById = async (id: number): Promise<void | Error> => {\n  try {\n    await Api().delete(`/orders/${id}`);\n  } catch (error) {\n    console.error(error);\n    return new Error((error as AxiosError).response?.data.errors.default || 'Erro ao apagar o registro.');\n  }\n};\n\n\nexport const OrdersService = {\n  getAll,\n  create,\n  getById,\n  updateById,\n  deleteById,\n};\n"]},"metadata":{},"sourceType":"module"}