{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/Site Node-Type-React/frontend/src/shared/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { AuthService } from '../services/api/auth/AuthService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\nconst LOCAL_STORAGE_KEY__ACCESS_TOKEN = 'APP_ACCESS_TOKEN';\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [accessToken, setAccessToken] = useState();\n  useEffect(() => {\n    const accessToken = localStorage.getItem(LOCAL_STORAGE_KEY__ACCESS_TOKEN);\n\n    if (accessToken) {\n      setAccessToken(JSON.parse(accessToken));\n    } else {\n      setAccessToken(undefined);\n    }\n  }, []);\n  const handleLogin = useCallback(async (email, password) => {\n    const result = await AuthService.auth(email, password);\n\n    if (result instanceof Error) {\n      return result.message;\n    } else {\n      localStorage.setItem(LOCAL_STORAGE_KEY__ACCESS_TOKEN, JSON.stringify(result.accessToken));\n      setAccessToken(result.accessToken);\n    }\n  }, []);\n  const handleLogout = useCallback(() => {\n    localStorage.removeItem(LOCAL_STORAGE_KEY__ACCESS_TOKEN);\n    setAccessToken(undefined);\n  }, []);\n  const isAuthenticated = useMemo(() => !!accessToken, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login: handleLogin,\n      logout: handleLogout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"9IXJ/Evu+3yMOjq6Azmcg5qlKjY=\");\n\n_c = AuthProvider;\nexport const useAuthContext = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuthContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/Site Node-Type-React/frontend/src/shared/contexts/AuthContext.tsx"],"names":["createContext","useCallback","useContext","useEffect","useMemo","useState","AuthService","AuthContext","LOCAL_STORAGE_KEY__ACCESS_TOKEN","AuthProvider","children","accessToken","setAccessToken","localStorage","getItem","JSON","parse","undefined","handleLogin","email","password","result","auth","Error","message","setItem","stringify","handleLogout","removeItem","isAuthenticated","login","logout","useAuthContext"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,EAAiDC,SAAjD,EAA4DC,OAA5D,EAAqEC,QAArE,QAAqF,OAArF;AAEA,SAASC,WAAT,QAA4B,kCAA5B;;AASA,MAAMC,WAAW,gBAAGP,aAAa,CAAC,EAAD,CAAjC;AAEA,MAAMQ,+BAA+B,GAAG,kBAAxC;AAKA,OAAO,MAAMC,YAA0C,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC1E,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,WAAW,GAAGE,YAAY,CAACC,OAAb,CAAqBN,+BAArB,CAApB;;AAEA,QAAIG,WAAJ,EAAiB;AACfC,MAAAA,cAAc,CAACG,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAD,CAAd;AACD,KAFD,MAEO;AACLC,MAAAA,cAAc,CAACK,SAAD,CAAd;AACD;AACF,GARQ,EAQN,EARM,CAAT;AAWA,QAAMC,WAAW,GAAGjB,WAAW,CAAC,OAAOkB,KAAP,EAAsBC,QAAtB,KAA2C;AACzE,UAAMC,MAAM,GAAG,MAAMf,WAAW,CAACgB,IAAZ,CAAiBH,KAAjB,EAAwBC,QAAxB,CAArB;;AACA,QAAIC,MAAM,YAAYE,KAAtB,EAA6B;AAC3B,aAAOF,MAAM,CAACG,OAAd;AACD,KAFD,MAEO;AACLX,MAAAA,YAAY,CAACY,OAAb,CAAqBjB,+BAArB,EAAsDO,IAAI,CAACW,SAAL,CAAeL,MAAM,CAACV,WAAtB,CAAtD;AACAC,MAAAA,cAAc,CAACS,MAAM,CAACV,WAAR,CAAd;AACD;AACF,GAR8B,EAQ5B,EAR4B,CAA/B;AAUA,QAAMgB,YAAY,GAAG1B,WAAW,CAAC,MAAM;AACrCY,IAAAA,YAAY,CAACe,UAAb,CAAwBpB,+BAAxB;AACAI,IAAAA,cAAc,CAACK,SAAD,CAAd;AACD,GAH+B,EAG7B,EAH6B,CAAhC;AAKA,QAAMY,eAAe,GAAGzB,OAAO,CAAC,MAAM,CAAC,CAACO,WAAT,EAAsB,CAACA,WAAD,CAAtB,CAA/B;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEkB,MAAAA,eAAF;AAAmBC,MAAAA,KAAK,EAAEZ,WAA1B;AAAuCa,MAAAA,MAAM,EAAEJ;AAA/C,KAA7B;AAAA,cACGjB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArCM;;GAAMD,Y;;KAAAA,Y;AAuCb,OAAO,MAAMuB,cAAc,GAAG;AAAA;;AAAA,SAAM9B,UAAU,CAACK,WAAD,CAAhB;AAAA,CAAvB;;IAAMyB,c","sourcesContent":["import { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\n\nimport { AuthService } from '../services/api/auth/AuthService';\n\n\ninterface IAuthContextData {\n  logout: () => void;\n  isAuthenticated: boolean;\n  login: (email: string, password: string) => Promise<string | void>;\n}\n\nconst AuthContext = createContext({} as IAuthContextData);\n\nconst LOCAL_STORAGE_KEY__ACCESS_TOKEN = 'APP_ACCESS_TOKEN';\n\ninterface IAuthProviderProps {\n  children: React.ReactNode;\n}\nexport const AuthProvider: React.FC<IAuthProviderProps> = ({ children }) => {\n  const [accessToken, setAccessToken] = useState<string>();\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(LOCAL_STORAGE_KEY__ACCESS_TOKEN);\n\n    if (accessToken) {\n      setAccessToken(JSON.parse(accessToken));\n    } else {\n      setAccessToken(undefined);\n    }\n  }, []);\n\n\n  const handleLogin = useCallback(async (email: string, password: string) => {\n    const result = await AuthService.auth(email, password);\n    if (result instanceof Error) {\n      return result.message;\n    } else {\n      localStorage.setItem(LOCAL_STORAGE_KEY__ACCESS_TOKEN, JSON.stringify(result.accessToken));\n      setAccessToken(result.accessToken);\n    }\n  }, []);\n\n  const handleLogout = useCallback(() => {\n    localStorage.removeItem(LOCAL_STORAGE_KEY__ACCESS_TOKEN);\n    setAccessToken(undefined);\n  }, []);\n\n  const isAuthenticated = useMemo(() => !!accessToken, [accessToken]);\n\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, login: handleLogin, logout: handleLogout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuthContext = () => useContext(AuthContext);\n"]},"metadata":{},"sourceType":"module"}