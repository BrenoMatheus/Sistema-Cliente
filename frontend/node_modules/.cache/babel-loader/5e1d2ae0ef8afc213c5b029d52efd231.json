{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/list.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { Grid, TextField } from '@mui/material';\nimport { formValidationSchema } from './DetailItemofLines';\nimport { ItemofLinesService } from '../../../../shared/services/api/itemofLines/ItemofLinesService';\nimport { VForm, useVForm } from '../../../../shared/forms';\nimport { useNavigate } from 'react-router-dom';\nimport { AutoCompleteItem } from './AutoCompleteItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TableList = _ref => {\n  _s();\n\n  let {\n    data,\n    key,\n    id\n  } = _ref;\n  const [changedAmount, setChangedAmount] = useState(data.amount);\n  const [changedTotal, setChangedTotal] = useState(data.total);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    formRef,\n    isSaveAndClose\n  } = useVForm();\n  const navigate = useNavigate();\n\n  const handleSave = dados => {\n    console.log(key);\n    console.log(dados);\n    formValidationSchema.validate(dados, {\n      abortEarly: false\n    }).then(dadosValidados => {\n      setIsLoading(true);\n\n      if (changedAmount !== dados.amount || changedTotal !== dados.total) {\n        ItemofLinesService.updateById(Number(id), {\n          id: Number(id),\n          ...dadosValidados,\n          amount: changedAmount,\n          total: changedTotal\n        }).then(result => {\n          setIsLoading(false);\n\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            if (isSaveAndClose()) {\n              navigate('/itemofLines');\n            }\n          }\n        });\n      }\n    }).catch(errors => {\n      var _formRef$current;\n\n      const validationErrors = {};\n      errors.inner.forEach(error => {\n        if (!error.path) return;\n        validationErrors[error.path] = error.message;\n      });\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors(validationErrors);\n    });\n  };\n\n  const handleDelete = id => {\n    if (confirm('Realmente deseja apagar?')) {\n      ItemofLinesService.deleteById(id).then(result => {\n        if (result instanceof Error) {\n          alert(result.message);\n        } else {\n          alert('Registro apagado com sucesso!');\n          navigate('/itemofLines');\n        }\n      });\n    }\n  };\n  /* async function handleEdit(e, priority) {\n      e.style.cursor = 'text';\n      e.style.borderRadius = '5px';\n      if (priority) {\n        e.style.boxShadow = '0 0 5px white';\n      } else {\n        e.style.boxShadow = '0 0 5px gray';\n      }\n    } */\n\n\n  return /*#__PURE__*/_jsxDEV(VForm, {\n    ref: formRef,\n    onSubmit: handleSave,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      borderBottom: 1,\n      spacing: {\n        xs: 0,\n        md: 0\n      },\n      columns: {\n        xs: 3,\n        sm: 6,\n        md: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        sm: 4,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(AutoCompleteItem, {\n          isExternalLoading: isLoading,\n          itemID: data.itemID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        sm: 4,\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"standard\",\n          defaultValue: data.amount\n          /* onClick={(e) => handleEdit(e.target, data.priority)} */\n          ,\n          onChange: e => setChangedAmount(Number(e.target.value)),\n          onBlur: e => handleSave(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        sm: 4,\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"standard\",\n          defaultValue: data.total\n          /* onClick={(e) => handleEdit(e.target, data.priority)} */\n          ,\n          onChange: e => setChangedTotal(Number(e.target.value)),\n          onBlur: e => handleSave(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableList, \"aynPWPF8FLLmN6LkP0vW1VZ1Z/s=\", false, function () {\n  return [useVForm, useNavigate];\n});\n\n_c = TableList;\nexport default TableList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableList\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/list.tsx"],"names":["React","useState","Grid","TextField","formValidationSchema","ItemofLinesService","VForm","useVForm","useNavigate","AutoCompleteItem","TableList","data","key","id","changedAmount","setChangedAmount","amount","changedTotal","setChangedTotal","total","isLoading","setIsLoading","formRef","isSaveAndClose","navigate","handleSave","dados","console","log","validate","abortEarly","then","dadosValidados","updateById","Number","result","Error","alert","message","catch","errors","validationErrors","inner","forEach","error","path","current","setErrors","handleDelete","confirm","deleteById","xs","md","sm","itemID","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './styles.css';\n\nimport { Grid, TextField } from '@mui/material';\nimport * as yup from 'yup';\nimport { formValidationSchema } from './DetailItemofLines';\nimport {\n  IListItemofLine,\n  ItemofLinesService,\n} from '../../../../shared/services/api/itemofLines/ItemofLinesService';\nimport {\n  IVFormErrors,\n  VForm,\n  useVForm,\n} from '../../../../shared/forms';\nimport { useNavigate } from 'react-router-dom';\nimport { AutoCompleteItem } from './AutoCompleteItem';\n\ntype TVTextFieldProps = {\n  name: string;\n  data: IListItemofLine;\n  key:number;\n  id:number;\n};\n\nexport interface IFormData {\n  orderID: number;\n  itemID: number;\n  amount: number;\n  total: number;\n}\n\nexport const TableList: React.FC<TVTextFieldProps> = ({ data, key, id }) => {\n  const [changedAmount, setChangedAmount] = useState(data.amount);\n  const [changedTotal, setChangedTotal] = useState(data.total);\n  const [isLoading, setIsLoading] = useState(false);\n  const { formRef, isSaveAndClose } = useVForm();\n  const navigate = useNavigate();\n\n\n\n  const handleSave = (dados: IFormData) => {\n    console.log(key);\n    console.log(dados);\n    formValidationSchema\n      .validate(dados, { abortEarly: false })\n      .then((dadosValidados) => {\n        setIsLoading(true);\n        if (\n          changedAmount !== dados.amount ||\n          changedTotal !== dados.total\n        ) {\n          ItemofLinesService.updateById(Number(id), {\n            id: Number(id),\n            ...dadosValidados,\n            amount: changedAmount,\n            total: changedTotal,\n          }).then((result) => {\n            setIsLoading(false);\n\n            if (result instanceof Error) {\n              alert(result.message);\n            } else {\n              if (isSaveAndClose()) {\n                navigate('/itemofLines');\n              }\n            }\n          });\n        }\n      })\n      .catch((errors: yup.ValidationError) => {\n        const validationErrors: IVFormErrors = {};\n\n        errors.inner.forEach((error) => {\n          if (!error.path) return;\n\n          validationErrors[error.path] = error.message;\n        });\n\n        formRef.current?.setErrors(validationErrors);\n      });\n  };\n\n  const handleDelete = (id: number) => {\n    if (confirm('Realmente deseja apagar?')) {\n      ItemofLinesService.deleteById(id).then((result) => {\n        if (result instanceof Error) {\n          alert(result.message);\n        } else {\n          alert('Registro apagado com sucesso!');\n          navigate('/itemofLines');\n        }\n      });\n    }\n  };\n\n  /* async function handleEdit(e, priority) {\n      e.style.cursor = 'text';\n      e.style.borderRadius = '5px';\n      if (priority) {\n        e.style.boxShadow = '0 0 5px white';\n      } else {\n        e.style.boxShadow = '0 0 5px gray';\n      }\n    } */\n\n  return (\n    <VForm key={key} ref={formRef} onSubmit={handleSave}>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        borderBottom={1}\n        spacing={{ xs: 0, md: 0 }}\n        columns={{ xs: 3, sm: 6, md: 8 }}\n      >\n        <Grid item xs={2} sm={4} md={3}>\n          <AutoCompleteItem\n            isExternalLoading={isLoading}\n            itemID={data.itemID}\n          />\n        </Grid>\n\n        <Grid item xs={2} sm={4} md={2}>\n          <TextField\n            variant=\"standard\"\n            defaultValue={data.amount}\n            /* onClick={(e) => handleEdit(e.target, data.priority)} */\n            onChange={(e) => setChangedAmount(Number(e.target.value))}\n            onBlur={(e) => handleSave(data)}\n          />\n        </Grid>\n        <Grid item xs={2} sm={4} md={2}>\n          <TextField\n            variant=\"standard\"\n            defaultValue={data.total}\n            /* onClick={(e) => handleEdit(e.target, data.priority)} */\n            onChange={(e) => setChangedTotal(Number(e.target.value))}\n            onBlur={(e) => handleSave(data)}\n          />\n        </Grid>\n      </Grid>\n    </VForm>\n  );\n};\n\nexport default TableList;\n"]},"metadata":{},"sourceType":"module"}