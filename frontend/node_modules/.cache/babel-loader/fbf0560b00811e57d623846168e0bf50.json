{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/Projeto advocacia/frontend/src/shared/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { AuthService } from '../services/api/auth/AuthService';\nimport { ClientsService } from '../services/api/clients/ClientsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\nconst LOCAL_STORAGE_KEY__ACCESS_TOKEN = 'APP_ACCESS_TOKEN';\nconst LONG = 'long';\nconst LAT = 'lat';\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [accessToken, setAccessToken] = useState();\n  useEffect(() => {\n    const accessToken = localStorage.getItem(LOCAL_STORAGE_KEY__ACCESS_TOKEN);\n    const long = localStorage.getItem(LONG);\n    const lat = localStorage.getItem(LAT);\n\n    if (accessToken) {\n      setAccessToken(JSON.parse(accessToken));\n      ClientsService.getAll();\n    } else {\n      setAccessToken(undefined);\n    }\n  }, []);\n  const handleLogin = useCallback(async (email, password) => {\n    const result = await AuthService.auth(email, password);\n\n    if (result instanceof Error) {\n      return result.message;\n    } else {\n      localStorage.setItem(LOCAL_STORAGE_KEY__ACCESS_TOKEN, JSON.stringify(result.accessToken));\n      localStorage.setItem(LONG, JSON.stringify(result.long));\n      localStorage.setItem(LAT, JSON.stringify(result.lat));\n      setAccessToken(result.accessToken);\n    }\n  }, []);\n  const handleLogout = useCallback(() => {\n    localStorage.removeItem(LOCAL_STORAGE_KEY__ACCESS_TOKEN);\n    setAccessToken(undefined);\n  }, []);\n  const isAuthenticated = useMemo(() => !!accessToken, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login: handleLogin,\n      logout: handleLogout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"9IXJ/Evu+3yMOjq6Azmcg5qlKjY=\");\n\n_c = AuthProvider;\nexport const useAuthContext = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuthContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/Projeto advocacia/frontend/src/shared/contexts/AuthContext.tsx"],"names":["createContext","useCallback","useContext","useEffect","useMemo","useState","AuthService","ClientsService","AuthContext","LOCAL_STORAGE_KEY__ACCESS_TOKEN","LONG","LAT","AuthProvider","children","accessToken","setAccessToken","localStorage","getItem","long","lat","JSON","parse","getAll","undefined","handleLogin","email","password","result","auth","Error","message","setItem","stringify","handleLogout","removeItem","isAuthenticated","login","logout","useAuthContext"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,EAAiDC,SAAjD,EAA4DC,OAA5D,EAAqEC,QAArE,QAAqF,OAArF;AAEA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,cAAT,QAA+B,wCAA/B;;AASA,MAAMC,WAAW,gBAAGR,aAAa,CAAC,EAAD,CAAjC;AAEA,MAAMS,+BAA+B,GAAG,kBAAxC;AACA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,GAAG,GAAG,KAAZ;AAKA,OAAO,MAAMC,YAA0C,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC1E,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,WAAW,GAAGE,YAAY,CAACC,OAAb,CAAqBR,+BAArB,CAApB;AACA,UAAMS,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqBP,IAArB,CAAb;AACA,UAAMS,GAAG,GAAGH,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAZ;;AAEA,QAAIG,WAAJ,EAAiB;AACfC,MAAAA,cAAc,CAACK,IAAI,CAACC,KAAL,CAAWP,WAAX,CAAD,CAAd;AAEAP,MAAAA,cAAc,CAACe,MAAf;AACD,KAJD,MAIO;AACLP,MAAAA,cAAc,CAACQ,SAAD,CAAd;AACD;AACF,GAZQ,EAYN,EAZM,CAAT;AAeA,QAAMC,WAAW,GAAGvB,WAAW,CAAC,OAAOwB,KAAP,EAAsBC,QAAtB,KAA2C;AACzE,UAAMC,MAAM,GAAG,MAAMrB,WAAW,CAACsB,IAAZ,CAAiBH,KAAjB,EAAwBC,QAAxB,CAArB;;AACA,QAAIC,MAAM,YAAYE,KAAtB,EAA6B;AAC3B,aAAOF,MAAM,CAACG,OAAd;AACD,KAFD,MAEO;AACLd,MAAAA,YAAY,CAACe,OAAb,CAAqBtB,+BAArB,EAAsDW,IAAI,CAACY,SAAL,CAAeL,MAAM,CAACb,WAAtB,CAAtD;AACAE,MAAAA,YAAY,CAACe,OAAb,CAAqBrB,IAArB,EAA2BU,IAAI,CAACY,SAAL,CAAeL,MAAM,CAACT,IAAtB,CAA3B;AACAF,MAAAA,YAAY,CAACe,OAAb,CAAqBpB,GAArB,EAA0BS,IAAI,CAACY,SAAL,CAAeL,MAAM,CAACR,GAAtB,CAA1B;AACAJ,MAAAA,cAAc,CAACY,MAAM,CAACb,WAAR,CAAd;AACD;AACF,GAV8B,EAU5B,EAV4B,CAA/B;AAYA,QAAMmB,YAAY,GAAGhC,WAAW,CAAC,MAAM;AACrCe,IAAAA,YAAY,CAACkB,UAAb,CAAwBzB,+BAAxB;AACAM,IAAAA,cAAc,CAACQ,SAAD,CAAd;AACD,GAH+B,EAG7B,EAH6B,CAAhC;AAKA,QAAMY,eAAe,GAAG/B,OAAO,CAAC,MAAM,CAAC,CAACU,WAAT,EAAsB,CAACA,WAAD,CAAtB,CAA/B;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEqB,MAAAA,eAAF;AAAmBC,MAAAA,KAAK,EAAEZ,WAA1B;AAAuCa,MAAAA,MAAM,EAAEJ;AAA/C,KAA7B;AAAA,cACGpB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3CM;;GAAMD,Y;;KAAAA,Y;AA6Cb,OAAO,MAAM0B,cAAc,GAAG;AAAA;;AAAA,SAAMpC,UAAU,CAACM,WAAD,CAAhB;AAAA,CAAvB;;IAAM8B,c","sourcesContent":["import { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\n\nimport { AuthService } from '../services/api/auth/AuthService';\nimport { ClientsService } from '../services/api/clients/ClientsService';\n\n\ninterface IAuthContextData {\n  logout: () => void;\n  isAuthenticated: boolean;\n  login: (email: string, password: string) => Promise<string | void>;\n}\n\nconst AuthContext = createContext({} as IAuthContextData);\n\nconst LOCAL_STORAGE_KEY__ACCESS_TOKEN = 'APP_ACCESS_TOKEN';\nconst LONG = 'long';\nconst LAT = 'lat';\n\ninterface IAuthProviderProps {\n  children: React.ReactNode;\n}\nexport const AuthProvider: React.FC<IAuthProviderProps> = ({ children }) => {\n  const [accessToken, setAccessToken] = useState<string>();\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(LOCAL_STORAGE_KEY__ACCESS_TOKEN);\n    const long = localStorage.getItem(LONG);\n    const lat = localStorage.getItem(LAT);\n\n    if (accessToken) {\n      setAccessToken(JSON.parse(accessToken));\n\n      ClientsService.getAll();\n    } else {\n      setAccessToken(undefined);\n    }\n  }, []);\n\n\n  const handleLogin = useCallback(async (email: string, password: string) => {\n    const result = await AuthService.auth(email, password);\n    if (result instanceof Error) {\n      return result.message;\n    } else {\n      localStorage.setItem(LOCAL_STORAGE_KEY__ACCESS_TOKEN, JSON.stringify(result.accessToken));\n      localStorage.setItem(LONG, JSON.stringify(result.long));\n      localStorage.setItem(LAT, JSON.stringify(result.lat));\n      setAccessToken(result.accessToken);\n    }\n  }, []);\n\n  const handleLogout = useCallback(() => {\n    localStorage.removeItem(LOCAL_STORAGE_KEY__ACCESS_TOKEN);\n    setAccessToken(undefined);\n  }, []);\n\n  const isAuthenticated = useMemo(() => !!accessToken, [accessToken]);\n\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, login: handleLogin, logout: handleLogout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuthContext = () => useContext(AuthContext);\n"]},"metadata":{},"sourceType":"module"}