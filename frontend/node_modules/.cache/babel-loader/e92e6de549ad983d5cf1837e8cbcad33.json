{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/ListItemofLines.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Icon, IconButton, LinearProgress, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TableRow } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ItemofLinesService } from '../../../../shared/services/api/itemofLines/ItemofLinesService';\nimport { Environment } from '../../../../shared/environment';\nimport { useDebounce } from '../../../../shared/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListItemofLines = () => {\n  _s();\n\n  const {\n    debounce\n  } = useDebounce();\n  const navigate = useNavigate();\n  const [rows, setRows] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalCount, setTotalCount] = useState(0);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n    debounce(() => {\n      ItemofLinesService.getAll(1, id).then(result => {\n        setIsLoading(false);\n\n        if (result instanceof Error) {\n          alert(result.message);\n        } else {\n          setTotalCount(result.totalCount);\n          setRows(result.data);\n        }\n      });\n    });\n  });\n\n  const handleDelete = id => {\n    if (confirm('Realmente deseja apagar?')) {\n      ItemofLinesService.deleteById(id).then(result => {\n        if (result instanceof Error) {\n          alert(result.message);\n        } else {\n          setRows(oldRows => [...oldRows.filter(oldRow => oldRow.id !== id)]);\n          alert('Registro apagado com sucesso!');\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    variant: \"outlined\",\n    sx: {\n      m: 1,\n      width: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            width: 100,\n            children: \"A\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ordem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Quantidade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleDelete(row.id),\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => navigate(`/itemofLines/detail/${row.id}`),\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                children: \"edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.itemID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.orderID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), totalCount === 0 && !isLoading && /*#__PURE__*/_jsxDEV(\"caption\", {\n        children: Environment.EMPTY_LISTING\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: isLoading && /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"indeterminate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListItemofLines, \"cwOF32Vb3jIZ++h7o+VzF6zAi1A=\", false, function () {\n  return [useDebounce, useNavigate, useParams];\n});\n\n_c = ListItemofLines;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItemofLines\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/ListItemofLines.tsx"],"names":["useEffect","useState","Icon","IconButton","LinearProgress","Paper","Table","TableBody","TableCell","TableContainer","TableFooter","TableHead","TableRow","useNavigate","useParams","ItemofLinesService","Environment","useDebounce","ListItemofLines","debounce","navigate","rows","setRows","isLoading","setIsLoading","totalCount","setTotalCount","id","getAll","then","result","Error","alert","message","data","handleDelete","confirm","deleteById","oldRows","filter","oldRow","m","width","map","row","itemID","orderID","amount","total","EMPTY_LISTING"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { Icon, IconButton, LinearProgress, Pagination, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TableRow, TextFieldProps } from '@mui/material';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\n\nimport { IListItemofLine, ItemofLinesService, } from '../../../../shared/services/api/itemofLines/ItemofLinesService';\nimport { Environment } from '../../../../shared/environment';\nimport { useDebounce } from '../../../../shared/hooks';\nimport { useField } from '@unform/core';\n\ntype TVTextFieldProps = TextFieldProps & {\n  name: string;\n}\n\nexport const ListItemofLines: React.FC<TVTextFieldProps> = () => {\n\n  const { debounce } = useDebounce();\n  const navigate = useNavigate();\n\n  const [rows, setRows] = useState<IListItemofLine[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalCount, setTotalCount] = useState(0);\n\n  const { id } = useParams<'id'>();\n\n\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    debounce(() => {\n      ItemofLinesService.getAll(1, id)\n        .then((result) => {\n          setIsLoading(false);\n\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n\n            setTotalCount(result.totalCount);\n            setRows(result.data);\n          }\n        });\n    });\n  });\n\n  const handleDelete = (id: number) => {\n    if (confirm('Realmente deseja apagar?')) {\n      ItemofLinesService.deleteById(id)\n        .then(result => {\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            setRows(oldRows => [\n              ...oldRows.filter(oldRow => oldRow.id !== id),\n            ]);\n            alert('Registro apagado com sucesso!');\n          }\n        });\n    }\n  };\n  return (\n    <TableContainer component={Paper} variant=\"outlined\" sx={{ m: 1, width: 'auto' }}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell width={100}>Ações</TableCell>\n            <TableCell>Nome</TableCell>\n            <TableCell>ordem</TableCell>\n            <TableCell>Quantidade</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>\n                <IconButton size=\"small\" onClick={() => handleDelete(row.id)}>\n                  <Icon>delete</Icon>\n                </IconButton>\n                <IconButton size=\"small\" onClick={() => navigate(`/itemofLines/detail/${row.id}`)}>\n                  <Icon>edit</Icon>\n                </IconButton>\n              </TableCell>\n              <TableCell>{row.itemID}</TableCell>\n              <TableCell>{row.orderID}</TableCell>\n              <TableCell>{row.amount}</TableCell>\n              <TableCell>{row.total}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n\n        {totalCount === 0 && !isLoading && (\n          <caption>{Environment.EMPTY_LISTING}</caption>\n        )}\n\n        <TableFooter>\n          {isLoading && (\n            <TableRow>\n              <TableCell colSpan={3}>\n                <LinearProgress variant='indeterminate' />\n              </TableCell>\n            </TableRow>\n          )}\n\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}