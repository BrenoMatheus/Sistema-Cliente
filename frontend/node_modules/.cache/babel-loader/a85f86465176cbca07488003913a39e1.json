{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useIsLandscape } from '../useIsLandscape';\n/**\n * Props used to create the layout of the views.\n * Those props are exposed on all the pickers.\n */\n\n/**\n * Prepare the props for the view layout (managed by `PickersLayout`)\n */\n\nexport const usePickerLayoutProps = _ref => {\n  let {\n    props,\n    propsFromPickerValue,\n    propsFromPickerViews,\n    wrapperVariant\n  } = _ref;\n  const {\n    orientation\n  } = props;\n  const isLandscape = useIsLandscape(propsFromPickerViews.views, orientation);\n\n  const layoutProps = _extends({}, propsFromPickerViews, propsFromPickerValue, {\n    isLandscape,\n    wrapperVariant,\n    disabled: props.disabled,\n    readOnly: props.readOnly\n  });\n\n  return {\n    layoutProps\n  };\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/internals/hooks/usePicker/usePickerLayoutProps.js"],"names":["_extends","useIsLandscape","usePickerLayoutProps","props","propsFromPickerValue","propsFromPickerViews","wrapperVariant","orientation","isLandscape","views","layoutProps","disabled","readOnly"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,oBAAoB,GAAG,QAK9B;AAAA,MAL+B;AACnCC,IAAAA,KADmC;AAEnCC,IAAAA,oBAFmC;AAGnCC,IAAAA,oBAHmC;AAInCC,IAAAA;AAJmC,GAK/B;AACJ,QAAM;AACJC,IAAAA;AADI,MAEFJ,KAFJ;AAGA,QAAMK,WAAW,GAAGP,cAAc,CAACI,oBAAoB,CAACI,KAAtB,EAA6BF,WAA7B,CAAlC;;AACA,QAAMG,WAAW,GAAGV,QAAQ,CAAC,EAAD,EAAKK,oBAAL,EAA2BD,oBAA3B,EAAiD;AAC3EI,IAAAA,WAD2E;AAE3EF,IAAAA,cAF2E;AAG3EK,IAAAA,QAAQ,EAAER,KAAK,CAACQ,QAH2D;AAI3EC,IAAAA,QAAQ,EAAET,KAAK,CAACS;AAJ2D,GAAjD,CAA5B;;AAMA,SAAO;AACLF,IAAAA;AADK,GAAP;AAGD,CAnBM","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useIsLandscape } from '../useIsLandscape';\n\n/**\n * Props used to create the layout of the views.\n * Those props are exposed on all the pickers.\n */\n\n/**\n * Prepare the props for the view layout (managed by `PickersLayout`)\n */\nexport const usePickerLayoutProps = ({\n  props,\n  propsFromPickerValue,\n  propsFromPickerViews,\n  wrapperVariant\n}) => {\n  const {\n    orientation\n  } = props;\n  const isLandscape = useIsLandscape(propsFromPickerViews.views, orientation);\n  const layoutProps = _extends({}, propsFromPickerViews, propsFromPickerValue, {\n    isLandscape,\n    wrapperVariant,\n    disabled: props.disabled,\n    readOnly: props.readOnly\n  });\n  return {\n    layoutProps\n  };\n};"]},"metadata":{},"sourceType":"module"}