{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"onViewChange\", \"value\", \"defaultValue\", \"referenceDate\", \"disableFuture\", \"disablePast\", \"defaultCalendarMonth\", \"onChange\", \"onYearChange\", \"onMonthChange\", \"reduceAnimations\", \"shouldDisableDate\", \"shouldDisableMonth\", \"shouldDisableYear\", \"view\", \"views\", \"openTo\", \"className\", \"disabled\", \"readOnly\", \"minDate\", \"maxDate\", \"disableHighlightToday\", \"focusedView\", \"onFocusedViewChange\", \"showDaysOutsideCurrentMonth\", \"fixedWeekNumber\", \"dayOfWeekFormatter\", \"components\", \"componentsProps\", \"slots\", \"slotProps\", \"loading\", \"renderLoading\", \"displayWeekNumber\", \"yearsPerRow\", \"monthsPerRow\", \"timezone\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSlotProps } from '@mui/base/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useCalendarState } from './useCalendarState';\nimport { useDefaultDates, useUtils } from '../internals/hooks/useUtils';\nimport { PickersFadeTransitionGroup } from './PickersFadeTransitionGroup';\nimport { DayCalendar } from './DayCalendar';\nimport { MonthCalendar } from '../MonthCalendar';\nimport { YearCalendar } from '../YearCalendar';\nimport { useViews } from '../internals/hooks/useViews';\nimport { PickersCalendarHeader } from '../PickersCalendarHeader';\nimport { findClosestEnabledDate, applyDefaultDate, mergeDateAndTime } from '../internals/utils/date-utils';\nimport { PickerViewRoot } from '../internals/components/PickerViewRoot';\nimport { useDefaultReduceAnimations } from '../internals/hooks/useDefaultReduceAnimations';\nimport { getDateCalendarUtilityClass } from './dateCalendarClasses';\nimport { useControlledValueWithTimezone } from '../internals/hooks/useValueWithTimezone';\nimport { singleItemValueManager } from '../internals/utils/valueManagers';\nimport { VIEW_HEIGHT } from '../internals/constants/dimensions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    viewTransitionContainer: ['viewTransitionContainer']\n  };\n  return composeClasses(slots, getDateCalendarUtilityClass, classes);\n};\n\nfunction useDateCalendarDefaultizedProps(props, name) {\n  var _themeProps$loading, _themeProps$disablePa, _themeProps$disableFu, _themeProps$openTo, _themeProps$views, _themeProps$reduceAni, _themeProps$renderLoa;\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const defaultReduceAnimations = useDefaultReduceAnimations();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  return _extends({}, themeProps, {\n    loading: (_themeProps$loading = themeProps.loading) != null ? _themeProps$loading : false,\n    disablePast: (_themeProps$disablePa = themeProps.disablePast) != null ? _themeProps$disablePa : false,\n    disableFuture: (_themeProps$disableFu = themeProps.disableFuture) != null ? _themeProps$disableFu : false,\n    openTo: (_themeProps$openTo = themeProps.openTo) != null ? _themeProps$openTo : 'day',\n    views: (_themeProps$views = themeProps.views) != null ? _themeProps$views : ['year', 'day'],\n    reduceAnimations: (_themeProps$reduceAni = themeProps.reduceAnimations) != null ? _themeProps$reduceAni : defaultReduceAnimations,\n    renderLoading: (_themeProps$renderLoa = themeProps.renderLoading) != null ? _themeProps$renderLoa : () => /*#__PURE__*/_jsx(\"span\", {\n      children: \"...\"\n    }),\n    minDate: applyDefaultDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(utils, themeProps.maxDate, defaultDates.maxDate)\n  });\n}\n\nconst DateCalendarRoot = styled(PickerViewRoot, {\n  name: 'MuiDateCalendar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  height: VIEW_HEIGHT\n});\nconst DateCalendarViewTransitionContainer = styled(PickersFadeTransitionGroup, {\n  name: 'MuiDateCalendar',\n  slot: 'ViewTransitionContainer',\n  overridesResolver: (props, styles) => styles.viewTransitionContainer\n})({});\n/**\n * Demos:\n *\n * - [DatePicker](https://mui.com/x/react-date-pickers/date-picker/)\n * - [DateCalendar](https://mui.com/x/react-date-pickers/date-calendar/)\n * - [Validation](https://mui.com/x/react-date-pickers/validation/)\n *\n * API:\n *\n * - [DateCalendar API](https://mui.com/x/api/date-pickers/date-calendar/)\n */\n\nexport const DateCalendar = /*#__PURE__*/React.forwardRef(function DateCalendar(inProps, ref) {\n  var _ref, _slots$calendarHeader, _slotProps$calendarHe;\n\n  const utils = useUtils();\n  const id = useId();\n  const props = useDateCalendarDefaultizedProps(inProps, 'MuiDateCalendar');\n\n  const {\n    autoFocus,\n    onViewChange,\n    value: valueProp,\n    defaultValue,\n    referenceDate: referenceDateProp,\n    disableFuture,\n    disablePast,\n    defaultCalendarMonth,\n    onChange,\n    onYearChange,\n    onMonthChange,\n    reduceAnimations,\n    shouldDisableDate,\n    shouldDisableMonth,\n    shouldDisableYear,\n    view: inView,\n    views,\n    openTo,\n    className,\n    disabled,\n    readOnly,\n    minDate,\n    maxDate,\n    disableHighlightToday,\n    focusedView: inFocusedView,\n    onFocusedViewChange,\n    showDaysOutsideCurrentMonth,\n    fixedWeekNumber,\n    dayOfWeekFormatter,\n    components,\n    componentsProps,\n    slots,\n    slotProps,\n    loading,\n    renderLoading,\n    displayWeekNumber,\n    yearsPerRow,\n    monthsPerRow,\n    timezone: timezoneProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    value,\n    handleValueChange,\n    timezone\n  } = useControlledValueWithTimezone({\n    name: 'DateCalendar',\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue,\n    onChange,\n    valueManager: singleItemValueManager\n  });\n  const {\n    view,\n    setView,\n    focusedView,\n    setFocusedView,\n    goToNextView,\n    setValueAndGoToNextView\n  } = useViews({\n    view: inView,\n    views,\n    openTo,\n    onChange: handleValueChange,\n    onViewChange,\n    autoFocus,\n    focusedView: inFocusedView,\n    onFocusedViewChange\n  });\n  const {\n    referenceDate,\n    calendarState,\n    changeFocusedDay,\n    changeMonth,\n    handleChangeMonth,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd\n  } = useCalendarState({\n    value,\n    defaultCalendarMonth,\n    referenceDate: referenceDateProp,\n    reduceAnimations,\n    onMonthChange,\n    minDate,\n    maxDate,\n    shouldDisableDate,\n    disablePast,\n    disableFuture,\n    timezone\n  }); // When disabled, limit the view to the selected date\n\n  const minDateWithDisabled = disabled && value || minDate;\n  const maxDateWithDisabled = disabled && value || maxDate;\n  const gridLabelId = `${id}-grid-label`;\n  const hasFocus = focusedView !== null;\n  const CalendarHeader = (_ref = (_slots$calendarHeader = slots == null ? void 0 : slots.calendarHeader) != null ? _slots$calendarHeader : components == null ? void 0 : components.CalendarHeader) != null ? _ref : PickersCalendarHeader;\n  const calendarHeaderProps = useSlotProps({\n    elementType: CalendarHeader,\n    externalSlotProps: (_slotProps$calendarHe = slotProps == null ? void 0 : slotProps.calendarHeader) != null ? _slotProps$calendarHe : componentsProps == null ? void 0 : componentsProps.calendarHeader,\n    additionalProps: {\n      views,\n      view,\n      currentMonth: calendarState.currentMonth,\n      onViewChange: setView,\n      onMonthChange: (newMonth, direction) => handleChangeMonth({\n        newMonth,\n        direction\n      }),\n      minDate: minDateWithDisabled,\n      maxDate: maxDateWithDisabled,\n      disabled,\n      disablePast,\n      disableFuture,\n      reduceAnimations,\n      timezone,\n      labelId: gridLabelId,\n      slots,\n      slotProps\n    },\n    ownerState: props\n  });\n  const handleDateMonthChange = useEventCallback(newDate => {\n    const startOfMonth = utils.startOfMonth(newDate);\n    const endOfMonth = utils.endOfMonth(newDate);\n    const closestEnabledDate = isDateDisabled(newDate) ? findClosestEnabledDate({\n      utils,\n      date: newDate,\n      minDate: utils.isBefore(minDate, startOfMonth) ? startOfMonth : minDate,\n      maxDate: utils.isAfter(maxDate, endOfMonth) ? endOfMonth : maxDate,\n      disablePast,\n      disableFuture,\n      isDateDisabled,\n      timezone\n    }) : newDate;\n\n    if (closestEnabledDate) {\n      setValueAndGoToNextView(closestEnabledDate, 'finish');\n      onMonthChange == null || onMonthChange(startOfMonth);\n    } else {\n      goToNextView();\n      changeMonth(startOfMonth);\n    }\n\n    changeFocusedDay(closestEnabledDate, true);\n  });\n  const handleDateYearChange = useEventCallback(newDate => {\n    const startOfYear = utils.startOfYear(newDate);\n    const endOfYear = utils.endOfYear(newDate);\n    const closestEnabledDate = isDateDisabled(newDate) ? findClosestEnabledDate({\n      utils,\n      date: newDate,\n      minDate: utils.isBefore(minDate, startOfYear) ? startOfYear : minDate,\n      maxDate: utils.isAfter(maxDate, endOfYear) ? endOfYear : maxDate,\n      disablePast,\n      disableFuture,\n      isDateDisabled,\n      timezone\n    }) : newDate;\n\n    if (closestEnabledDate) {\n      setValueAndGoToNextView(closestEnabledDate, 'finish');\n      onYearChange == null || onYearChange(closestEnabledDate);\n    } else {\n      goToNextView();\n      changeMonth(startOfYear);\n    }\n\n    changeFocusedDay(closestEnabledDate, true);\n  });\n  const handleSelectedDayChange = useEventCallback(day => {\n    if (day) {\n      // If there is a date already selected, then we want to keep its time\n      return handleValueChange(mergeDateAndTime(utils, day, value != null ? value : referenceDate), 'finish', view);\n    }\n\n    return handleValueChange(day, 'finish', view);\n  });\n  React.useEffect(() => {\n    if (value != null && utils.isValid(value)) {\n      changeMonth(value);\n    }\n  }, [value]); // eslint-disable-line\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const baseDateValidationProps = {\n    disablePast,\n    disableFuture,\n    maxDate,\n    minDate\n  };\n  const commonViewProps = {\n    disableHighlightToday,\n    readOnly,\n    disabled,\n    timezone,\n    gridLabelId\n  };\n  const prevOpenViewRef = React.useRef(view);\n  React.useEffect(() => {\n    // If the view change and the focus was on the previous view\n    // Then we update the focus.\n    if (prevOpenViewRef.current === view) {\n      return;\n    }\n\n    if (focusedView === prevOpenViewRef.current) {\n      setFocusedView(view, true);\n    }\n\n    prevOpenViewRef.current = view;\n  }, [focusedView, setFocusedView, view]);\n  const selectedDays = React.useMemo(() => [value], [value]);\n  return /*#__PURE__*/_jsxs(DateCalendarRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(CalendarHeader, _extends({}, calendarHeaderProps)), /*#__PURE__*/_jsx(DateCalendarViewTransitionContainer, {\n      reduceAnimations: reduceAnimations,\n      className: classes.viewTransitionContainer,\n      transKey: view,\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        children: [view === 'year' && /*#__PURE__*/_jsx(YearCalendar, _extends({}, baseDateValidationProps, commonViewProps, {\n          value: value,\n          onChange: handleDateYearChange,\n          shouldDisableYear: shouldDisableYear,\n          hasFocus: hasFocus,\n          onFocusedViewChange: isViewFocused => setFocusedView('year', isViewFocused),\n          yearsPerRow: yearsPerRow,\n          referenceDate: referenceDate\n        })), view === 'month' && /*#__PURE__*/_jsx(MonthCalendar, _extends({}, baseDateValidationProps, commonViewProps, {\n          hasFocus: hasFocus,\n          className: className,\n          value: value,\n          onChange: handleDateMonthChange,\n          shouldDisableMonth: shouldDisableMonth,\n          onFocusedViewChange: isViewFocused => setFocusedView('month', isViewFocused),\n          monthsPerRow: monthsPerRow,\n          referenceDate: referenceDate\n        })), view === 'day' && /*#__PURE__*/_jsx(DayCalendar, _extends({}, calendarState, baseDateValidationProps, commonViewProps, {\n          onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n          onFocusedDayChange: changeFocusedDay,\n          reduceAnimations: reduceAnimations,\n          selectedDays: selectedDays,\n          onSelectedDaysChange: handleSelectedDayChange,\n          shouldDisableDate: shouldDisableDate,\n          shouldDisableMonth: shouldDisableMonth,\n          shouldDisableYear: shouldDisableYear,\n          hasFocus: hasFocus,\n          onFocusedViewChange: isViewFocused => setFocusedView('day', isViewFocused),\n          showDaysOutsideCurrentMonth: showDaysOutsideCurrentMonth,\n          fixedWeekNumber: fixedWeekNumber,\n          dayOfWeekFormatter: dayOfWeekFormatter,\n          displayWeekNumber: displayWeekNumber,\n          components: components,\n          componentsProps: componentsProps,\n          slots: slots,\n          slotProps: slotProps,\n          loading: loading,\n          renderLoading: renderLoading\n        }))]\n      })\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DateCalendar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: PropTypes.bool,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n\n  /**\n   * Overridable components.\n   * @default {}\n   * @deprecated Please use `slots`.\n   */\n  components: PropTypes.object,\n\n  /**\n   * The props used for each component slot.\n   * @default {}\n   * @deprecated Please use `slotProps`.\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.\n   * @param {TDate} date The date of the day of week provided by the adapter.\n   * @returns {string} The name to display.\n   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n\n  /**\n   * Default calendar month displayed when `value` and `defaultValue` are empty.\n   * @deprecated Consider using `referenceDate` instead.\n   */\n  defaultCalendarMonth: PropTypes.any,\n\n  /**\n   * The default selected value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * If `true`, the week number will be display in the calendar.\n   */\n  displayWeekNumber: PropTypes.bool,\n\n  /**\n   * Calendar will show more weeks in order to match this value.\n   * Put it to 6 for having fix number of week in Gregorian calendars\n   * @default undefined\n   */\n  fixedWeekNumber: PropTypes.number,\n\n  /**\n   * Controlled focused view.\n   */\n  focusedView: PropTypes.oneOf(['day', 'month', 'year']),\n\n  /**\n   * If `true`, calls `renderLoading` instead of rendering the day calendar.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.any,\n\n  /**\n   * Months rendered per row.\n   * @default 3\n   */\n  monthsPerRow: PropTypes.oneOf([3, 4]),\n\n  /**\n   * Callback fired when the value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TView The view type. Will be one of date or time views.\n   * @param {TValue} value The new value.\n   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.\n   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired on focused view change.\n   * @template TView\n   * @param {TView} view The new view to focus or not.\n   * @param {boolean} hasFocus `true` if the view should be focused.\n   */\n  onFocusedViewChange: PropTypes.func,\n\n  /**\n   * Callback fired on month change.\n   * @template TDate\n   * @param {TDate} month The new month.\n   */\n  onMonthChange: PropTypes.func,\n\n  /**\n   * Callback fired on view change.\n   * @template TView\n   * @param {TView} view The new view.\n   */\n  onViewChange: PropTypes.func,\n\n  /**\n   * Callback fired on year change.\n   * @template TDate\n   * @param {TDate} year The new year.\n   */\n  onYearChange: PropTypes.func,\n\n  /**\n   * The default visible view.\n   * Used when the component view is not controlled.\n   * Must be a valid option from `views` list.\n   */\n  openTo: PropTypes.oneOf(['day', 'month', 'year']),\n\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, disable heavy animations.\n   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13\n   */\n  reduceAnimations: PropTypes.bool,\n\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`.\n   */\n  referenceDate: PropTypes.any,\n\n  /**\n   * Component displaying when passed `loading` true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @returns {boolean} If `true` the date will be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n\n  /**\n   * Disable specific month.\n   * @template TDate\n   * @param {TDate} month The month to test.\n   * @returns {boolean} If `true`, the month will be disabled.\n   */\n  shouldDisableMonth: PropTypes.func,\n\n  /**\n   * Disable specific year.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} If `true`, the year will be disabled.\n   */\n  shouldDisableYear: PropTypes.func,\n\n  /**\n   * If `true`, days outside the current month are rendered:\n   *\n   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.\n   *\n   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.\n   *\n   * - ignored if `calendars` equals more than `1` on range pickers.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The visible view.\n   * Used when the component view is controlled.\n   * Must be a valid option from `views` list.\n   */\n  view: PropTypes.oneOf(['day', 'month', 'year']),\n\n  /**\n   * Available views.\n   */\n  views: PropTypes.arrayOf(PropTypes.oneOf(['day', 'month', 'year']).isRequired),\n\n  /**\n   * Years rendered per row.\n   * @default 3\n   */\n  yearsPerRow: PropTypes.oneOf([3, 4])\n} : void 0;","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/DateCalendar/DateCalendar.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","useSlotProps","styled","useThemeProps","unstable_composeClasses","composeClasses","unstable_useId","useId","unstable_useEventCallback","useEventCallback","useCalendarState","useDefaultDates","useUtils","PickersFadeTransitionGroup","DayCalendar","MonthCalendar","YearCalendar","useViews","PickersCalendarHeader","findClosestEnabledDate","applyDefaultDate","mergeDateAndTime","PickerViewRoot","useDefaultReduceAnimations","getDateCalendarUtilityClass","useControlledValueWithTimezone","singleItemValueManager","VIEW_HEIGHT","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","slots","root","viewTransitionContainer","useDateCalendarDefaultizedProps","props","name","_themeProps$loading","_themeProps$disablePa","_themeProps$disableFu","_themeProps$openTo","_themeProps$views","_themeProps$reduceAni","_themeProps$renderLoa","utils","defaultDates","defaultReduceAnimations","themeProps","loading","disablePast","disableFuture","openTo","views","reduceAnimations","renderLoading","children","minDate","maxDate","DateCalendarRoot","slot","overridesResolver","styles","display","flexDirection","height","DateCalendarViewTransitionContainer","DateCalendar","forwardRef","inProps","ref","_ref","_slots$calendarHeader","_slotProps$calendarHe","id","autoFocus","onViewChange","value","valueProp","defaultValue","referenceDate","referenceDateProp","defaultCalendarMonth","onChange","onYearChange","onMonthChange","shouldDisableDate","shouldDisableMonth","shouldDisableYear","view","inView","className","disabled","readOnly","disableHighlightToday","focusedView","inFocusedView","onFocusedViewChange","showDaysOutsideCurrentMonth","fixedWeekNumber","dayOfWeekFormatter","components","componentsProps","slotProps","displayWeekNumber","yearsPerRow","monthsPerRow","timezone","timezoneProp","other","handleValueChange","valueManager","setView","setFocusedView","goToNextView","setValueAndGoToNextView","calendarState","changeFocusedDay","changeMonth","handleChangeMonth","isDateDisabled","onMonthSwitchingAnimationEnd","minDateWithDisabled","maxDateWithDisabled","gridLabelId","hasFocus","CalendarHeader","calendarHeader","calendarHeaderProps","elementType","externalSlotProps","additionalProps","currentMonth","newMonth","direction","labelId","handleDateMonthChange","newDate","startOfMonth","endOfMonth","closestEnabledDate","date","isBefore","isAfter","handleDateYearChange","startOfYear","endOfYear","handleSelectedDayChange","day","useEffect","isValid","baseDateValidationProps","commonViewProps","prevOpenViewRef","useRef","current","selectedDays","useMemo","transKey","isViewFocused","onFocusedDayChange","onSelectedDaysChange","process","env","NODE_ENV","propTypes","bool","object","string","func","any","number","oneOf","sx","oneOfType","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"onViewChange\", \"value\", \"defaultValue\", \"referenceDate\", \"disableFuture\", \"disablePast\", \"defaultCalendarMonth\", \"onChange\", \"onYearChange\", \"onMonthChange\", \"reduceAnimations\", \"shouldDisableDate\", \"shouldDisableMonth\", \"shouldDisableYear\", \"view\", \"views\", \"openTo\", \"className\", \"disabled\", \"readOnly\", \"minDate\", \"maxDate\", \"disableHighlightToday\", \"focusedView\", \"onFocusedViewChange\", \"showDaysOutsideCurrentMonth\", \"fixedWeekNumber\", \"dayOfWeekFormatter\", \"components\", \"componentsProps\", \"slots\", \"slotProps\", \"loading\", \"renderLoading\", \"displayWeekNumber\", \"yearsPerRow\", \"monthsPerRow\", \"timezone\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSlotProps } from '@mui/base/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useCalendarState } from './useCalendarState';\nimport { useDefaultDates, useUtils } from '../internals/hooks/useUtils';\nimport { PickersFadeTransitionGroup } from './PickersFadeTransitionGroup';\nimport { DayCalendar } from './DayCalendar';\nimport { MonthCalendar } from '../MonthCalendar';\nimport { YearCalendar } from '../YearCalendar';\nimport { useViews } from '../internals/hooks/useViews';\nimport { PickersCalendarHeader } from '../PickersCalendarHeader';\nimport { findClosestEnabledDate, applyDefaultDate, mergeDateAndTime } from '../internals/utils/date-utils';\nimport { PickerViewRoot } from '../internals/components/PickerViewRoot';\nimport { useDefaultReduceAnimations } from '../internals/hooks/useDefaultReduceAnimations';\nimport { getDateCalendarUtilityClass } from './dateCalendarClasses';\nimport { useControlledValueWithTimezone } from '../internals/hooks/useValueWithTimezone';\nimport { singleItemValueManager } from '../internals/utils/valueManagers';\nimport { VIEW_HEIGHT } from '../internals/constants/dimensions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    viewTransitionContainer: ['viewTransitionContainer']\n  };\n  return composeClasses(slots, getDateCalendarUtilityClass, classes);\n};\nfunction useDateCalendarDefaultizedProps(props, name) {\n  var _themeProps$loading, _themeProps$disablePa, _themeProps$disableFu, _themeProps$openTo, _themeProps$views, _themeProps$reduceAni, _themeProps$renderLoa;\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const defaultReduceAnimations = useDefaultReduceAnimations();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  return _extends({}, themeProps, {\n    loading: (_themeProps$loading = themeProps.loading) != null ? _themeProps$loading : false,\n    disablePast: (_themeProps$disablePa = themeProps.disablePast) != null ? _themeProps$disablePa : false,\n    disableFuture: (_themeProps$disableFu = themeProps.disableFuture) != null ? _themeProps$disableFu : false,\n    openTo: (_themeProps$openTo = themeProps.openTo) != null ? _themeProps$openTo : 'day',\n    views: (_themeProps$views = themeProps.views) != null ? _themeProps$views : ['year', 'day'],\n    reduceAnimations: (_themeProps$reduceAni = themeProps.reduceAnimations) != null ? _themeProps$reduceAni : defaultReduceAnimations,\n    renderLoading: (_themeProps$renderLoa = themeProps.renderLoading) != null ? _themeProps$renderLoa : () => /*#__PURE__*/_jsx(\"span\", {\n      children: \"...\"\n    }),\n    minDate: applyDefaultDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(utils, themeProps.maxDate, defaultDates.maxDate)\n  });\n}\nconst DateCalendarRoot = styled(PickerViewRoot, {\n  name: 'MuiDateCalendar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  height: VIEW_HEIGHT\n});\nconst DateCalendarViewTransitionContainer = styled(PickersFadeTransitionGroup, {\n  name: 'MuiDateCalendar',\n  slot: 'ViewTransitionContainer',\n  overridesResolver: (props, styles) => styles.viewTransitionContainer\n})({});\n/**\n * Demos:\n *\n * - [DatePicker](https://mui.com/x/react-date-pickers/date-picker/)\n * - [DateCalendar](https://mui.com/x/react-date-pickers/date-calendar/)\n * - [Validation](https://mui.com/x/react-date-pickers/validation/)\n *\n * API:\n *\n * - [DateCalendar API](https://mui.com/x/api/date-pickers/date-calendar/)\n */\nexport const DateCalendar = /*#__PURE__*/React.forwardRef(function DateCalendar(inProps, ref) {\n  var _ref, _slots$calendarHeader, _slotProps$calendarHe;\n  const utils = useUtils();\n  const id = useId();\n  const props = useDateCalendarDefaultizedProps(inProps, 'MuiDateCalendar');\n  const {\n      autoFocus,\n      onViewChange,\n      value: valueProp,\n      defaultValue,\n      referenceDate: referenceDateProp,\n      disableFuture,\n      disablePast,\n      defaultCalendarMonth,\n      onChange,\n      onYearChange,\n      onMonthChange,\n      reduceAnimations,\n      shouldDisableDate,\n      shouldDisableMonth,\n      shouldDisableYear,\n      view: inView,\n      views,\n      openTo,\n      className,\n      disabled,\n      readOnly,\n      minDate,\n      maxDate,\n      disableHighlightToday,\n      focusedView: inFocusedView,\n      onFocusedViewChange,\n      showDaysOutsideCurrentMonth,\n      fixedWeekNumber,\n      dayOfWeekFormatter,\n      components,\n      componentsProps,\n      slots,\n      slotProps,\n      loading,\n      renderLoading,\n      displayWeekNumber,\n      yearsPerRow,\n      monthsPerRow,\n      timezone: timezoneProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    value,\n    handleValueChange,\n    timezone\n  } = useControlledValueWithTimezone({\n    name: 'DateCalendar',\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue,\n    onChange,\n    valueManager: singleItemValueManager\n  });\n  const {\n    view,\n    setView,\n    focusedView,\n    setFocusedView,\n    goToNextView,\n    setValueAndGoToNextView\n  } = useViews({\n    view: inView,\n    views,\n    openTo,\n    onChange: handleValueChange,\n    onViewChange,\n    autoFocus,\n    focusedView: inFocusedView,\n    onFocusedViewChange\n  });\n  const {\n    referenceDate,\n    calendarState,\n    changeFocusedDay,\n    changeMonth,\n    handleChangeMonth,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd\n  } = useCalendarState({\n    value,\n    defaultCalendarMonth,\n    referenceDate: referenceDateProp,\n    reduceAnimations,\n    onMonthChange,\n    minDate,\n    maxDate,\n    shouldDisableDate,\n    disablePast,\n    disableFuture,\n    timezone\n  });\n\n  // When disabled, limit the view to the selected date\n  const minDateWithDisabled = disabled && value || minDate;\n  const maxDateWithDisabled = disabled && value || maxDate;\n  const gridLabelId = `${id}-grid-label`;\n  const hasFocus = focusedView !== null;\n  const CalendarHeader = (_ref = (_slots$calendarHeader = slots == null ? void 0 : slots.calendarHeader) != null ? _slots$calendarHeader : components == null ? void 0 : components.CalendarHeader) != null ? _ref : PickersCalendarHeader;\n  const calendarHeaderProps = useSlotProps({\n    elementType: CalendarHeader,\n    externalSlotProps: (_slotProps$calendarHe = slotProps == null ? void 0 : slotProps.calendarHeader) != null ? _slotProps$calendarHe : componentsProps == null ? void 0 : componentsProps.calendarHeader,\n    additionalProps: {\n      views,\n      view,\n      currentMonth: calendarState.currentMonth,\n      onViewChange: setView,\n      onMonthChange: (newMonth, direction) => handleChangeMonth({\n        newMonth,\n        direction\n      }),\n      minDate: minDateWithDisabled,\n      maxDate: maxDateWithDisabled,\n      disabled,\n      disablePast,\n      disableFuture,\n      reduceAnimations,\n      timezone,\n      labelId: gridLabelId,\n      slots,\n      slotProps\n    },\n    ownerState: props\n  });\n  const handleDateMonthChange = useEventCallback(newDate => {\n    const startOfMonth = utils.startOfMonth(newDate);\n    const endOfMonth = utils.endOfMonth(newDate);\n    const closestEnabledDate = isDateDisabled(newDate) ? findClosestEnabledDate({\n      utils,\n      date: newDate,\n      minDate: utils.isBefore(minDate, startOfMonth) ? startOfMonth : minDate,\n      maxDate: utils.isAfter(maxDate, endOfMonth) ? endOfMonth : maxDate,\n      disablePast,\n      disableFuture,\n      isDateDisabled,\n      timezone\n    }) : newDate;\n    if (closestEnabledDate) {\n      setValueAndGoToNextView(closestEnabledDate, 'finish');\n      onMonthChange == null || onMonthChange(startOfMonth);\n    } else {\n      goToNextView();\n      changeMonth(startOfMonth);\n    }\n    changeFocusedDay(closestEnabledDate, true);\n  });\n  const handleDateYearChange = useEventCallback(newDate => {\n    const startOfYear = utils.startOfYear(newDate);\n    const endOfYear = utils.endOfYear(newDate);\n    const closestEnabledDate = isDateDisabled(newDate) ? findClosestEnabledDate({\n      utils,\n      date: newDate,\n      minDate: utils.isBefore(minDate, startOfYear) ? startOfYear : minDate,\n      maxDate: utils.isAfter(maxDate, endOfYear) ? endOfYear : maxDate,\n      disablePast,\n      disableFuture,\n      isDateDisabled,\n      timezone\n    }) : newDate;\n    if (closestEnabledDate) {\n      setValueAndGoToNextView(closestEnabledDate, 'finish');\n      onYearChange == null || onYearChange(closestEnabledDate);\n    } else {\n      goToNextView();\n      changeMonth(startOfYear);\n    }\n    changeFocusedDay(closestEnabledDate, true);\n  });\n  const handleSelectedDayChange = useEventCallback(day => {\n    if (day) {\n      // If there is a date already selected, then we want to keep its time\n      return handleValueChange(mergeDateAndTime(utils, day, value != null ? value : referenceDate), 'finish', view);\n    }\n    return handleValueChange(day, 'finish', view);\n  });\n  React.useEffect(() => {\n    if (value != null && utils.isValid(value)) {\n      changeMonth(value);\n    }\n  }, [value]); // eslint-disable-line\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const baseDateValidationProps = {\n    disablePast,\n    disableFuture,\n    maxDate,\n    minDate\n  };\n  const commonViewProps = {\n    disableHighlightToday,\n    readOnly,\n    disabled,\n    timezone,\n    gridLabelId\n  };\n  const prevOpenViewRef = React.useRef(view);\n  React.useEffect(() => {\n    // If the view change and the focus was on the previous view\n    // Then we update the focus.\n    if (prevOpenViewRef.current === view) {\n      return;\n    }\n    if (focusedView === prevOpenViewRef.current) {\n      setFocusedView(view, true);\n    }\n    prevOpenViewRef.current = view;\n  }, [focusedView, setFocusedView, view]);\n  const selectedDays = React.useMemo(() => [value], [value]);\n  return /*#__PURE__*/_jsxs(DateCalendarRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(CalendarHeader, _extends({}, calendarHeaderProps)), /*#__PURE__*/_jsx(DateCalendarViewTransitionContainer, {\n      reduceAnimations: reduceAnimations,\n      className: classes.viewTransitionContainer,\n      transKey: view,\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        children: [view === 'year' && /*#__PURE__*/_jsx(YearCalendar, _extends({}, baseDateValidationProps, commonViewProps, {\n          value: value,\n          onChange: handleDateYearChange,\n          shouldDisableYear: shouldDisableYear,\n          hasFocus: hasFocus,\n          onFocusedViewChange: isViewFocused => setFocusedView('year', isViewFocused),\n          yearsPerRow: yearsPerRow,\n          referenceDate: referenceDate\n        })), view === 'month' && /*#__PURE__*/_jsx(MonthCalendar, _extends({}, baseDateValidationProps, commonViewProps, {\n          hasFocus: hasFocus,\n          className: className,\n          value: value,\n          onChange: handleDateMonthChange,\n          shouldDisableMonth: shouldDisableMonth,\n          onFocusedViewChange: isViewFocused => setFocusedView('month', isViewFocused),\n          monthsPerRow: monthsPerRow,\n          referenceDate: referenceDate\n        })), view === 'day' && /*#__PURE__*/_jsx(DayCalendar, _extends({}, calendarState, baseDateValidationProps, commonViewProps, {\n          onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n          onFocusedDayChange: changeFocusedDay,\n          reduceAnimations: reduceAnimations,\n          selectedDays: selectedDays,\n          onSelectedDaysChange: handleSelectedDayChange,\n          shouldDisableDate: shouldDisableDate,\n          shouldDisableMonth: shouldDisableMonth,\n          shouldDisableYear: shouldDisableYear,\n          hasFocus: hasFocus,\n          onFocusedViewChange: isViewFocused => setFocusedView('day', isViewFocused),\n          showDaysOutsideCurrentMonth: showDaysOutsideCurrentMonth,\n          fixedWeekNumber: fixedWeekNumber,\n          dayOfWeekFormatter: dayOfWeekFormatter,\n          displayWeekNumber: displayWeekNumber,\n          components: components,\n          componentsProps: componentsProps,\n          slots: slots,\n          slotProps: slotProps,\n          loading: loading,\n          renderLoading: renderLoading\n        }))]\n      })\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DateCalendar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: PropTypes.bool,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  /**\n   * Overridable components.\n   * @default {}\n   * @deprecated Please use `slots`.\n   */\n  components: PropTypes.object,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   * @deprecated Please use `slotProps`.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.\n   * @param {TDate} date The date of the day of week provided by the adapter.\n   * @returns {string} The name to display.\n   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n  /**\n   * Default calendar month displayed when `value` and `defaultValue` are empty.\n   * @deprecated Consider using `referenceDate` instead.\n   */\n  defaultCalendarMonth: PropTypes.any,\n  /**\n   * The default selected value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  /**\n   * If `true`, the week number will be display in the calendar.\n   */\n  displayWeekNumber: PropTypes.bool,\n  /**\n   * Calendar will show more weeks in order to match this value.\n   * Put it to 6 for having fix number of week in Gregorian calendars\n   * @default undefined\n   */\n  fixedWeekNumber: PropTypes.number,\n  /**\n   * Controlled focused view.\n   */\n  focusedView: PropTypes.oneOf(['day', 'month', 'year']),\n  /**\n   * If `true`, calls `renderLoading` instead of rendering the day calendar.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.any,\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.any,\n  /**\n   * Months rendered per row.\n   * @default 3\n   */\n  monthsPerRow: PropTypes.oneOf([3, 4]),\n  /**\n   * Callback fired when the value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TView The view type. Will be one of date or time views.\n   * @param {TValue} value The new value.\n   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.\n   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired on focused view change.\n   * @template TView\n   * @param {TView} view The new view to focus or not.\n   * @param {boolean} hasFocus `true` if the view should be focused.\n   */\n  onFocusedViewChange: PropTypes.func,\n  /**\n   * Callback fired on month change.\n   * @template TDate\n   * @param {TDate} month The new month.\n   */\n  onMonthChange: PropTypes.func,\n  /**\n   * Callback fired on view change.\n   * @template TView\n   * @param {TView} view The new view.\n   */\n  onViewChange: PropTypes.func,\n  /**\n   * Callback fired on year change.\n   * @template TDate\n   * @param {TDate} year The new year.\n   */\n  onYearChange: PropTypes.func,\n  /**\n   * The default visible view.\n   * Used when the component view is not controlled.\n   * Must be a valid option from `views` list.\n   */\n  openTo: PropTypes.oneOf(['day', 'month', 'year']),\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, disable heavy animations.\n   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13\n   */\n  reduceAnimations: PropTypes.bool,\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`.\n   */\n  referenceDate: PropTypes.any,\n  /**\n   * Component displaying when passed `loading` true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @returns {boolean} If `true` the date will be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n  /**\n   * Disable specific month.\n   * @template TDate\n   * @param {TDate} month The month to test.\n   * @returns {boolean} If `true`, the month will be disabled.\n   */\n  shouldDisableMonth: PropTypes.func,\n  /**\n   * Disable specific year.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} If `true`, the year will be disabled.\n   */\n  shouldDisableYear: PropTypes.func,\n  /**\n   * If `true`, days outside the current month are rendered:\n   *\n   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.\n   *\n   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.\n   *\n   * - ignored if `calendars` equals more than `1` on range pickers.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.any,\n  /**\n   * The visible view.\n   * Used when the component view is controlled.\n   * Must be a valid option from `views` list.\n   */\n  view: PropTypes.oneOf(['day', 'month', 'year']),\n  /**\n   * Available views.\n   */\n  views: PropTypes.arrayOf(PropTypes.oneOf(['day', 'month', 'year']).isRequired),\n  /**\n   * Years rendered per row.\n   * @default 3\n   */\n  yearsPerRow: PropTypes.oneOf([3, 4])\n} : void 0;"]},"metadata":{},"sourceType":"module"}