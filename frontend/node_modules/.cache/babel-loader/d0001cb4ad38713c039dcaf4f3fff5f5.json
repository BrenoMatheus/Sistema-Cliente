{"ast":null,"code":"import * as React from 'react';\nimport { singleItemValueManager } from '../utils/valueManagers';\nimport { getTodayDate } from '../utils/date-utils';\nimport { SECTION_TYPE_GRANULARITY } from '../utils/getDefaultReferenceDate';\nexport const useClockReferenceDate = _ref => {\n  let {\n    value,\n    referenceDate: referenceDateProp,\n    utils,\n    props,\n    timezone\n  } = _ref;\n  const referenceDate = React.useMemo(() => singleItemValueManager.getInitialReferenceValue({\n    value,\n    utils,\n    props,\n    referenceDate: referenceDateProp,\n    granularity: SECTION_TYPE_GRANULARITY.day,\n    timezone,\n    getTodayDate: () => getTodayDate(utils, timezone, 'date')\n  }), // We only want to compute the reference date on mount.\n  [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  return value != null ? value : referenceDate;\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/internals/hooks/useClockReferenceDate.js"],"names":["React","singleItemValueManager","getTodayDate","SECTION_TYPE_GRANULARITY","useClockReferenceDate","value","referenceDate","referenceDateProp","utils","props","timezone","useMemo","getInitialReferenceValue","granularity","day"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,sBAAT,QAAuC,wBAAvC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,wBAAT,QAAyC,kCAAzC;AACA,OAAO,MAAMC,qBAAqB,GAAG,QAM/B;AAAA,MANgC;AACpCC,IAAAA,KADoC;AAEpCC,IAAAA,aAAa,EAAEC,iBAFqB;AAGpCC,IAAAA,KAHoC;AAIpCC,IAAAA,KAJoC;AAKpCC,IAAAA;AALoC,GAMhC;AACJ,QAAMJ,aAAa,GAAGN,KAAK,CAACW,OAAN,CAAc,MAAMV,sBAAsB,CAACW,wBAAvB,CAAgD;AACxFP,IAAAA,KADwF;AAExFG,IAAAA,KAFwF;AAGxFC,IAAAA,KAHwF;AAIxFH,IAAAA,aAAa,EAAEC,iBAJyE;AAKxFM,IAAAA,WAAW,EAAEV,wBAAwB,CAACW,GALkD;AAMxFJ,IAAAA,QANwF;AAOxFR,IAAAA,YAAY,EAAE,MAAMA,YAAY,CAACM,KAAD,EAAQE,QAAR,EAAkB,MAAlB;AAPwD,GAAhD,CAApB,EAStB;AACA,IAVsB,CAUnB;AAVmB,GAAtB;AAaA,SAAOL,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBC,aAA/B;AACD,CArBM","sourcesContent":["import * as React from 'react';\nimport { singleItemValueManager } from '../utils/valueManagers';\nimport { getTodayDate } from '../utils/date-utils';\nimport { SECTION_TYPE_GRANULARITY } from '../utils/getDefaultReferenceDate';\nexport const useClockReferenceDate = ({\n  value,\n  referenceDate: referenceDateProp,\n  utils,\n  props,\n  timezone\n}) => {\n  const referenceDate = React.useMemo(() => singleItemValueManager.getInitialReferenceValue({\n    value,\n    utils,\n    props,\n    referenceDate: referenceDateProp,\n    granularity: SECTION_TYPE_GRANULARITY.day,\n    timezone,\n    getTodayDate: () => getTodayDate(utils, timezone, 'date')\n  }),\n  // We only want to compute the reference date on mount.\n  [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  return value != null ? value : referenceDate;\n};"]},"metadata":{},"sourceType":"module"}