{"ast":null,"code":"import _asyncToGenerator from\"/home/brenomatheus/Documentos/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/brenomatheus/Documentos/frontend/node_modules/@babel/runtime/regenerator/index.js\";import{Api}from'../axios-config';var auth=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(email,password){var _yield$Api$post,data,_response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return Api().post('/entrar',{email:email,senha:password});case 3:_yield$Api$post=_context.sent;data=_yield$Api$post.data;if(!data){_context.next=7;break;}return _context.abrupt(\"return\",data);case 7:return _context.abrupt(\"return\",new Error('Erro no login.'));case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.error(_context.t0);return _context.abrupt(\"return\",new Error(((_response=_context.t0.response)===null||_response===void 0?void 0:_response.data.errors.default)||'Erro no login.'));case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function auth(_x,_x2){return _ref.apply(this,arguments);};}();export var AuthService={auth:auth};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/shared/services/api/auth/AuthService.ts"],"names":["Api","auth","email","password","post","senha","data","Error","console","error","response","errors","default","AuthService"],"mappings":"2PAEA,OAASA,GAAT,KAAoB,iBAApB,CAOA,GAAMC,CAAAA,IAAI,0FAAG,iBAAOC,KAAP,CAAsBC,QAAtB,2LAEcH,CAAAA,GAAG,GAAGI,IAAN,CAAW,SAAX,CAAsB,CAAEF,KAAK,CAALA,KAAF,CAASG,KAAK,CAAEF,QAAhB,CAAtB,CAFd,sCAEDG,IAFC,iBAEDA,IAFC,KAILA,IAJK,yDAKAA,IALA,yCAQF,GAAIC,CAAAA,KAAJ,CAAU,gBAAV,CARE,4DAUTC,OAAO,CAACC,KAAR,cAVS,gCAWF,GAAIF,CAAAA,KAAJ,CAAU,wBAAsBG,QAAtB,8CAAgCJ,IAAhC,CAAqCK,MAArC,CAA4CC,OAA5C,GAAuD,gBAAjE,CAXE,uEAAH,kBAAJX,CAAAA,IAAI,gDAAV,CAeA,MAAO,IAAMY,CAAAA,WAAW,CAAG,CACzBZ,IAAI,CAAJA,IADyB,CAApB","sourcesContent":["import { AxiosError } from 'axios';\n\nimport { Api } from '../axios-config';\n\n\ninterface IAuth {\n  accessToken: string;\n}\n\nconst auth = async (email: string, password: string): Promise<IAuth | Error> => {\n  try {\n    const { data } = await Api().post('/entrar', { email, senha: password });\n\n    if (data) {\n      return data;\n    }\n\n    return new Error('Erro no login.');\n  } catch (error) {\n    console.error(error);\n    return new Error((error as AxiosError).response?.data.errors.default || 'Erro no login.');\n  }\n};\n\nexport const AuthService = {\n  auth,\n};\n"]},"metadata":{},"sourceType":"module"}