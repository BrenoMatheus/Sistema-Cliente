{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/frontend/src/shared/forms/VDateField.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport dayjs from 'dayjs';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/* type TVTextFieldProps = TextFieldProps & {\n  name: string;\n} */\nexport const VDateField = () => {\n  _s();\n\n  const [value, setValue] = React.useState(dayjs('2022-04-17')); //export const VDateField: React.FC<TVTextFieldProps> = ({ name }) => {\n  //const { fieldName, registerField, defaultValue, error, clearError } = useField(name);\n\n  /* \n    const [value, setValue] = useState<Dayjs | null>(dayjs('2022-04-17'));\n  \n    console.log(value);\n  \n    useEffect(() => {\n      registerField({\n        name: fieldName,\n        getValue: () => value,\n        setValue: (_, newValue) => setValue(newValue),\n      });\n    }, [registerField, fieldName, value]);\n   */\n\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDayjs,\n    children: /*#__PURE__*/_jsxDEV(DemoContainer, {\n      components: ['DatePicker', 'DatePicker'],\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Controlled picker\",\n        value: value,\n        onChange: newValue => setValue(newValue)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VDateField, \"FJYbb5kMPURrLJ84Wg6ZC98TyMU=\");\n\n_c = VDateField;\n\nvar _c;\n\n$RefreshReg$(_c, \"VDateField\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/shared/forms/VDateField.tsx"],"names":["React","dayjs","DemoContainer","LocalizationProvider","AdapterDayjs","DatePicker","VDateField","value","setValue","useState","newValue"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,KAAP,MAA6B,OAA7B;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,SAASC,oBAAT,QAAqC,0CAArC;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,SAASC,UAAT,QAA2B,gCAA3B;;;AAIA;AACA;AACA;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAA6BR,KAAK,CAAC,YAAD,CAAlC,CAA1B,CADgC,CAEhC;AAEE;;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,sBACE,QAAC,oBAAD;AAAsB,IAAA,WAAW,EAAEG,YAAnC;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,UAAU,EAAE,CAAC,YAAD,EAAe,YAAf,CAA3B;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,KAAK,EAAC,mBADR;AAEE,QAAA,KAAK,EAAEG,KAFT;AAGE,QAAA,QAAQ,EAAGG,QAAD,IAAcF,QAAQ,CAACE,QAAD;AAHlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/BM;;GAAMJ,U;;KAAAA,U","sourcesContent":["import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { TextFieldProps } from '@mui/material';\nimport { useField } from '@unform/core';\n\n/* type TVTextFieldProps = TextFieldProps & {\n  name: string;\n} */\n\nexport const VDateField = () => {\nconst [value, setValue] = React.useState<Dayjs | null>(dayjs('2022-04-17'));\n//export const VDateField: React.FC<TVTextFieldProps> = ({ name }) => {\n\n  //const { fieldName, registerField, defaultValue, error, clearError } = useField(name);\n/* \n  const [value, setValue] = useState<Dayjs | null>(dayjs('2022-04-17'));\n\n  console.log(value);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      getValue: () => value,\n      setValue: (_, newValue) => setValue(newValue),\n    });\n  }, [registerField, fieldName, value]);\n */\n  \n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DemoContainer components={['DatePicker', 'DatePicker']}>\n        <DatePicker\n          label=\"Controlled picker\"\n          value={value}\n          onChange={(newValue) => setValue(newValue)}\n        />\n      </DemoContainer>\n    </LocalizationProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}