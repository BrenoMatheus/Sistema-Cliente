{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/frontend/src/shared/components/login/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Box, Button, Card, CardActions, CardContent, CircularProgress, TextField, Typography } from '@mui/material';\nimport * as yup from 'yup';\nimport { useAuthContext } from '../../contexts';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().required().min(5)\n});\nexport const Login = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    isAuthenticated,\n    login\n  } = useAuthContext();\n  const [isLoading, setIsLoading] = useState(false);\n  const [passwordError, setPasswordError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n\n  const handleSubmit = () => {\n    setIsLoading(true);\n    loginSchema.validate({\n      email,\n      password\n    }, {\n      abortEarly: false\n    }).then(dadosValidados => {\n      login(dadosValidados.email, dadosValidados.password).then(() => {\n        setIsLoading(false);\n      });\n    }).catch(errors => {\n      setIsLoading(false);\n      errors.inner.forEach(error => {\n        if (error.path === 'email') {\n          setEmailError(error.message);\n        } else if (error.path === 'password') {\n          setPasswordError(error.message);\n        }\n      });\n    });\n  };\n\n  if (isAuthenticated) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 2,\n          width: 250,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"center\",\n            children: \"Identifique-se\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"email\",\n            label: \"Email\",\n            defaultValue: 'matheus@gmail.com',\n            value: email,\n            disabled: isLoading,\n            error: !!emailError,\n            helperText: emailError,\n            onKeyDown: () => setEmailError(''),\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Senha\",\n            type: \"password\",\n            defaultValue: '1234567',\n            value: password,\n            disabled: isLoading,\n            error: !!passwordError,\n            helperText: passwordError,\n            onKeyDown: () => setPasswordError(''),\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Para acessar o sistema utilize o usuario padr\\xE3o email: matheus@gmail.com senha: 1234567\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            disabled: isLoading,\n            onClick: handleSubmit,\n            endIcon: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              variant: \"indeterminate\",\n              color: \"inherit\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 36\n            }, this) : undefined,\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"rK7OrTTSZghcW0I58W+sV5ihShQ=\", false, function () {\n  return [useAuthContext];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/shared/components/login/Login.tsx"],"names":["useState","Box","Button","Card","CardActions","CardContent","CircularProgress","TextField","Typography","yup","useAuthContext","loginSchema","object","shape","email","string","required","password","min","Login","children","isAuthenticated","login","isLoading","setIsLoading","passwordError","setPasswordError","emailError","setEmailError","setPassword","setEmail","handleSubmit","validate","abortEarly","then","dadosValidados","catch","errors","inner","forEach","error","path","message","e","target","value","undefined"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Box, Button, Card, CardActions, CardContent, CircularProgress, TextField, Typography } from '@mui/material';\nimport * as yup from 'yup';\n\nimport { useAuthContext } from '../../contexts';\n\n\nconst loginSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().required().min(5),\n});\n\ninterface ILoginProps {\n  children: React.ReactNode;\n}\nexport const Login: React.FC<ILoginProps> = ({ children }) => {\n  const { isAuthenticated, login } = useAuthContext();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [passwordError, setPasswordError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n\n\n  const handleSubmit = () => {\n    setIsLoading(true);\n\n    loginSchema\n      .validate({ email, password }, { abortEarly: false })\n      .then(dadosValidados => {\n        login(dadosValidados.email, dadosValidados.password)\n          .then(() => {\n            setIsLoading(false);\n          });\n      })\n      .catch((errors: yup.ValidationError) => {\n        setIsLoading(false);\n\n        errors.inner.forEach(error => {\n          if (error.path === 'email') {\n            setEmailError(error.message);\n          } else if (error.path === 'password') {\n            setPasswordError(error.message);\n          }\n        });\n      });\n  };\n\n\n  if (isAuthenticated) return (\n    <>{children}</>\n  );\n\n  return (\n    <Box width='100vw' height='100vh' display='flex' alignItems='center' justifyContent='center'>\n\n      <Card>\n        <CardContent>\n          <Box display='flex' flexDirection='column' gap={2} width={250}>\n            <Typography variant='h6' align='center'>Identifique-se</Typography>\n\n            <TextField\n              fullWidth\n              type='email'\n              label='Email'\n              defaultValue={'matheus@gmail.com'}\n              value={email}\n              disabled={isLoading}\n              error={!!emailError}\n              helperText={emailError}\n              onKeyDown={() => setEmailError('')}\n              onChange={e => setEmail(e.target.value)}\n            />\n\n            <TextField\n              fullWidth\n              label='Senha'\n              type='password'\n              defaultValue={'1234567'}\n              value={password}\n              disabled={isLoading}\n              error={!!passwordError}\n              helperText={passwordError}\n              onKeyDown={() => setPasswordError('')}\n              onChange={e => setPassword(e.target.value)}\n            />\n          </Box>\n          <span>Para acessar o sistema utilize o usuario padrão email: matheus@gmail.com senha: 1234567</span>\n        </CardContent>\n        <CardActions>\n          <Box width='100%' display='flex' justifyContent='center'>\n\n            <Button\n              variant='contained'\n              disabled={isLoading}\n              onClick={handleSubmit}\n              endIcon={isLoading ? <CircularProgress variant='indeterminate' color='inherit' size={20} /> : undefined}\n            >\n              Entrar\n            </Button>\n\n          </Box>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}