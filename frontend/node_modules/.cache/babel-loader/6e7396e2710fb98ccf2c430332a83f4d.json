{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/Projeto advocacia/frontend/src/pages/dashboard/components/Maps.tsx\",\n    _s = $RefreshSig$();\n\nimport { APIProvider, Map, useMap, useMapsLibrary } from '@vis.gl/react-google-maps';\nimport { Environment } from '../../../shared/environment';\nimport { useEffect, useState } from 'react';\nimport { ClientsService } from '../../../shared/services/api/clients/ClientsService';\nimport { useDebounce } from '../../../shared/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst originDestination = {\n  lat: localStorage.getItem('lat'),\n  lng: localStorage.getItem('long')\n};\nconst waypoints = [{\n  location: new google.maps.LatLng(-23.5485, -46.771645),\n  stopover: true\n}, {\n  location: new google.maps.LatLng(-23.57603, -46.76492),\n  stopover: true\n}, {\n  location: new google.maps.LatLng(-23.57858, -46.667236),\n  stopover: true\n}, {\n  location: new google.maps.LatLng(-23.52, -46.727364),\n  stopover: true\n}];\nexport const MapsDashboard = () => {\n  const position = {\n    lat: 43.6532,\n    lng: -79.3832\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(APIProvider, {\n      apiKey: Environment.API_KEY,\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        center: position,\n        defaultZoom: 9,\n        mapId: Environment.ID_MAP,\n        fullscreenControl: false,\n        children: /*#__PURE__*/_jsxDEV(Directions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = MapsDashboard;\n\nfunction Directions() {\n  _s();\n\n  var _leg$distance, _leg$duration;\n\n  const {\n    debounce\n  } = useDebounce();\n  const [rows, setRows] = useState([]);\n  const map = useMap();\n  const routesLibrary = useMapsLibrary('routes');\n  const [directionsService, setDirectionsService] = useState();\n  const [directionsRenderer, setDirectionsRenderer] = useState();\n  const [routes, setRoutes] = useState([]);\n  const [routeIndex, setRouteIndex] = useState(0);\n  const selected = routes[routeIndex];\n  const leg = selected === null || selected === void 0 ? void 0 : selected.legs[0];\n  useEffect(() => {\n    if (!routesLibrary || !map) return;\n    setDirectionsService(new routesLibrary.DirectionsService());\n    setDirectionsRenderer(new routesLibrary.DirectionsRenderer({\n      map\n    }));\n  }, [routesLibrary, map]);\n  useEffect(() => {\n    if (!directionsService || !directionsRenderer) return;\n    ClientsService.getAll().then(result => {\n      if (result instanceof Error) {\n        alert(result.message);\n      } else {\n        setRows(result.data);\n        /* if (rows.filter((row) => row.status = true)) {\n              console.log('Aberta');\n            } */\n\n        directionsService.route({\n          origin: '100 Front St, Toronto ON',\n          destination: '500 College St, Toronto ON',\n          travelMode: google.maps.TravelMode.DRIVING,\n          provideRouteAlternatives: true\n        }).then(response => {\n          directionsRenderer.setDirections(response);\n          setRoutes(response.routes);\n        });\n      }\n    });\n  }, [directionsService, directionsRenderer]);\n  useEffect(() => {\n    if (!directionsRenderer) return;\n    directionsRenderer.setRouteIndex(routeIndex);\n  }, [routeIndex, directionsRenderer]);\n  if (!leg) return null;\n  console.log(originDestination);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      boxShadow: '0 0 4px rgba(0,0,0,.15)',\n      backgroundColor: 'black',\n      color: 'white',\n      cursor: 'auto',\n      fontSize: '14px',\n      lineHeight: '18px',\n      outline: '0',\n      padding: '12px 24px',\n      position: 'absolute',\n      right: '0',\n      top: '0',\n      width: '284px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selected.summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [leg.start_address.split(',')[0], \" para \", leg.end_address.split(',')[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Distancia: \", (_leg$distance = leg.distance) === null || _leg$distance === void 0 ? void 0 : _leg$distance.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Dura\\xE7\\xE3o: \", (_leg$duration = leg.duration) === null || _leg$duration === void 0 ? void 0 : _leg$duration.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Outras rotas:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: routes.map((route, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setRouteIndex(index),\n          children: route.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, route.summary, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Directions, \"mNFiVQuI1q08AwnsG65OMmztpAw=\", false, function () {\n  return [useDebounce, useMap, useMapsLibrary];\n});\n\n_c2 = Directions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapsDashboard\");\n$RefreshReg$(_c2, \"Directions\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/Projeto advocacia/frontend/src/pages/dashboard/components/Maps.tsx"],"names":["APIProvider","Map","useMap","useMapsLibrary","Environment","useEffect","useState","ClientsService","useDebounce","originDestination","lat","localStorage","getItem","lng","waypoints","location","google","maps","LatLng","stopover","MapsDashboard","position","height","width","API_KEY","ID_MAP","Directions","debounce","rows","setRows","map","routesLibrary","directionsService","setDirectionsService","directionsRenderer","setDirectionsRenderer","routes","setRoutes","routeIndex","setRouteIndex","selected","leg","legs","DirectionsService","DirectionsRenderer","getAll","then","result","Error","alert","message","data","route","origin","destination","travelMode","TravelMode","DRIVING","provideRouteAlternatives","response","setDirections","console","log","boxShadow","backgroundColor","color","cursor","fontSize","lineHeight","outline","padding","right","top","summary","start_address","split","end_address","distance","text","duration","index"],"mappings":"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","sourcesContent":["import {\n  APIProvider,\n  Map,\n  useMap,\n  useMapsLibrary,\n} from '@vis.gl/react-google-maps';\nimport { Environment } from '../../../shared/environment';\nimport { useEffect, useState } from 'react';\nimport {\n  IListClient,\n  ClientsService,\n} from '../../../shared/services/api/clients/ClientsService';\nimport { useDebounce } from '../../../shared/hooks';\nconst originDestination = {\n  lat: localStorage.getItem('lat'),\n  lng: localStorage.getItem('long'),\n};\n\nconst waypoints = [\n  { location: new google.maps.LatLng(-23.5485, -46.771645), stopover: true },\n  { location: new google.maps.LatLng(-23.57603, -46.76492), stopover: true },\n  { location: new google.maps.LatLng(-23.57858, -46.667236), stopover: true },\n  { location: new google.maps.LatLng(-23.52, -46.727364), stopover: true },\n];\n\nexport const MapsDashboard: React.FC = () => {\n  const position = { lat: 43.6532, lng: -79.3832 };\n\n  return (\n    <div style={{ height: '100vh', width: '100%' }}>\n      <APIProvider apiKey={Environment.API_KEY}>\n        <Map\n          center={position}\n          defaultZoom={9}\n          mapId={Environment.ID_MAP}\n          fullscreenControl={false}\n        >\n          <Directions />\n        </Map>\n      </APIProvider>\n    </div>\n  );\n};\n\nfunction Directions() {\n  const { debounce } = useDebounce();\n  const [rows, setRows] = useState<IListClient[]>([]);\n  const map = useMap();\n  const routesLibrary = useMapsLibrary('routes');\n  const [directionsService, setDirectionsService] =\n    useState<google.maps.DirectionsService>();\n  const [directionsRenderer, setDirectionsRenderer] =\n    useState<google.maps.DirectionsRenderer>();\n  const [routes, setRoutes] = useState<google.maps.DirectionsRoute[]>([]);\n  const [routeIndex, setRouteIndex] = useState(0);\n  const selected = routes[routeIndex];\n  const leg = selected?.legs[0];\n\n  useEffect(() => {\n    if (!routesLibrary || !map) return;\n    setDirectionsService(new routesLibrary.DirectionsService());\n    setDirectionsRenderer(new routesLibrary.DirectionsRenderer({ map }));\n  }, [routesLibrary, map]);\n\n  useEffect(() => {\n    if (!directionsService || !directionsRenderer) return;\n    ClientsService.getAll().then((result) => {\n      if (result instanceof Error) {\n        alert(result.message);\n      } else {\n        setRows(result.data);\n\n        /* if (rows.filter((row) => row.status = true)) {\n              console.log('Aberta');\n            } */\n\n        directionsService\n          .route({\n            origin: '100 Front St, Toronto ON',\n            destination: '500 College St, Toronto ON',\n            travelMode: google.maps.TravelMode.DRIVING,\n            provideRouteAlternatives: true,\n          })\n          .then((response) => {\n            directionsRenderer.setDirections(response);\n            setRoutes(response.routes);\n          });\n      }\n    });\n  }, [directionsService, directionsRenderer]);\n\n  useEffect(() => {\n    if (!directionsRenderer) return;\n    directionsRenderer.setRouteIndex(routeIndex);\n  }, [routeIndex, directionsRenderer]);\n\n  if (!leg) return null;\n  console.log(originDestination);\n  return (\n    <div\n      style={{\n        boxShadow: '0 0 4px rgba(0,0,0,.15)',\n        backgroundColor: 'black',\n        color: 'white',\n        cursor: 'auto',\n        fontSize: '14px',\n        lineHeight: '18px',\n        outline: '0',\n        padding: '12px 24px',\n        position: 'absolute',\n        right: '0',\n        top: '0',\n        width: '284px',\n      }}\n    >\n      <h2>{selected.summary}</h2>\n      <p>\n        {leg.start_address.split(',')[0]} para {leg.end_address.split(',')[0]}\n      </p>\n      <p>Distancia: {leg.distance?.text}</p>\n      <p>Duração: {leg.duration?.text}</p>\n\n      <h2>Outras rotas:</h2>\n      <ul>\n        {routes.map((route, index) => (\n          <li key={route.summary}>\n            <button onClick={() => setRouteIndex(index)}>\n              {route.summary}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}