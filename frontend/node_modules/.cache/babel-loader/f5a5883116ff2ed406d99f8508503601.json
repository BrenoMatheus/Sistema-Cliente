{"ast":null,"code":"import { usePickerValue } from './usePickerValue';\nimport { usePickerViews } from './usePickerViews';\nimport { usePickerLayoutProps } from './usePickerLayoutProps';\nimport { buildWarning } from '../../utils/warning';\nvar warnRenderInputIsDefined = buildWarning(['The `renderInput` prop has been removed in version 6.0 of the Date and Time Pickers.', 'You can replace it with the `textField` component slot in most cases.', 'For more information, please have a look at the migration guide (https://mui.com/x/migration/migration-pickers-v5/#input-renderer-required-in-v5).']);\nexport var usePicker = function usePicker(_ref) {\n  var props = _ref.props,\n      valueManager = _ref.valueManager,\n      valueType = _ref.valueType,\n      wrapperVariant = _ref.wrapperVariant,\n      inputRef = _ref.inputRef,\n      additionalViewProps = _ref.additionalViewProps,\n      validator = _ref.validator,\n      autoFocusView = _ref.autoFocusView;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.renderInput != null) {\n      warnRenderInputIsDefined();\n    }\n  }\n\n  var pickerValueResponse = usePickerValue({\n    props: props,\n    valueManager: valueManager,\n    valueType: valueType,\n    wrapperVariant: wrapperVariant,\n    validator: validator\n  });\n  var pickerViewsResponse = usePickerViews({\n    props: props,\n    inputRef: inputRef,\n    additionalViewProps: additionalViewProps,\n    autoFocusView: autoFocusView,\n    propsFromPickerValue: pickerValueResponse.viewProps\n  });\n  var pickerLayoutResponse = usePickerLayoutProps({\n    props: props,\n    wrapperVariant: wrapperVariant,\n    propsFromPickerValue: pickerValueResponse.layoutProps,\n    propsFromPickerViews: pickerViewsResponse.layoutProps\n  });\n  return {\n    // Picker value\n    open: pickerValueResponse.open,\n    actions: pickerValueResponse.actions,\n    fieldProps: pickerValueResponse.fieldProps,\n    // Picker views\n    renderCurrentView: pickerViewsResponse.renderCurrentView,\n    hasUIView: pickerViewsResponse.hasUIView,\n    shouldRestoreFocus: pickerViewsResponse.shouldRestoreFocus,\n    // Picker layout\n    layoutProps: pickerLayoutResponse.layoutProps\n  };\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/internals/hooks/usePicker/usePicker.js"],"names":["usePickerValue","usePickerViews","usePickerLayoutProps","buildWarning","warnRenderInputIsDefined","usePicker","props","valueManager","valueType","wrapperVariant","inputRef","additionalViewProps","validator","autoFocusView","process","env","NODE_ENV","renderInput","pickerValueResponse","pickerViewsResponse","propsFromPickerValue","viewProps","pickerLayoutResponse","layoutProps","propsFromPickerViews","open","actions","fieldProps","renderCurrentView","hasUIView","shouldRestoreFocus"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,IAAMC,wBAAwB,GAAGD,YAAY,CAAC,CAAC,sFAAD,EAAyF,uEAAzF,EAAkK,oJAAlK,CAAD,CAA7C;AACA,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,OASnB;AAAA,MARJC,KAQI,QARJA,KAQI;AAAA,MAPJC,YAOI,QAPJA,YAOI;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,cAKI,QALJA,cAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,mBAGI,QAHJA,mBAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,aACI,QADJA,aACI;;AACJ,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAIV,KAAK,CAACW,WAAN,IAAqB,IAAzB,EAA+B;AAC7Bb,MAAAA,wBAAwB;AACzB;AACF;;AACD,MAAMc,mBAAmB,GAAGlB,cAAc,CAAC;AACzCM,IAAAA,KAAK,EAALA,KADyC;AAEzCC,IAAAA,YAAY,EAAZA,YAFyC;AAGzCC,IAAAA,SAAS,EAATA,SAHyC;AAIzCC,IAAAA,cAAc,EAAdA,cAJyC;AAKzCG,IAAAA,SAAS,EAATA;AALyC,GAAD,CAA1C;AAOA,MAAMO,mBAAmB,GAAGlB,cAAc,CAAC;AACzCK,IAAAA,KAAK,EAALA,KADyC;AAEzCI,IAAAA,QAAQ,EAARA,QAFyC;AAGzCC,IAAAA,mBAAmB,EAAnBA,mBAHyC;AAIzCE,IAAAA,aAAa,EAAbA,aAJyC;AAKzCO,IAAAA,oBAAoB,EAAEF,mBAAmB,CAACG;AALD,GAAD,CAA1C;AAOA,MAAMC,oBAAoB,GAAGpB,oBAAoB,CAAC;AAChDI,IAAAA,KAAK,EAALA,KADgD;AAEhDG,IAAAA,cAAc,EAAdA,cAFgD;AAGhDW,IAAAA,oBAAoB,EAAEF,mBAAmB,CAACK,WAHM;AAIhDC,IAAAA,oBAAoB,EAAEL,mBAAmB,CAACI;AAJM,GAAD,CAAjD;AAMA,SAAO;AACL;AACAE,IAAAA,IAAI,EAAEP,mBAAmB,CAACO,IAFrB;AAGLC,IAAAA,OAAO,EAAER,mBAAmB,CAACQ,OAHxB;AAILC,IAAAA,UAAU,EAAET,mBAAmB,CAACS,UAJ3B;AAKL;AACAC,IAAAA,iBAAiB,EAAET,mBAAmB,CAACS,iBANlC;AAOLC,IAAAA,SAAS,EAAEV,mBAAmB,CAACU,SAP1B;AAQLC,IAAAA,kBAAkB,EAAEX,mBAAmB,CAACW,kBARnC;AASL;AACAP,IAAAA,WAAW,EAAED,oBAAoB,CAACC;AAV7B,GAAP;AAYD,CA/CM","sourcesContent":["import { usePickerValue } from './usePickerValue';\nimport { usePickerViews } from './usePickerViews';\nimport { usePickerLayoutProps } from './usePickerLayoutProps';\nimport { buildWarning } from '../../utils/warning';\nconst warnRenderInputIsDefined = buildWarning(['The `renderInput` prop has been removed in version 6.0 of the Date and Time Pickers.', 'You can replace it with the `textField` component slot in most cases.', 'For more information, please have a look at the migration guide (https://mui.com/x/migration/migration-pickers-v5/#input-renderer-required-in-v5).']);\nexport const usePicker = ({\n  props,\n  valueManager,\n  valueType,\n  wrapperVariant,\n  inputRef,\n  additionalViewProps,\n  validator,\n  autoFocusView\n}) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.renderInput != null) {\n      warnRenderInputIsDefined();\n    }\n  }\n  const pickerValueResponse = usePickerValue({\n    props,\n    valueManager,\n    valueType,\n    wrapperVariant,\n    validator\n  });\n  const pickerViewsResponse = usePickerViews({\n    props,\n    inputRef,\n    additionalViewProps,\n    autoFocusView,\n    propsFromPickerValue: pickerValueResponse.viewProps\n  });\n  const pickerLayoutResponse = usePickerLayoutProps({\n    props,\n    wrapperVariant,\n    propsFromPickerValue: pickerValueResponse.layoutProps,\n    propsFromPickerViews: pickerViewsResponse.layoutProps\n  });\n  return {\n    // Picker value\n    open: pickerValueResponse.open,\n    actions: pickerValueResponse.actions,\n    fieldProps: pickerValueResponse.fieldProps,\n    // Picker views\n    renderCurrentView: pickerViewsResponse.renderCurrentView,\n    hasUIView: pickerViewsResponse.hasUIView,\n    shouldRestoreFocus: pickerViewsResponse.shouldRestoreFocus,\n    // Picker layout\n    layoutProps: pickerLayoutResponse.layoutProps\n  };\n};"]},"metadata":{},"sourceType":"module"}