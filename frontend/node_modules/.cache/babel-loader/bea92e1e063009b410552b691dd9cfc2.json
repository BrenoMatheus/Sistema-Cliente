{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nvar views = {\n  hours: 'heures',\n  minutes: 'minutes',\n  seconds: 'secondes',\n  meridiem: 'méridien'\n};\nvar frFRPickers = {\n  // Calendar navigation\n  previousMonth: 'Mois précédent',\n  nextMonth: 'Mois suivant',\n  // View navigation\n  openPreviousView: 'Ouvrir la vue précédente',\n  openNextView: 'Ouvrir la vue suivante',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? 'La vue année est ouverte, ouvrir la vue calendrier' : 'La vue calendrier est ouverte, ouvrir la vue année';\n  },\n  // DateRange placeholders\n  start: 'Début',\n  end: 'Fin',\n  // Action bar\n  cancelButtonLabel: 'Annuler',\n  clearButtonLabel: 'Vider',\n  okButtonLabel: 'OK',\n  todayButtonLabel: \"Aujourd'hui\",\n  // Toolbar titles\n  datePickerToolbarTitle: 'Choisir une date',\n  dateTimePickerToolbarTitle: \"Choisir la date et l'heure\",\n  timePickerToolbarTitle: \"Choisir l'heure\",\n  dateRangePickerToolbarTitle: 'Choisir la plage de dates',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    return \"Choix des \".concat(views[view], \". \").concat(time === null ? 'Aucune heure choisie' : \"L'heure choisie est \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \" heures\");\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \" minutes\");\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \" secondes\");\n  },\n  // Digital clock labels\n  selectViewText: function selectViewText(view) {\n    return \"Choisir \".concat(views[view]);\n  },\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Semaine',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: function calendarWeekNumberAriaLabelText(weekNumber) {\n    return \"Semaine \".concat(weekNumber);\n  },\n  calendarWeekNumberText: function calendarWeekNumberText(weekNumber) {\n    return \"\".concat(weekNumber);\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(value, utils) {\n    return value !== null && utils.isValid(value) ? \"Choisir la date, la date s\\xE9lectionn\\xE9e est \".concat(utils.format(value, 'fullDate')) : 'Choisir la date';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(value, utils) {\n    return value !== null && utils.isValid(value) ? \"Choisir l'heure, l'heure s\\xE9lectionn\\xE9e est \".concat(utils.format(value, 'fullTime')) : \"Choisir l'heure\";\n  },\n  // fieldClearLabel: 'Clear value',\n  // Table labels\n  timeTableLabel: \"choix de l'heure\",\n  dateTableLabel: 'choix de la date',\n  // Field section placeholders\n  fieldYearPlaceholder: function fieldYearPlaceholder(params) {\n    return 'A'.repeat(params.digitAmount);\n  },\n  fieldMonthPlaceholder: function fieldMonthPlaceholder(params) {\n    return params.contentType === 'letter' ? 'MMMM' : 'MM';\n  },\n  fieldDayPlaceholder: function fieldDayPlaceholder() {\n    return 'JJ';\n  },\n  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: function fieldHoursPlaceholder() {\n    return 'hh';\n  },\n  fieldMinutesPlaceholder: function fieldMinutesPlaceholder() {\n    return 'mm';\n  },\n  fieldSecondsPlaceholder: function fieldSecondsPlaceholder() {\n    return 'ss';\n  },\n  fieldMeridiemPlaceholder: function fieldMeridiemPlaceholder() {\n    return 'aa';\n  }\n};\nexport var frFR = getPickersLocalization(frFRPickers);","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/locales/frFR.js"],"names":["getPickersLocalization","views","hours","minutes","seconds","meridiem","frFRPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerToolbarTitle","dateTimePickerToolbarTitle","timePickerToolbarTitle","dateRangePickerToolbarTitle","clockLabelText","time","adapter","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","selectViewText","calendarWeekNumberHeaderLabel","calendarWeekNumberHeaderText","calendarWeekNumberAriaLabelText","weekNumber","calendarWeekNumberText","openDatePickerDialogue","value","utils","isValid","openTimePickerDialogue","timeTableLabel","dateTableLabel","fieldYearPlaceholder","params","repeat","digitAmount","fieldMonthPlaceholder","contentType","fieldDayPlaceholder","fieldHoursPlaceholder","fieldMinutesPlaceholder","fieldSecondsPlaceholder","fieldMeridiemPlaceholder","frFR"],"mappings":"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","sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'heures',\n  minutes: 'minutes',\n  seconds: 'secondes',\n  meridiem: 'méridien'\n};\nconst frFRPickers = {\n  // Calendar navigation\n  previousMonth: 'Mois précédent',\n  nextMonth: 'Mois suivant',\n  // View navigation\n  openPreviousView: 'Ouvrir la vue précédente',\n  openNextView: 'Ouvrir la vue suivante',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'La vue année est ouverte, ouvrir la vue calendrier' : 'La vue calendrier est ouverte, ouvrir la vue année',\n  // DateRange placeholders\n  start: 'Début',\n  end: 'Fin',\n  // Action bar\n  cancelButtonLabel: 'Annuler',\n  clearButtonLabel: 'Vider',\n  okButtonLabel: 'OK',\n  todayButtonLabel: \"Aujourd'hui\",\n  // Toolbar titles\n  datePickerToolbarTitle: 'Choisir une date',\n  dateTimePickerToolbarTitle: \"Choisir la date et l'heure\",\n  timePickerToolbarTitle: \"Choisir l'heure\",\n  dateRangePickerToolbarTitle: 'Choisir la plage de dates',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Choix des ${views[view]}. ${time === null ? 'Aucune heure choisie' : `L'heure choisie est ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} heures`,\n  minutesClockNumberText: minutes => `${minutes} minutes`,\n  secondsClockNumberText: seconds => `${seconds} secondes`,\n  // Digital clock labels\n  selectViewText: view => `Choisir ${views[view]}`,\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Semaine',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: weekNumber => `Semaine ${weekNumber}`,\n  calendarWeekNumberText: weekNumber => `${weekNumber}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Choisir la date, la date sélectionnée est ${utils.format(value, 'fullDate')}` : 'Choisir la date',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Choisir l'heure, l'heure sélectionnée est ${utils.format(value, 'fullTime')}` : \"Choisir l'heure\",\n  // fieldClearLabel: 'Clear value',\n\n  // Table labels\n  timeTableLabel: \"choix de l'heure\",\n  dateTableLabel: 'choix de la date',\n  // Field section placeholders\n  fieldYearPlaceholder: params => 'A'.repeat(params.digitAmount),\n  fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',\n  fieldDayPlaceholder: () => 'JJ',\n  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: () => 'hh',\n  fieldMinutesPlaceholder: () => 'mm',\n  fieldSecondsPlaceholder: () => 'ss',\n  fieldMeridiemPlaceholder: () => 'aa'\n};\nexport const frFR = getPickersLocalization(frFRPickers);"]},"metadata":{},"sourceType":"module"}