{"ast":null,"code":"import _toConsumableArray from \"/home/brenomatheus/Documentos/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"ampm\", \"timeStep\", \"autoFocus\", \"components\", \"componentsProps\", \"slots\", \"slotProps\", \"value\", \"defaultValue\", \"referenceDate\", \"disableIgnoringDatePartForTimeValidation\", \"maxTime\", \"minTime\", \"disableFuture\", \"disablePast\", \"minutesStep\", \"shouldDisableClock\", \"shouldDisableTime\", \"onChange\", \"view\", \"openTo\", \"onViewChange\", \"focusedView\", \"onFocusedViewChange\", \"className\", \"disabled\", \"readOnly\", \"views\", \"skipDisabled\", \"timezone\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '@mui/base/utils';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport composeClasses from '@mui/utils/composeClasses';\nimport MenuItem from '@mui/material/MenuItem';\nimport MenuList from '@mui/material/MenuList';\nimport useForkRef from '@mui/utils/useForkRef';\nimport { useUtils, useNow, useLocaleText } from '../internals/hooks/useUtils';\nimport { createIsAfterIgnoreDatePart } from '../internals/utils/time-utils';\nimport { PickerViewRoot } from '../internals/components/PickerViewRoot';\nimport { getDigitalClockUtilityClass } from './digitalClockClasses';\nimport { useViews } from '../internals/hooks/useViews';\nimport { DIGITAL_CLOCK_VIEW_HEIGHT } from '../internals/constants/dimensions';\nimport { useControlledValueWithTimezone } from '../internals/hooks/useValueWithTimezone';\nimport { singleItemValueManager } from '../internals/utils/valueManagers';\nimport { useClockReferenceDate } from '../internals/hooks/useClockReferenceDate';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root'],\n    list: ['list'],\n    item: ['item']\n  };\n  return composeClasses(slots, getDigitalClockUtilityClass, classes);\n};\n\nvar DigitalClockRoot = styled(PickerViewRoot, {\n  name: 'MuiDigitalClock',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_ref2) {\n  var ownerState = _ref2.ownerState;\n  return {\n    overflowY: 'auto',\n    width: '100%',\n    '@media (prefers-reduced-motion: no-preference)': {\n      scrollBehavior: ownerState.alreadyRendered ? 'smooth' : 'auto'\n    },\n    maxHeight: DIGITAL_CLOCK_VIEW_HEIGHT\n  };\n});\nvar DigitalClockList = styled(MenuList, {\n  name: 'MuiDigitalClock',\n  slot: 'List',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.list;\n  }\n})({\n  padding: 0\n});\nvar DigitalClockItem = styled(MenuItem, {\n  name: 'MuiDigitalClock',\n  slot: 'Item',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.item;\n  }\n})(function (_ref3) {\n  var theme = _ref3.theme;\n  return {\n    padding: '8px 16px',\n    margin: '2px 4px',\n    '&:first-of-type': {\n      marginTop: 4\n    },\n    '&:hover': {\n      backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / \").concat(theme.vars.palette.action.hoverOpacity, \")\") : alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n    },\n    '&.Mui-selected': {\n      backgroundColor: (theme.vars || theme).palette.primary.main,\n      color: (theme.vars || theme).palette.primary.contrastText,\n      '&:focus-visible, &:hover': {\n        backgroundColor: (theme.vars || theme).palette.primary.dark\n      }\n    },\n    '&.Mui-focusVisible': {\n      backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / \").concat(theme.vars.palette.action.focusOpacity, \")\") : alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\n    }\n  };\n});\n/**\n * Demos:\n *\n * - [TimePicker](https://mui.com/x/react-date-pickers/time-picker/)\n * - [DigitalClock](https://mui.com/x/react-date-pickers/digital-clock/)\n *\n * API:\n *\n * - [DigitalClock API](https://mui.com/x/api/date-pickers/digital-clock/)\n */\n\nexport var DigitalClock = /*#__PURE__*/React.forwardRef(function DigitalClock(inProps, ref) {\n  var _ref, _slots$digitalClockIt, _slotProps$digitalClo;\n\n  var utils = useUtils();\n  var containerRef = React.useRef(null);\n  var handleRef = useForkRef(ref, containerRef);\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiDigitalClock'\n  });\n\n  var _props$ampm = props.ampm,\n      ampm = _props$ampm === void 0 ? utils.is12HourCycleInCurrentLocale() : _props$ampm,\n      _props$timeStep = props.timeStep,\n      timeStep = _props$timeStep === void 0 ? 30 : _props$timeStep,\n      autoFocus = props.autoFocus,\n      components = props.components,\n      componentsProps = props.componentsProps,\n      slots = props.slots,\n      slotProps = props.slotProps,\n      valueProp = props.value,\n      defaultValue = props.defaultValue,\n      referenceDateProp = props.referenceDate,\n      _props$disableIgnorin = props.disableIgnoringDatePartForTimeValidation,\n      disableIgnoringDatePartForTimeValidation = _props$disableIgnorin === void 0 ? false : _props$disableIgnorin,\n      maxTime = props.maxTime,\n      minTime = props.minTime,\n      disableFuture = props.disableFuture,\n      disablePast = props.disablePast,\n      _props$minutesStep = props.minutesStep,\n      minutesStep = _props$minutesStep === void 0 ? 1 : _props$minutesStep,\n      shouldDisableClock = props.shouldDisableClock,\n      shouldDisableTime = props.shouldDisableTime,\n      onChange = props.onChange,\n      inView = props.view,\n      openTo = props.openTo,\n      onViewChange = props.onViewChange,\n      focusedView = props.focusedView,\n      onFocusedViewChange = props.onFocusedViewChange,\n      className = props.className,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      _props$views = props.views,\n      views = _props$views === void 0 ? ['hours'] : _props$views,\n      _props$skipDisabled = props.skipDisabled,\n      skipDisabled = _props$skipDisabled === void 0 ? false : _props$skipDisabled,\n      timezoneProp = props.timezone,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useControlledValueWi = useControlledValueWithTimezone({\n    name: 'DigitalClock',\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue: defaultValue,\n    onChange: onChange,\n    valueManager: singleItemValueManager\n  }),\n      value = _useControlledValueWi.value,\n      handleRawValueChange = _useControlledValueWi.handleValueChange,\n      timezone = _useControlledValueWi.timezone;\n\n  var localeText = useLocaleText();\n  var now = useNow(timezone);\n  var ownerState = React.useMemo(function () {\n    return _extends({}, props, {\n      alreadyRendered: !!containerRef.current\n    });\n  }, [props]);\n  var classes = useUtilityClasses(ownerState);\n  var ClockItem = (_ref = (_slots$digitalClockIt = slots == null ? void 0 : slots.digitalClockItem) != null ? _slots$digitalClockIt : components == null ? void 0 : components.DigitalClockItem) != null ? _ref : DigitalClockItem;\n  var clockItemProps = useSlotProps({\n    elementType: ClockItem,\n    externalSlotProps: (_slotProps$digitalClo = slotProps == null ? void 0 : slotProps.digitalClockItem) != null ? _slotProps$digitalClo : componentsProps == null ? void 0 : componentsProps.digitalClockItem,\n    ownerState: {},\n    className: classes.item\n  });\n  var valueOrReferenceDate = useClockReferenceDate({\n    value: value,\n    referenceDate: referenceDateProp,\n    utils: utils,\n    props: props,\n    timezone: timezone\n  });\n  var handleValueChange = useEventCallback(function (newValue) {\n    return handleRawValueChange(newValue, 'finish', 'hours');\n  });\n\n  var _useViews = useViews({\n    view: inView,\n    views: views,\n    openTo: openTo,\n    onViewChange: onViewChange,\n    onChange: handleValueChange,\n    focusedView: focusedView,\n    onFocusedViewChange: onFocusedViewChange\n  }),\n      setValueAndGoToNextView = _useViews.setValueAndGoToNextView;\n\n  var handleItemSelect = useEventCallback(function (newValue) {\n    setValueAndGoToNextView(newValue, 'finish');\n  });\n  React.useEffect(function () {\n    if (containerRef.current === null) {\n      return;\n    }\n\n    var selectedItem = containerRef.current.querySelector('[role=\"listbox\"] [role=\"option\"][aria-selected=\"true\"]');\n\n    if (!selectedItem) {\n      return;\n    }\n\n    var offsetTop = selectedItem.offsetTop; // Subtracting the 4px of extra margin intended for the first visible section item\n\n    containerRef.current.scrollTop = offsetTop - 4;\n  });\n  var isTimeDisabled = React.useCallback(function (valueToCheck) {\n    var isAfter = createIsAfterIgnoreDatePart(disableIgnoringDatePartForTimeValidation, utils);\n\n    var containsValidTime = function containsValidTime() {\n      if (minTime && isAfter(minTime, valueToCheck)) {\n        return false;\n      }\n\n      if (maxTime && isAfter(valueToCheck, maxTime)) {\n        return false;\n      }\n\n      if (disableFuture && isAfter(valueToCheck, now)) {\n        return false;\n      }\n\n      if (disablePast && isAfter(now, valueToCheck)) {\n        return false;\n      }\n\n      return true;\n    };\n\n    var isValidValue = function isValidValue() {\n      if (utils.getMinutes(valueToCheck) % minutesStep !== 0) {\n        return false;\n      }\n\n      if (shouldDisableClock != null && shouldDisableClock(utils.toJsDate(valueToCheck).getTime(), 'hours')) {\n        return false;\n      }\n\n      if (shouldDisableTime) {\n        return !shouldDisableTime(valueToCheck, 'hours');\n      }\n\n      return true;\n    };\n\n    return !containsValidTime() || !isValidValue();\n  }, [disableIgnoringDatePartForTimeValidation, utils, minTime, maxTime, disableFuture, now, disablePast, minutesStep, shouldDisableClock, shouldDisableTime]);\n  var timeOptions = React.useMemo(function () {\n    var startOfDay = utils.startOfDay(valueOrReferenceDate);\n    return [startOfDay].concat(_toConsumableArray(Array.from({\n      length: Math.ceil(24 * 60 / timeStep) - 1\n    }, function (_, index) {\n      return utils.addMinutes(startOfDay, timeStep * (index + 1));\n    })));\n  }, [valueOrReferenceDate, timeStep, utils]);\n  return /*#__PURE__*/_jsx(DigitalClockRoot, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(DigitalClockList, {\n      autoFocusItem: autoFocus || !!focusedView,\n      role: \"listbox\",\n      \"aria-label\": localeText.timePickerToolbarTitle,\n      className: classes.list,\n      children: timeOptions.map(function (option) {\n        if (skipDisabled && isTimeDisabled(option)) {\n          return null;\n        }\n\n        var isSelected = utils.isEqual(option, value);\n        return /*#__PURE__*/_jsx(ClockItem, _extends({\n          onClick: function onClick() {\n            return !readOnly && handleItemSelect(option);\n          },\n          selected: isSelected,\n          disabled: disabled || isTimeDisabled(option),\n          disableRipple: readOnly,\n          role: \"option\" // aria-readonly is not supported here and does not have any effect\n          ,\n          \"aria-disabled\": readOnly,\n          \"aria-selected\": isSelected\n        }, clockItemProps, {\n          children: utils.format(option, ampm ? 'fullTime12h' : 'fullTime24h')\n        }), utils.toISO(option));\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DigitalClock.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * 12h/24h view for hour selection clock.\n   * @default `utils.is12HourCycleInCurrentLocale()`\n   */\n  ampm: PropTypes.bool,\n\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  className: PropTypes.string,\n\n  /**\n   * Overrideable components.\n   * @default {}\n   * @deprecated Please use `slots`.\n   */\n  components: PropTypes.object,\n\n  /**\n   * The props used for each component slot.\n   * @default {}\n   * @deprecated Please use `slotProps`.\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * The default selected value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the picker views and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * Do not ignore date part when validating min/max time.\n   * @default false\n   */\n  disableIgnoringDatePartForTimeValidation: PropTypes.bool,\n\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Controlled focused view.\n   */\n  focusedView: PropTypes.oneOf(['hours']),\n\n  /**\n   * Maximal selectable time.\n   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.\n   */\n  maxTime: PropTypes.any,\n\n  /**\n   * Minimal selectable time.\n   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.\n   */\n  minTime: PropTypes.any,\n\n  /**\n   * Step over minutes.\n   * @default 1\n   */\n  minutesStep: PropTypes.number,\n\n  /**\n   * Callback fired when the value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TView The view type. Will be one of date or time views.\n   * @param {TValue} value The new value.\n   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.\n   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired on focused view change.\n   * @template TView\n   * @param {TView} view The new view to focus or not.\n   * @param {boolean} hasFocus `true` if the view should be focused.\n   */\n  onFocusedViewChange: PropTypes.func,\n\n  /**\n   * Callback fired on view change.\n   * @template TView\n   * @param {TView} view The new view.\n   */\n  onViewChange: PropTypes.func,\n\n  /**\n   * The default visible view.\n   * Used when the component view is not controlled.\n   * Must be a valid option from `views` list.\n   */\n  openTo: PropTypes.oneOf(['hours']),\n\n  /**\n   * If `true`, the picker views and text field are read-only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid time using the validation props, except callbacks such as `shouldDisableTime`.\n   */\n  referenceDate: PropTypes.any,\n\n  /**\n   * Disable specific clock time.\n   * @param {number} clockValue The value to check.\n   * @param {TimeView} view The clock type of the timeValue.\n   * @returns {boolean} If `true` the time will be disabled.\n   * @deprecated Consider using `shouldDisableTime`.\n   */\n  shouldDisableClock: PropTypes.func,\n\n  /**\n   * Disable specific time.\n   * @template TDate\n   * @param {TDate} value The value to check.\n   * @param {TimeView} view The clock type of the timeValue.\n   * @returns {boolean} If `true` the time will be disabled.\n   */\n  shouldDisableTime: PropTypes.func,\n\n  /**\n   * If `true`, disabled digital clock items will not be rendered.\n   * @default false\n   */\n  skipDisabled: PropTypes.bool,\n\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n\n  /**\n   * Overrideable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The time steps between two time options.\n   * For example, if `timeStep = 45`, then the available time options will be `[00:00, 00:45, 01:30, 02:15, 03:00, etc.]`.\n   * @default 30\n   */\n  timeStep: PropTypes.number,\n\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The visible view.\n   * Used when the component view is controlled.\n   * Must be a valid option from `views` list.\n   */\n  view: PropTypes.oneOf(['hours']),\n\n  /**\n   * Available views.\n   */\n  views: PropTypes.arrayOf(PropTypes.oneOf(['hours']))\n} : void 0;","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/DigitalClock/DigitalClock.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","clsx","PropTypes","useSlotProps","alpha","styled","useThemeProps","useEventCallback","composeClasses","MenuItem","MenuList","useForkRef","useUtils","useNow","useLocaleText","createIsAfterIgnoreDatePart","PickerViewRoot","getDigitalClockUtilityClass","useViews","DIGITAL_CLOCK_VIEW_HEIGHT","useControlledValueWithTimezone","singleItemValueManager","useClockReferenceDate","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","list","item","DigitalClockRoot","name","slot","overridesResolver","props","styles","overflowY","width","scrollBehavior","alreadyRendered","maxHeight","DigitalClockList","padding","DigitalClockItem","theme","margin","marginTop","backgroundColor","vars","palette","primary","mainChannel","action","hoverOpacity","main","color","contrastText","dark","focusOpacity","DigitalClock","forwardRef","inProps","ref","_ref","_slots$digitalClockIt","_slotProps$digitalClo","utils","containerRef","useRef","handleRef","ampm","is12HourCycleInCurrentLocale","timeStep","autoFocus","components","componentsProps","slotProps","valueProp","value","defaultValue","referenceDateProp","referenceDate","disableIgnoringDatePartForTimeValidation","maxTime","minTime","disableFuture","disablePast","minutesStep","shouldDisableClock","shouldDisableTime","onChange","inView","view","openTo","onViewChange","focusedView","onFocusedViewChange","className","disabled","readOnly","views","skipDisabled","timezoneProp","timezone","other","valueManager","handleRawValueChange","handleValueChange","localeText","now","useMemo","current","ClockItem","digitalClockItem","clockItemProps","elementType","externalSlotProps","valueOrReferenceDate","newValue","setValueAndGoToNextView","handleItemSelect","useEffect","selectedItem","querySelector","offsetTop","scrollTop","isTimeDisabled","useCallback","valueToCheck","isAfter","containsValidTime","isValidValue","getMinutes","toJsDate","getTime","timeOptions","startOfDay","Array","from","length","Math","ceil","_","index","addMinutes","children","autoFocusItem","role","timePickerToolbarTitle","map","option","isSelected","isEqual","onClick","selected","disableRipple","format","toISO","process","env","NODE_ENV","propTypes","bool","object","string","any","oneOf","number","func","sx","oneOfType","arrayOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ampm\", \"timeStep\", \"autoFocus\", \"components\", \"componentsProps\", \"slots\", \"slotProps\", \"value\", \"defaultValue\", \"referenceDate\", \"disableIgnoringDatePartForTimeValidation\", \"maxTime\", \"minTime\", \"disableFuture\", \"disablePast\", \"minutesStep\", \"shouldDisableClock\", \"shouldDisableTime\", \"onChange\", \"view\", \"openTo\", \"onViewChange\", \"focusedView\", \"onFocusedViewChange\", \"className\", \"disabled\", \"readOnly\", \"views\", \"skipDisabled\", \"timezone\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '@mui/base/utils';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport composeClasses from '@mui/utils/composeClasses';\nimport MenuItem from '@mui/material/MenuItem';\nimport MenuList from '@mui/material/MenuList';\nimport useForkRef from '@mui/utils/useForkRef';\nimport { useUtils, useNow, useLocaleText } from '../internals/hooks/useUtils';\nimport { createIsAfterIgnoreDatePart } from '../internals/utils/time-utils';\nimport { PickerViewRoot } from '../internals/components/PickerViewRoot';\nimport { getDigitalClockUtilityClass } from './digitalClockClasses';\nimport { useViews } from '../internals/hooks/useViews';\nimport { DIGITAL_CLOCK_VIEW_HEIGHT } from '../internals/constants/dimensions';\nimport { useControlledValueWithTimezone } from '../internals/hooks/useValueWithTimezone';\nimport { singleItemValueManager } from '../internals/utils/valueManagers';\nimport { useClockReferenceDate } from '../internals/hooks/useClockReferenceDate';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    list: ['list'],\n    item: ['item']\n  };\n  return composeClasses(slots, getDigitalClockUtilityClass, classes);\n};\nconst DigitalClockRoot = styled(PickerViewRoot, {\n  name: 'MuiDigitalClock',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState\n}) => ({\n  overflowY: 'auto',\n  width: '100%',\n  '@media (prefers-reduced-motion: no-preference)': {\n    scrollBehavior: ownerState.alreadyRendered ? 'smooth' : 'auto'\n  },\n  maxHeight: DIGITAL_CLOCK_VIEW_HEIGHT\n}));\nconst DigitalClockList = styled(MenuList, {\n  name: 'MuiDigitalClock',\n  slot: 'List',\n  overridesResolver: (props, styles) => styles.list\n})({\n  padding: 0\n});\nconst DigitalClockItem = styled(MenuItem, {\n  name: 'MuiDigitalClock',\n  slot: 'Item',\n  overridesResolver: (props, styles) => styles.item\n})(({\n  theme\n}) => ({\n  padding: '8px 16px',\n  margin: '2px 4px',\n  '&:first-of-type': {\n    marginTop: 4\n  },\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n  },\n  '&.Mui-selected': {\n    backgroundColor: (theme.vars || theme).palette.primary.main,\n    color: (theme.vars || theme).palette.primary.contrastText,\n    '&:focus-visible, &:hover': {\n      backgroundColor: (theme.vars || theme).palette.primary.dark\n    }\n  },\n  '&.Mui-focusVisible': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.focusOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\n  }\n}));\n/**\n * Demos:\n *\n * - [TimePicker](https://mui.com/x/react-date-pickers/time-picker/)\n * - [DigitalClock](https://mui.com/x/react-date-pickers/digital-clock/)\n *\n * API:\n *\n * - [DigitalClock API](https://mui.com/x/api/date-pickers/digital-clock/)\n */\nexport const DigitalClock = /*#__PURE__*/React.forwardRef(function DigitalClock(inProps, ref) {\n  var _ref, _slots$digitalClockIt, _slotProps$digitalClo;\n  const utils = useUtils();\n  const containerRef = React.useRef(null);\n  const handleRef = useForkRef(ref, containerRef);\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDigitalClock'\n  });\n  const {\n      ampm = utils.is12HourCycleInCurrentLocale(),\n      timeStep = 30,\n      autoFocus,\n      components,\n      componentsProps,\n      slots,\n      slotProps,\n      value: valueProp,\n      defaultValue,\n      referenceDate: referenceDateProp,\n      disableIgnoringDatePartForTimeValidation = false,\n      maxTime,\n      minTime,\n      disableFuture,\n      disablePast,\n      minutesStep = 1,\n      shouldDisableClock,\n      shouldDisableTime,\n      onChange,\n      view: inView,\n      openTo,\n      onViewChange,\n      focusedView,\n      onFocusedViewChange,\n      className,\n      disabled,\n      readOnly,\n      views = ['hours'],\n      skipDisabled = false,\n      timezone: timezoneProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    value,\n    handleValueChange: handleRawValueChange,\n    timezone\n  } = useControlledValueWithTimezone({\n    name: 'DigitalClock',\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue,\n    onChange,\n    valueManager: singleItemValueManager\n  });\n  const localeText = useLocaleText();\n  const now = useNow(timezone);\n  const ownerState = React.useMemo(() => _extends({}, props, {\n    alreadyRendered: !!containerRef.current\n  }), [props]);\n  const classes = useUtilityClasses(ownerState);\n  const ClockItem = (_ref = (_slots$digitalClockIt = slots == null ? void 0 : slots.digitalClockItem) != null ? _slots$digitalClockIt : components == null ? void 0 : components.DigitalClockItem) != null ? _ref : DigitalClockItem;\n  const clockItemProps = useSlotProps({\n    elementType: ClockItem,\n    externalSlotProps: (_slotProps$digitalClo = slotProps == null ? void 0 : slotProps.digitalClockItem) != null ? _slotProps$digitalClo : componentsProps == null ? void 0 : componentsProps.digitalClockItem,\n    ownerState: {},\n    className: classes.item\n  });\n  const valueOrReferenceDate = useClockReferenceDate({\n    value,\n    referenceDate: referenceDateProp,\n    utils,\n    props,\n    timezone\n  });\n  const handleValueChange = useEventCallback(newValue => handleRawValueChange(newValue, 'finish', 'hours'));\n  const {\n    setValueAndGoToNextView\n  } = useViews({\n    view: inView,\n    views,\n    openTo,\n    onViewChange,\n    onChange: handleValueChange,\n    focusedView,\n    onFocusedViewChange\n  });\n  const handleItemSelect = useEventCallback(newValue => {\n    setValueAndGoToNextView(newValue, 'finish');\n  });\n  React.useEffect(() => {\n    if (containerRef.current === null) {\n      return;\n    }\n    const selectedItem = containerRef.current.querySelector('[role=\"listbox\"] [role=\"option\"][aria-selected=\"true\"]');\n    if (!selectedItem) {\n      return;\n    }\n    const offsetTop = selectedItem.offsetTop;\n\n    // Subtracting the 4px of extra margin intended for the first visible section item\n    containerRef.current.scrollTop = offsetTop - 4;\n  });\n  const isTimeDisabled = React.useCallback(valueToCheck => {\n    const isAfter = createIsAfterIgnoreDatePart(disableIgnoringDatePartForTimeValidation, utils);\n    const containsValidTime = () => {\n      if (minTime && isAfter(minTime, valueToCheck)) {\n        return false;\n      }\n      if (maxTime && isAfter(valueToCheck, maxTime)) {\n        return false;\n      }\n      if (disableFuture && isAfter(valueToCheck, now)) {\n        return false;\n      }\n      if (disablePast && isAfter(now, valueToCheck)) {\n        return false;\n      }\n      return true;\n    };\n    const isValidValue = () => {\n      if (utils.getMinutes(valueToCheck) % minutesStep !== 0) {\n        return false;\n      }\n      if (shouldDisableClock != null && shouldDisableClock(utils.toJsDate(valueToCheck).getTime(), 'hours')) {\n        return false;\n      }\n      if (shouldDisableTime) {\n        return !shouldDisableTime(valueToCheck, 'hours');\n      }\n      return true;\n    };\n    return !containsValidTime() || !isValidValue();\n  }, [disableIgnoringDatePartForTimeValidation, utils, minTime, maxTime, disableFuture, now, disablePast, minutesStep, shouldDisableClock, shouldDisableTime]);\n  const timeOptions = React.useMemo(() => {\n    const startOfDay = utils.startOfDay(valueOrReferenceDate);\n    return [startOfDay, ...Array.from({\n      length: Math.ceil(24 * 60 / timeStep) - 1\n    }, (_, index) => utils.addMinutes(startOfDay, timeStep * (index + 1)))];\n  }, [valueOrReferenceDate, timeStep, utils]);\n  return /*#__PURE__*/_jsx(DigitalClockRoot, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(DigitalClockList, {\n      autoFocusItem: autoFocus || !!focusedView,\n      role: \"listbox\",\n      \"aria-label\": localeText.timePickerToolbarTitle,\n      className: classes.list,\n      children: timeOptions.map(option => {\n        if (skipDisabled && isTimeDisabled(option)) {\n          return null;\n        }\n        const isSelected = utils.isEqual(option, value);\n        return /*#__PURE__*/_jsx(ClockItem, _extends({\n          onClick: () => !readOnly && handleItemSelect(option),\n          selected: isSelected,\n          disabled: disabled || isTimeDisabled(option),\n          disableRipple: readOnly,\n          role: \"option\"\n          // aria-readonly is not supported here and does not have any effect\n          ,\n          \"aria-disabled\": readOnly,\n          \"aria-selected\": isSelected\n        }, clockItemProps, {\n          children: utils.format(option, ampm ? 'fullTime12h' : 'fullTime24h')\n        }), utils.toISO(option));\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DigitalClock.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * 12h/24h view for hour selection clock.\n   * @default `utils.is12HourCycleInCurrentLocale()`\n   */\n  ampm: PropTypes.bool,\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  /**\n   * Overrideable components.\n   * @default {}\n   * @deprecated Please use `slots`.\n   */\n  components: PropTypes.object,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   * @deprecated Please use `slotProps`.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * The default selected value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the picker views and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * Do not ignore date part when validating min/max time.\n   * @default false\n   */\n  disableIgnoringDatePartForTimeValidation: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  /**\n   * Controlled focused view.\n   */\n  focusedView: PropTypes.oneOf(['hours']),\n  /**\n   * Maximal selectable time.\n   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.\n   */\n  maxTime: PropTypes.any,\n  /**\n   * Minimal selectable time.\n   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.\n   */\n  minTime: PropTypes.any,\n  /**\n   * Step over minutes.\n   * @default 1\n   */\n  minutesStep: PropTypes.number,\n  /**\n   * Callback fired when the value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TView The view type. Will be one of date or time views.\n   * @param {TValue} value The new value.\n   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.\n   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired on focused view change.\n   * @template TView\n   * @param {TView} view The new view to focus or not.\n   * @param {boolean} hasFocus `true` if the view should be focused.\n   */\n  onFocusedViewChange: PropTypes.func,\n  /**\n   * Callback fired on view change.\n   * @template TView\n   * @param {TView} view The new view.\n   */\n  onViewChange: PropTypes.func,\n  /**\n   * The default visible view.\n   * Used when the component view is not controlled.\n   * Must be a valid option from `views` list.\n   */\n  openTo: PropTypes.oneOf(['hours']),\n  /**\n   * If `true`, the picker views and text field are read-only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid time using the validation props, except callbacks such as `shouldDisableTime`.\n   */\n  referenceDate: PropTypes.any,\n  /**\n   * Disable specific clock time.\n   * @param {number} clockValue The value to check.\n   * @param {TimeView} view The clock type of the timeValue.\n   * @returns {boolean} If `true` the time will be disabled.\n   * @deprecated Consider using `shouldDisableTime`.\n   */\n  shouldDisableClock: PropTypes.func,\n  /**\n   * Disable specific time.\n   * @template TDate\n   * @param {TDate} value The value to check.\n   * @param {TimeView} view The clock type of the timeValue.\n   * @returns {boolean} If `true` the time will be disabled.\n   */\n  shouldDisableTime: PropTypes.func,\n  /**\n   * If `true`, disabled digital clock items will not be rendered.\n   * @default false\n   */\n  skipDisabled: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overrideable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The time steps between two time options.\n   * For example, if `timeStep = 45`, then the available time options will be `[00:00, 00:45, 01:30, 02:15, 03:00, etc.]`.\n   * @default 30\n   */\n  timeStep: PropTypes.number,\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.any,\n  /**\n   * The visible view.\n   * Used when the component view is controlled.\n   * Must be a valid option from `views` list.\n   */\n  view: PropTypes.oneOf(['hours']),\n  /**\n   * Available views.\n   */\n  views: PropTypes.arrayOf(PropTypes.oneOf(['hours']))\n} : void 0;"]},"metadata":{},"sourceType":"module"}