{"ast":null,"code":"import _toConsumableArray from \"/home/brenomatheus/Documentos/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nexport var getHourSectionOptions = function getHourSectionOptions(_ref) {\n  var now = _ref.now,\n      value = _ref.value,\n      utils = _ref.utils,\n      ampm = _ref.ampm,\n      isDisabled = _ref.isDisabled,\n      resolveAriaLabel = _ref.resolveAriaLabel,\n      timeStep = _ref.timeStep;\n  var currentHours = value ? utils.getHours(value) : null;\n  var result = [];\n\n  var isSelected = function isSelected(hour) {\n    if (currentHours === null) {\n      return false;\n    }\n\n    if (ampm) {\n      if (hour === 12) {\n        return currentHours === 12 || currentHours === 0;\n      }\n\n      return currentHours === hour || currentHours - 12 === hour;\n    }\n\n    return currentHours === hour;\n  };\n\n  var endHour = ampm ? 11 : 23;\n\n  for (var hour = 0; hour <= endHour; hour += timeStep) {\n    var label = utils.format(utils.setHours(now, hour), ampm ? 'hours12h' : 'hours24h');\n    var ariaLabel = resolveAriaLabel(parseInt(label, 10).toString());\n    label = utils.formatNumber(label);\n    result.push({\n      value: hour,\n      label: label,\n      isSelected: isSelected,\n      isDisabled: isDisabled,\n      ariaLabel: ariaLabel\n    });\n  }\n\n  return result;\n};\nexport var getTimeSectionOptions = function getTimeSectionOptions(_ref2) {\n  var value = _ref2.value,\n      utils = _ref2.utils,\n      isDisabled = _ref2.isDisabled,\n      timeStep = _ref2.timeStep,\n      resolveLabel = _ref2.resolveLabel,\n      resolveAriaLabel = _ref2.resolveAriaLabel,\n      _ref2$hasValue = _ref2.hasValue,\n      hasValue = _ref2$hasValue === void 0 ? true : _ref2$hasValue;\n\n  var isSelected = function isSelected(timeValue) {\n    if (value === null) {\n      return false;\n    }\n\n    return hasValue && value === timeValue;\n  };\n\n  return _toConsumableArray(Array.from({\n    length: Math.ceil(60 / timeStep)\n  }, function (_, index) {\n    var timeValue = timeStep * index;\n    return {\n      value: timeValue,\n      label: utils.formatNumber(resolveLabel(timeValue)),\n      isDisabled: isDisabled,\n      isSelected: isSelected,\n      ariaLabel: resolveAriaLabel(timeValue.toString())\n    };\n  }));\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/MultiSectionDigitalClock/MultiSectionDigitalClock.utils.js"],"names":["getHourSectionOptions","now","value","utils","ampm","isDisabled","resolveAriaLabel","timeStep","currentHours","getHours","result","isSelected","hour","endHour","label","format","setHours","ariaLabel","parseInt","toString","formatNumber","push","getTimeSectionOptions","resolveLabel","hasValue","timeValue","Array","from","length","Math","ceil","_","index"],"mappings":"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","sourcesContent":["export const getHourSectionOptions = ({\n  now,\n  value,\n  utils,\n  ampm,\n  isDisabled,\n  resolveAriaLabel,\n  timeStep\n}) => {\n  const currentHours = value ? utils.getHours(value) : null;\n  const result = [];\n  const isSelected = hour => {\n    if (currentHours === null) {\n      return false;\n    }\n    if (ampm) {\n      if (hour === 12) {\n        return currentHours === 12 || currentHours === 0;\n      }\n      return currentHours === hour || currentHours - 12 === hour;\n    }\n    return currentHours === hour;\n  };\n  const endHour = ampm ? 11 : 23;\n  for (let hour = 0; hour <= endHour; hour += timeStep) {\n    let label = utils.format(utils.setHours(now, hour), ampm ? 'hours12h' : 'hours24h');\n    const ariaLabel = resolveAriaLabel(parseInt(label, 10).toString());\n    label = utils.formatNumber(label);\n    result.push({\n      value: hour,\n      label,\n      isSelected,\n      isDisabled,\n      ariaLabel\n    });\n  }\n  return result;\n};\nexport const getTimeSectionOptions = ({\n  value,\n  utils,\n  isDisabled,\n  timeStep,\n  resolveLabel,\n  resolveAriaLabel,\n  hasValue = true\n}) => {\n  const isSelected = timeValue => {\n    if (value === null) {\n      return false;\n    }\n    return hasValue && value === timeValue;\n  };\n  return [...Array.from({\n    length: Math.ceil(60 / timeStep)\n  }, (_, index) => {\n    const timeValue = timeStep * index;\n    return {\n      value: timeValue,\n      label: utils.formatNumber(resolveLabel(timeValue)),\n      isDisabled,\n      isSelected,\n      ariaLabel: resolveAriaLabel(timeValue.toString())\n    };\n  })];\n};"]},"metadata":{},"sourceType":"module"}