{"ast":null,"code":"import { Environment } from \"../../../environment\";\nimport { Api } from \"../axios-config\";\n\nconst getAll = async function () {\n  let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  let filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  let id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  try {\n    const urlRelativa = `/technicians?page=${page}&limit=${Environment.LIMITE_DE_LINHAS}&filter=${filter}&id=${id}`;\n    const {\n      data,\n      headers\n    } = await Api().get(urlRelativa);\n\n    if (data) {\n      return {\n        data,\n        totalCount: Number(headers[\"x-total-count\"] || Environment.LIMITE_DE_LINHAS)\n      };\n    }\n\n    return new Error(\"Erro ao listar os registros.\");\n  } catch (error) {\n    var _response;\n\n    console.error(error);\n    return new Error(((_response = error.response) === null || _response === void 0 ? void 0 : _response.data.errors.default) || \"Erro ao listar os registros.\");\n  }\n};\n\nconst getById = async id => {\n  try {\n    const {\n      data\n    } = await Api().get(`/technicians/${id}`);\n\n    if (data) {\n      return data;\n    }\n\n    return new Error(\"Erro ao consultar o registro.\");\n  } catch (error) {\n    var _response2;\n\n    console.error(error);\n    return new Error(((_response2 = error.response) === null || _response2 === void 0 ? void 0 : _response2.data.errors.default) || \"Erro ao consultar o registro.\");\n  }\n};\n\nconst create = async dados => {\n  try {\n    const {\n      data\n    } = await Api().post(\"/technicians\", dados);\n\n    if (data) {\n      return data;\n    }\n\n    return new Error(\"Erro ao criar o registro.\");\n  } catch (error) {\n    var _response3;\n\n    console.error(error);\n    return new Error(((_response3 = error.response) === null || _response3 === void 0 ? void 0 : _response3.data.errors.default) || \"Erro ao criar o registro.\");\n  }\n};\n\nconst updateById = async (id, dados) => {\n  try {\n    await Api().put(`/technicians/${id}`, dados);\n  } catch (error) {\n    var _response4;\n\n    console.error(error);\n    return new Error(((_response4 = error.response) === null || _response4 === void 0 ? void 0 : _response4.data.errors.default) || \"Erro ao atualizar o registro.\");\n  }\n};\n\nconst deleteById = async id => {\n  try {\n    await Api().delete(`/technicians/${id}`);\n  } catch (error) {\n    var _response5;\n\n    return new Error(((_response5 = error.response) === null || _response5 === void 0 ? void 0 : _response5.data.errors.default) || \"Erro ao apagar o registro.\");\n  }\n};\n\nexport const TechniciansService = {\n  getAll,\n  create,\n  getById,\n  updateById,\n  deleteById\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/shared/services/api/technicians/TechniciansService.ts"],"names":["Environment","Api","getAll","page","filter","id","urlRelativa","LIMITE_DE_LINHAS","data","headers","get","totalCount","Number","Error","error","console","response","errors","default","getById","create","dados","post","updateById","put","deleteById","delete","TechniciansService"],"mappings":"AAEA,SAASA,WAAT,QAA4B,sBAA5B;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAuBA,MAAMC,MAAM,GAAG,kBAI8B;AAAA,MAH3CC,IAG2C,uEAHpC,CAGoC;AAAA,MAF3CC,MAE2C,uEAFlC,EAEkC;AAAA,MAD3CC,EAC2C,uEADtC,CACsC;;AAC3C,MAAI;AACF,UAAMC,WAAW,GAAI,qBAAoBH,IAAK,UAASH,WAAW,CAACO,gBAAiB,WAAUH,MAAO,OAAMC,EAAG,EAA9G;AAEA,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoB,MAAMR,GAAG,GAAGS,GAAN,CAAUJ,WAAV,CAAhC;;AAEA,QAAIE,IAAJ,EAAU;AACR,aAAO;AACLA,QAAAA,IADK;AAELG,QAAAA,UAAU,EAAEC,MAAM,CAChBH,OAAO,CAAC,eAAD,CAAP,IAA4BT,WAAW,CAACO,gBADxB;AAFb,OAAP;AAMD;;AAED,WAAO,IAAIM,KAAJ,CAAU,8BAAV,CAAP;AACD,GAfD,CAeE,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAO,IAAID,KAAJ,CACL,cAACC,KAAD,CAAsBE,QAAtB,wDAAgCR,IAAhC,CAAqCS,MAArC,CAA4CC,OAA5C,KACE,8BAFG,CAAP;AAID;AACF,CA3BD;;AA6BA,MAAMC,OAAO,GAAG,MAAOd,EAAP,IAA0D;AACxE,MAAI;AACF,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAMP,GAAG,GAAGS,GAAN,CAAW,gBAAeL,EAAG,EAA7B,CAAvB;;AAEA,QAAIG,IAAJ,EAAU;AACR,aAAOA,IAAP;AACD;;AAED,WAAO,IAAIK,KAAJ,CAAU,+BAAV,CAAP;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAO,IAAID,KAAJ,CACL,eAACC,KAAD,CAAsBE,QAAtB,0DAAgCR,IAAhC,CAAqCS,MAArC,CAA4CC,OAA5C,KACE,+BAFG,CAAP;AAID;AACF,CAhBD;;AAkBA,MAAME,MAAM,GAAG,MACbC,KADa,IAEe;AAC5B,MAAI;AACF,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMP,GAAG,GAAGqB,IAAN,CAAmB,cAAnB,EAAmCD,KAAnC,CAAvB;;AAEA,QAAIb,IAAJ,EAAU;AACR,aAAOA,IAAP;AACD;;AAED,WAAO,IAAIK,KAAJ,CAAU,2BAAV,CAAP;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAO,IAAID,KAAJ,CACL,eAACC,KAAD,CAAsBE,QAAtB,0DAAgCR,IAAhC,CAAqCS,MAArC,CAA4CC,OAA5C,KACE,2BAFG,CAAP;AAID;AACF,CAlBD;;AAoBA,MAAMK,UAAU,GAAG,OACjBlB,EADiB,EAEjBgB,KAFiB,KAGS;AAC1B,MAAI;AACF,UAAMpB,GAAG,GAAGuB,GAAN,CAAW,gBAAenB,EAAG,EAA7B,EAAgCgB,KAAhC,CAAN;AACD,GAFD,CAEE,OAAOP,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAO,IAAID,KAAJ,CACL,eAACC,KAAD,CAAsBE,QAAtB,0DAAgCR,IAAhC,CAAqCS,MAArC,CAA4CC,OAA5C,KACE,+BAFG,CAAP;AAID;AACF,CAbD;;AAeA,MAAMO,UAAU,GAAG,MAAOpB,EAAP,IAA6C;AAC9D,MAAI;AACF,UAAMJ,GAAG,GAAGyB,MAAN,CAAc,gBAAerB,EAAG,EAAhC,CAAN;AACD,GAFD,CAEE,OAAOS,KAAP,EAAc;AAAA;;AACd,WAAO,IAAID,KAAJ,CACL,eAACC,KAAD,CAAsBE,QAAtB,0DAAgCR,IAAhC,CAAqCS,MAArC,CAA4CC,OAA5C,KACE,4BAFG,CAAP;AAID;AACF,CATD;;AAWA,OAAO,MAAMS,kBAAkB,GAAG;AAChCzB,EAAAA,MADgC;AAEhCkB,EAAAA,MAFgC;AAGhCD,EAAAA,OAHgC;AAIhCI,EAAAA,UAJgC;AAKhCE,EAAAA;AALgC,CAA3B","sourcesContent":["import { AxiosError } from \"axios\";\n\nimport { Environment } from \"../../../environment\";\nimport { Api } from \"../axios-config\";\n\nexport interface IListTechnician {\n  id: number;\n  name: string;\n  email: string;\n  category: string;\n  description?: string;\n}\n\nexport interface IDetailTechnician {\n  id: number;\n  name: string;\n  email: string;\n  category: string;\n  description?: string;\n}\n\ntype TTechnicianTotalCount = {\n  data: IListTechnician[];\n  totalCount: number;\n};\n\nconst getAll = async (\n  page = 1,\n  filter = \"\",\n  id = 0\n): Promise<TTechnicianTotalCount | Error> => {\n  try {\n    const urlRelativa = `/technicians?page=${page}&limit=${Environment.LIMITE_DE_LINHAS}&filter=${filter}&id=${id}`;\n\n    const { data, headers } = await Api().get(urlRelativa);\n\n    if (data) {\n      return {\n        data,\n        totalCount: Number(\n          headers[\"x-total-count\"] || Environment.LIMITE_DE_LINHAS\n        ),\n      };\n    }\n\n    return new Error(\"Erro ao listar os registros.\");\n  } catch (error) {\n    console.error(error);\n    return new Error(\n      (error as AxiosError).response?.data.errors.default ||\n        \"Erro ao listar os registros.\"\n    );\n  }\n};\n\nconst getById = async (id: number): Promise<IDetailTechnician | Error> => {\n  try {\n    const { data } = await Api().get(`/technicians/${id}`);\n\n    if (data) {\n      return data;\n    }\n\n    return new Error(\"Erro ao consultar o registro.\");\n  } catch (error) {\n    console.error(error);\n    return new Error(\n      (error as AxiosError).response?.data.errors.default ||\n        \"Erro ao consultar o registro.\"\n    );\n  }\n};\n\nconst create = async (\n  dados: Omit<IDetailTechnician, \"id\">\n): Promise<number | Error> => {\n  try {\n    const { data } = await Api().post<number>(\"/technicians\", dados);\n\n    if (data) {\n      return data;\n    }\n\n    return new Error(\"Erro ao criar o registro.\");\n  } catch (error) {\n    console.error(error);\n    return new Error(\n      (error as AxiosError).response?.data.errors.default ||\n        \"Erro ao criar o registro.\"\n    );\n  }\n};\n\nconst updateById = async (\n  id: number,\n  dados: IDetailTechnician\n): Promise<void | Error> => {\n  try {\n    await Api().put(`/technicians/${id}`, dados);\n  } catch (error) {\n    console.error(error);\n    return new Error(\n      (error as AxiosError).response?.data.errors.default ||\n        \"Erro ao atualizar o registro.\"\n    );\n  }\n};\n\nconst deleteById = async (id: number): Promise<void | Error> => {\n  try {\n    await Api().delete(`/technicians/${id}`);\n  } catch (error) {\n    return new Error(\n      (error as AxiosError).response?.data.errors.default ||\n        \"Erro ao apagar o registro.\"\n    );\n  }\n};\n\nexport const TechniciansService = {\n  getAll,\n  create,\n  getById,\n  updateById,\n  deleteById,\n};\n"]},"metadata":{},"sourceType":"module"}