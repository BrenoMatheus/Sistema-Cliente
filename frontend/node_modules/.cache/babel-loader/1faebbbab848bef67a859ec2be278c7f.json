{"ast":null,"code":"export const getHourSectionOptions = _ref => {\n  let {\n    now,\n    value,\n    utils,\n    ampm,\n    isDisabled,\n    resolveAriaLabel,\n    timeStep\n  } = _ref;\n  const currentHours = value ? utils.getHours(value) : null;\n  const result = [];\n\n  const isSelected = hour => {\n    if (currentHours === null) {\n      return false;\n    }\n\n    if (ampm) {\n      if (hour === 12) {\n        return currentHours === 12 || currentHours === 0;\n      }\n\n      return currentHours === hour || currentHours - 12 === hour;\n    }\n\n    return currentHours === hour;\n  };\n\n  const endHour = ampm ? 11 : 23;\n\n  for (let hour = 0; hour <= endHour; hour += timeStep) {\n    let label = utils.format(utils.setHours(now, hour), ampm ? 'hours12h' : 'hours24h');\n    const ariaLabel = resolveAriaLabel(parseInt(label, 10).toString());\n    label = utils.formatNumber(label);\n    result.push({\n      value: hour,\n      label,\n      isSelected,\n      isDisabled,\n      ariaLabel\n    });\n  }\n\n  return result;\n};\nexport const getTimeSectionOptions = _ref2 => {\n  let {\n    value,\n    utils,\n    isDisabled,\n    timeStep,\n    resolveLabel,\n    resolveAriaLabel,\n    hasValue = true\n  } = _ref2;\n\n  const isSelected = timeValue => {\n    if (value === null) {\n      return false;\n    }\n\n    return hasValue && value === timeValue;\n  };\n\n  return [...Array.from({\n    length: Math.ceil(60 / timeStep)\n  }, (_, index) => {\n    const timeValue = timeStep * index;\n    return {\n      value: timeValue,\n      label: utils.formatNumber(resolveLabel(timeValue)),\n      isDisabled,\n      isSelected,\n      ariaLabel: resolveAriaLabel(timeValue.toString())\n    };\n  })];\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/MultiSectionDigitalClock/MultiSectionDigitalClock.utils.js"],"names":["getHourSectionOptions","now","value","utils","ampm","isDisabled","resolveAriaLabel","timeStep","currentHours","getHours","result","isSelected","hour","endHour","label","format","setHours","ariaLabel","parseInt","toString","formatNumber","push","getTimeSectionOptions","resolveLabel","hasValue","timeValue","Array","from","length","Math","ceil","_","index"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG,QAQ/B;AAAA,MARgC;AACpCC,IAAAA,GADoC;AAEpCC,IAAAA,KAFoC;AAGpCC,IAAAA,KAHoC;AAIpCC,IAAAA,IAJoC;AAKpCC,IAAAA,UALoC;AAMpCC,IAAAA,gBANoC;AAOpCC,IAAAA;AAPoC,GAQhC;AACJ,QAAMC,YAAY,GAAGN,KAAK,GAAGC,KAAK,CAACM,QAAN,CAAeP,KAAf,CAAH,GAA2B,IAArD;AACA,QAAMQ,MAAM,GAAG,EAAf;;AACA,QAAMC,UAAU,GAAGC,IAAI,IAAI;AACzB,QAAIJ,YAAY,KAAK,IAArB,EAA2B;AACzB,aAAO,KAAP;AACD;;AACD,QAAIJ,IAAJ,EAAU;AACR,UAAIQ,IAAI,KAAK,EAAb,EAAiB;AACf,eAAOJ,YAAY,KAAK,EAAjB,IAAuBA,YAAY,KAAK,CAA/C;AACD;;AACD,aAAOA,YAAY,KAAKI,IAAjB,IAAyBJ,YAAY,GAAG,EAAf,KAAsBI,IAAtD;AACD;;AACD,WAAOJ,YAAY,KAAKI,IAAxB;AACD,GAXD;;AAYA,QAAMC,OAAO,GAAGT,IAAI,GAAG,EAAH,GAAQ,EAA5B;;AACA,OAAK,IAAIQ,IAAI,GAAG,CAAhB,EAAmBA,IAAI,IAAIC,OAA3B,EAAoCD,IAAI,IAAIL,QAA5C,EAAsD;AACpD,QAAIO,KAAK,GAAGX,KAAK,CAACY,MAAN,CAAaZ,KAAK,CAACa,QAAN,CAAef,GAAf,EAAoBW,IAApB,CAAb,EAAwCR,IAAI,GAAG,UAAH,GAAgB,UAA5D,CAAZ;AACA,UAAMa,SAAS,GAAGX,gBAAgB,CAACY,QAAQ,CAACJ,KAAD,EAAQ,EAAR,CAAR,CAAoBK,QAApB,EAAD,CAAlC;AACAL,IAAAA,KAAK,GAAGX,KAAK,CAACiB,YAAN,CAAmBN,KAAnB,CAAR;AACAJ,IAAAA,MAAM,CAACW,IAAP,CAAY;AACVnB,MAAAA,KAAK,EAAEU,IADG;AAEVE,MAAAA,KAFU;AAGVH,MAAAA,UAHU;AAIVN,MAAAA,UAJU;AAKVY,MAAAA;AALU,KAAZ;AAOD;;AACD,SAAOP,MAAP;AACD,CArCM;AAsCP,OAAO,MAAMY,qBAAqB,GAAG,SAQ/B;AAAA,MARgC;AACpCpB,IAAAA,KADoC;AAEpCC,IAAAA,KAFoC;AAGpCE,IAAAA,UAHoC;AAIpCE,IAAAA,QAJoC;AAKpCgB,IAAAA,YALoC;AAMpCjB,IAAAA,gBANoC;AAOpCkB,IAAAA,QAAQ,GAAG;AAPyB,GAQhC;;AACJ,QAAMb,UAAU,GAAGc,SAAS,IAAI;AAC9B,QAAIvB,KAAK,KAAK,IAAd,EAAoB;AAClB,aAAO,KAAP;AACD;;AACD,WAAOsB,QAAQ,IAAItB,KAAK,KAAKuB,SAA7B;AACD,GALD;;AAMA,SAAO,CAAC,GAAGC,KAAK,CAACC,IAAN,CAAW;AACpBC,IAAAA,MAAM,EAAEC,IAAI,CAACC,IAAL,CAAU,KAAKvB,QAAf;AADY,GAAX,EAER,CAACwB,CAAD,EAAIC,KAAJ,KAAc;AACf,UAAMP,SAAS,GAAGlB,QAAQ,GAAGyB,KAA7B;AACA,WAAO;AACL9B,MAAAA,KAAK,EAAEuB,SADF;AAELX,MAAAA,KAAK,EAAEX,KAAK,CAACiB,YAAN,CAAmBG,YAAY,CAACE,SAAD,CAA/B,CAFF;AAGLpB,MAAAA,UAHK;AAILM,MAAAA,UAJK;AAKLM,MAAAA,SAAS,EAAEX,gBAAgB,CAACmB,SAAS,CAACN,QAAV,EAAD;AALtB,KAAP;AAOD,GAXU,CAAJ,CAAP;AAYD,CA3BM","sourcesContent":["export const getHourSectionOptions = ({\n  now,\n  value,\n  utils,\n  ampm,\n  isDisabled,\n  resolveAriaLabel,\n  timeStep\n}) => {\n  const currentHours = value ? utils.getHours(value) : null;\n  const result = [];\n  const isSelected = hour => {\n    if (currentHours === null) {\n      return false;\n    }\n    if (ampm) {\n      if (hour === 12) {\n        return currentHours === 12 || currentHours === 0;\n      }\n      return currentHours === hour || currentHours - 12 === hour;\n    }\n    return currentHours === hour;\n  };\n  const endHour = ampm ? 11 : 23;\n  for (let hour = 0; hour <= endHour; hour += timeStep) {\n    let label = utils.format(utils.setHours(now, hour), ampm ? 'hours12h' : 'hours24h');\n    const ariaLabel = resolveAriaLabel(parseInt(label, 10).toString());\n    label = utils.formatNumber(label);\n    result.push({\n      value: hour,\n      label,\n      isSelected,\n      isDisabled,\n      ariaLabel\n    });\n  }\n  return result;\n};\nexport const getTimeSectionOptions = ({\n  value,\n  utils,\n  isDisabled,\n  timeStep,\n  resolveLabel,\n  resolveAriaLabel,\n  hasValue = true\n}) => {\n  const isSelected = timeValue => {\n    if (value === null) {\n      return false;\n    }\n    return hasValue && value === timeValue;\n  };\n  return [...Array.from({\n    length: Math.ceil(60 / timeStep)\n  }, (_, index) => {\n    const timeValue = timeStep * index;\n    return {\n      value: timeValue,\n      label: utils.formatNumber(resolveLabel(timeValue)),\n      isDisabled,\n      isSelected,\n      ariaLabel: resolveAriaLabel(timeValue.toString())\n    };\n  })];\n};"]},"metadata":{},"sourceType":"module"}