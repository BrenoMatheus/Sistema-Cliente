{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'las horas',\n  minutes: 'los minutos',\n  seconds: 'los segundos',\n  meridiem: 'meridiano'\n};\nconst esESPickers = {\n  // Calendar navigation\n  previousMonth: 'Último mes',\n  nextMonth: 'Próximo mes',\n  // View navigation\n  openPreviousView: 'abrir la última vista',\n  openNextView: 'abrir la siguiente vista',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'la vista del año está abierta, cambie a la vista de calendario' : 'la vista de calendario está abierta, cambie a la vista del año',\n  // DateRange placeholders\n  start: 'Empezar',\n  end: 'Terminar',\n  // Action bar\n  cancelButtonLabel: 'Cancelar',\n  clearButtonLabel: 'Limpiar',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Hoy',\n  // Toolbar titles\n  datePickerToolbarTitle: 'Seleccionar fecha',\n  dateTimePickerToolbarTitle: 'Seleccionar fecha y hora',\n  timePickerToolbarTitle: 'Seleccionar hora',\n  dateRangePickerToolbarTitle: 'Seleccionar rango de fecha',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Seleccione ${views[view]}. ${time === null ? 'No hay hora seleccionada' : `La hora seleccionada es ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} horas`,\n  minutesClockNumberText: minutes => `${minutes} minutos`,\n  secondsClockNumberText: seconds => `${seconds} segundos`,\n  // Digital clock labels\n  selectViewText: view => `Seleccionar ${views[view]}`,\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Número de semana',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: weekNumber => `Semana ${weekNumber}`,\n  calendarWeekNumberText: weekNumber => `${weekNumber}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Elige fecha, la fecha elegida es ${utils.format(value, 'fullDate')}` : 'Elige fecha',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Elige hora, la hora elegida es ${utils.format(value, 'fullTime')}` : 'Elige hora',\n  fieldClearLabel: 'Limpiar valor',\n  // Table labels\n  timeTableLabel: 'elige hora',\n  dateTableLabel: 'elige fecha',\n  // Field section placeholders\n  fieldYearPlaceholder: params => 'A'.repeat(params.digitAmount),\n  fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',\n  fieldDayPlaceholder: () => 'DD',\n  fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: () => 'hh',\n  fieldMinutesPlaceholder: () => 'mm',\n  fieldSecondsPlaceholder: () => 'ss',\n  fieldMeridiemPlaceholder: () => 'aa'\n};\nexport const esES = getPickersLocalization(esESPickers);","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/locales/esES.js"],"names":["getPickersLocalization","views","hours","minutes","seconds","meridiem","esESPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerToolbarTitle","dateTimePickerToolbarTitle","timePickerToolbarTitle","dateRangePickerToolbarTitle","clockLabelText","time","adapter","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","selectViewText","calendarWeekNumberHeaderLabel","calendarWeekNumberHeaderText","calendarWeekNumberAriaLabelText","weekNumber","calendarWeekNumberText","openDatePickerDialogue","value","utils","isValid","openTimePickerDialogue","fieldClearLabel","timeTableLabel","dateTableLabel","fieldYearPlaceholder","params","repeat","digitAmount","fieldMonthPlaceholder","contentType","fieldDayPlaceholder","fieldWeekDayPlaceholder","fieldHoursPlaceholder","fieldMinutesPlaceholder","fieldSecondsPlaceholder","fieldMeridiemPlaceholder","esES"],"mappings":"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","sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'las horas',\n  minutes: 'los minutos',\n  seconds: 'los segundos',\n  meridiem: 'meridiano'\n};\nconst esESPickers = {\n  // Calendar navigation\n  previousMonth: 'Último mes',\n  nextMonth: 'Próximo mes',\n  // View navigation\n  openPreviousView: 'abrir la última vista',\n  openNextView: 'abrir la siguiente vista',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'la vista del año está abierta, cambie a la vista de calendario' : 'la vista de calendario está abierta, cambie a la vista del año',\n  // DateRange placeholders\n  start: 'Empezar',\n  end: 'Terminar',\n  // Action bar\n  cancelButtonLabel: 'Cancelar',\n  clearButtonLabel: 'Limpiar',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Hoy',\n  // Toolbar titles\n  datePickerToolbarTitle: 'Seleccionar fecha',\n  dateTimePickerToolbarTitle: 'Seleccionar fecha y hora',\n  timePickerToolbarTitle: 'Seleccionar hora',\n  dateRangePickerToolbarTitle: 'Seleccionar rango de fecha',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Seleccione ${views[view]}. ${time === null ? 'No hay hora seleccionada' : `La hora seleccionada es ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} horas`,\n  minutesClockNumberText: minutes => `${minutes} minutos`,\n  secondsClockNumberText: seconds => `${seconds} segundos`,\n  // Digital clock labels\n  selectViewText: view => `Seleccionar ${views[view]}`,\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Número de semana',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: weekNumber => `Semana ${weekNumber}`,\n  calendarWeekNumberText: weekNumber => `${weekNumber}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Elige fecha, la fecha elegida es ${utils.format(value, 'fullDate')}` : 'Elige fecha',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Elige hora, la hora elegida es ${utils.format(value, 'fullTime')}` : 'Elige hora',\n  fieldClearLabel: 'Limpiar valor',\n  // Table labels\n  timeTableLabel: 'elige hora',\n  dateTableLabel: 'elige fecha',\n  // Field section placeholders\n  fieldYearPlaceholder: params => 'A'.repeat(params.digitAmount),\n  fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',\n  fieldDayPlaceholder: () => 'DD',\n  fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: () => 'hh',\n  fieldMinutesPlaceholder: () => 'mm',\n  fieldSecondsPlaceholder: () => 'ss',\n  fieldMeridiemPlaceholder: () => 'aa'\n};\nexport const esES = getPickersLocalization(esESPickers);"]},"metadata":{},"sourceType":"module"}