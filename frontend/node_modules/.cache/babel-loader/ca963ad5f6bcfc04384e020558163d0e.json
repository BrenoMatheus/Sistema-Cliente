{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/Projeto advocacia/frontend/src/pages/dashboard/components/Maps.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { APIProvider, Map, useMap, useMapsLibrary } from '@vis.gl/react-google-maps';\nimport { Environment } from '../../../shared/environment';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MapsDashboard = () => {\n  _s();\n\n  const position = {\n    lat: 53.54992,\n    lng: 10.00678\n  };\n  const [open, setOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(APIProvider, {\n      apiKey: Environment.API_KEY,\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        center: position,\n        defaultZoom: 10,\n        mapId: Environment.ID_MAP,\n        children: /*#__PURE__*/_jsxDEV(Directions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MapsDashboard, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = MapsDashboard;\n\nfunction Directions() {\n  _s2();\n\n  const map = useMap();\n  const routesLibrary = useMapsLibrary('routes');\n  const [directionsService, setDirectionsService] = useState();\n  const [directionsRenderer, setDirectionsRenderer] = useState();\n  useEffect(() => {\n    if (!routesLibrary || !map) return;\n    setDirectionsService(new routesLibrary.DirectionsService());\n    setDirectionsRenderer(new routesLibrary.DirectionsRenderer({\n      map\n    }));\n  }, [routesLibrary, map]);\n  console.log(directionsService);\n  return null;\n}\n\n_s2(Directions, \"+2iEAndnX0C+bcqcaMbX5PNu5JM=\", false, function () {\n  return [useMap, useMapsLibrary];\n});\n\n_c2 = Directions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapsDashboard\");\n$RefreshReg$(_c2, \"Directions\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/Projeto advocacia/frontend/src/pages/dashboard/components/Maps.tsx"],"names":["APIProvider","Map","useMap","useMapsLibrary","Environment","useEffect","useState","MapsDashboard","position","lat","lng","open","setOpen","API_KEY","ID_MAP","Directions","map","routesLibrary","directionsService","setDirectionsService","directionsRenderer","setDirectionsRenderer","DirectionsService","DirectionsRenderer","console","log"],"mappings":";;;;AACA,SACEA,WADF,EAGEC,GAHF,EAKEC,MALF,EAMEC,cANF,QAOO,2BAPP;AAQA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,OAAO,MAAMC,aAAuB,GAAG,MAAM;AAAA;;AAC3C,QAAMC,QAAQ,GAAG;AAAEC,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAAjB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AAEA,sBACE;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEF,WAAW,CAACS,OAAjC;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,MAAM,EAAEL,QAAb;AAAuB,QAAA,WAAW,EAAE,EAApC;AAAwC,QAAA,KAAK,EAAEJ,WAAW,CAACU,MAA3D;AAAA,+BAOE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD,CAnBM;;GAAMP,a;;KAAAA,a;;AAqBb,SAASQ,UAAT,GAAsB;AAAA;;AACpB,QAAMC,GAAG,GAAGd,MAAM,EAAlB;AACA,QAAMe,aAAa,GAAGd,cAAc,CAAC,QAAD,CAApC;AACA,QAAM,CAACe,iBAAD,EAAoBC,oBAApB,IACJb,QAAQ,EADV;AAEA,QAAM,CAACc,kBAAD,EAAqBC,qBAArB,IACJf,QAAQ,EADV;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACY,aAAD,IAAkB,CAACD,GAAvB,EAA4B;AAC5BG,IAAAA,oBAAoB,CAAC,IAAIF,aAAa,CAACK,iBAAlB,EAAD,CAApB;AACAD,IAAAA,qBAAqB,CAAC,IAAIJ,aAAa,CAACM,kBAAlB,CAAqC;AAAEP,MAAAA;AAAF,KAArC,CAAD,CAArB;AACD,GAJQ,EAIN,CAACC,aAAD,EAAgBD,GAAhB,CAJM,CAAT;AAMAQ,EAAAA,OAAO,CAACC,GAAR,CAAYP,iBAAZ;AAEA,SAAO,IAAP;AACD;;IAjBQH,U;UACKb,M,EACUC,c;;;MAFfY,U","sourcesContent":["import { Grid, Paper } from '@mui/material';\nimport {\n  APIProvider,\n  InfoWindow,\n  Map,\n  Marker,\n  useMap,\n  useMapsLibrary,\n} from '@vis.gl/react-google-maps';\nimport { Environment } from '../../../shared/environment';\nimport { useEffect, useState } from 'react';\n\nexport const MapsDashboard: React.FC = () => {\n  const position = { lat: 53.54992, lng: 10.00678 };\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <APIProvider apiKey={Environment.API_KEY}>\n        <Map center={position} defaultZoom={10} mapId={Environment.ID_MAP}>\n          {/* <Marker position={position} onClick={() => setOpen(true)} />\n          {open && (\n            <InfoWindow position={position} onCloseClick={() => setOpen(false)}>\n              <p>Cliente 1</p>\n            </InfoWindow>\n          )} */}\n          <Directions />\n        </Map>\n      </APIProvider>\n    </>\n  );\n};\n\nfunction Directions() {\n  const map = useMap();\n  const routesLibrary = useMapsLibrary('routes');\n  const [directionsService, setDirectionsService] =\n    useState<google.maps.DirectionsService>();\n  const [directionsRenderer, setDirectionsRenderer] =\n    useState<google.maps.DirectionsRenderer>();\n\n  useEffect(() => {\n    if (!routesLibrary || !map) return;\n    setDirectionsService(new routesLibrary.DirectionsService());\n    setDirectionsRenderer(new routesLibrary.DirectionsRenderer({ map }));\n  }, [routesLibrary, map]);\n\n  console.log(directionsService);\n\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}