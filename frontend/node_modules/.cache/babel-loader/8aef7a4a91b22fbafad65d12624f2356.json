{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/AutoCompleteItem.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { Autocomplete, CircularProgress, TextField } from '@mui/material';\nimport { ItemsService } from '../../../../shared/services/api/items/ItemsService';\nimport { useDebounce } from '../../../../shared/hooks';\nimport { useField } from '@unform/core';\nimport { changedItemID, setChangedItemID } from './list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AutoCompleteItem = _ref => {\n  _s();\n\n  let {\n    isExternalLoading = false,\n    itemID,\n    dados\n  } = _ref;\n  const {\n    fieldName,\n    registerField,\n    defaultValue,\n    error,\n    clearError\n  } = useField('itemID');\n  const {\n    debounce\n  } = useDebounce();\n  const [selectedItemId, setSelectedItemId] = useState(itemID || defaultValue);\n  const [opcoesItem, setOpcoesItem] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [buscaItem, setBuscaItem] = useState('');\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      getValue: () => selectedItemId,\n      setValue: (_, newSelectedItemID) => setSelectedItemId(newSelectedItemID)\n    });\n  }, [registerField, fieldName, selectedItemId]);\n  useEffect(() => {\n    setIsLoading(true);\n    debounce(() => {\n      ItemsService.getAll(1, buscaItem, selectedItemId).then(result => {\n        setIsLoading(false);\n\n        if (result instanceof Error) {// alert(result.message);\n        } else {\n          setOpcoesItem(result.data.map(item => ({\n            id: item.id,\n            label: item.name\n          })));\n        }\n      });\n    });\n  }, [buscaItem, selectedItemId]);\n  console.log(buscaItem);\n  const autoCompleteItemSelectedOption = useMemo(() => {\n    if (!selectedItemId) return null;\n    const selectedItemOption = opcoesItem.find(opcoesItem => opcoesItem.id === selectedItemId);\n    if (!selectedItemOption) return null;\n    return selectedItemOption;\n  }, [selectedItemId, opcoesItem]);\n  changedItemID;\n  setChangedItemID;\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    openText: \"Abrir\",\n    closeText: \"Fechar\",\n    noOptionsText: \"Sem op\\xE7\\xF5es\",\n    loadingText: \"Carregando...\",\n    disablePortal: true,\n    options: opcoesItem,\n    loading: isLoading,\n    disabled: isExternalLoading,\n    value: autoCompleteItemSelectedOption,\n    onInputChange: (_, newValueItem) => setBuscaItem(newValueItem),\n    onChange: (_, newValueItem) => {\n      setSelectedItemId(newValueItem === null || newValueItem === void 0 ? void 0 : newValueItem.id);\n      setChangedItemID(Number(newValueItem === null || newValueItem === void 0 ? void 0 : newValueItem.id));\n      setBuscaItem('');\n      clearError();\n    },\n    popupIcon: isExternalLoading || isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n      size: 28\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 53\n    }, this) : undefined,\n    onBlur: e => upgrade(data),\n    renderInput: paramsItem => /*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"standard\",\n      ...paramsItem,\n      error: !!error,\n      helperText: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AutoCompleteItem, \"q/gX0kWNk/0hkT4Tq8H96YXNw+c=\", false, function () {\n  return [useField, useDebounce];\n});\n\n_c = AutoCompleteItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoCompleteItem\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/AutoCompleteItem.tsx"],"names":["useEffect","useMemo","useState","Autocomplete","CircularProgress","TextField","ItemsService","useDebounce","useField","changedItemID","setChangedItemID","AutoCompleteItem","isExternalLoading","itemID","dados","fieldName","registerField","defaultValue","error","clearError","debounce","selectedItemId","setSelectedItemId","opcoesItem","setOpcoesItem","isLoading","setIsLoading","buscaItem","setBuscaItem","name","getValue","setValue","_","newSelectedItemID","getAll","then","result","Error","data","map","item","id","label","console","log","autoCompleteItemSelectedOption","selectedItemOption","find","newValueItem","Number","undefined","e","upgrade","paramsItem"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { Autocomplete, CircularProgress, TextField } from '@mui/material';\n\nimport { ItemsService } from '../../../../shared/services/api/items/ItemsService';\nimport { useDebounce } from '../../../../shared/hooks';\nimport { useField } from '@unform/core';\nimport { IFormData, changedItemID, setChangedItemID } from './list';\n\ntype TAutoCompleteItemOption = {\n  id: number;\n  label: string;\n}\n\ninterface IAutoCompleteItemProps {\n  isExternalLoading?: boolean;\n  itemID: number;\n  data: IFormData;\n}\nexport const AutoCompleteItem: React.FC<IAutoCompleteItemProps> = ({ isExternalLoading = false, itemID, dados }) => {\n  const { fieldName, registerField, defaultValue, error, clearError } = useField('itemID');\n  const { debounce } = useDebounce();\n\n  const [selectedItemId, setSelectedItemId] = useState<number | undefined>(itemID || defaultValue);\n\n  const [opcoesItem, setOpcoesItem] = useState<TAutoCompleteItemOption[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [buscaItem, setBuscaItem] = useState('');\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      getValue: () => selectedItemId,\n      setValue: (_, newSelectedItemID) => setSelectedItemId(newSelectedItemID),\n    });\n  }, [registerField, fieldName, selectedItemId]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    debounce(() => {\n      ItemsService.getAll(1, buscaItem, selectedItemId)\n        .then((result) => {\n          setIsLoading(false);\n\n          if (result instanceof Error) {\n            // alert(result.message);\n          } else {\n            setOpcoesItem(result.data.map(item => ({ id: item.id, label: item.name })));\n          }\n        });\n    });\n  }, [buscaItem, selectedItemId]);\n  console.log(buscaItem);\n\n  const autoCompleteItemSelectedOption = useMemo(() => {\n    if (!selectedItemId) return null;\n\n    const selectedItemOption = opcoesItem.find(opcoesItem => opcoesItem.id === selectedItemId);\n    if (!selectedItemOption) return null;\n\n    return selectedItemOption;\n  }, [selectedItemId, opcoesItem]);\n\n  changedItemID\n  setChangedItemID\n  return (\n    <Autocomplete\n      openText='Abrir'\n      closeText='Fechar'\n      noOptionsText='Sem opções'\n      loadingText='Carregando...'\n    \n      disablePortal\n      options={opcoesItem}\n      loading={isLoading}\n      disabled={isExternalLoading}\n      value={autoCompleteItemSelectedOption}\n      onInputChange={(_, newValueItem) => setBuscaItem(newValueItem)}\n      onChange={(_, newValueItem) => { setSelectedItemId(newValueItem?.id);setChangedItemID(Number(newValueItem?.id)); setBuscaItem(''); clearError(); }}\n      popupIcon={(isExternalLoading || isLoading) ? <CircularProgress size={28} /> : undefined}\n      onBlur={(e) => upgrade(data)}\n      renderInput={(paramsItem) => (\n        <TextField\n          variant=\"standard\"\n          {...paramsItem}\n          error={!!error}\n          helperText={error}\n        />\n      )}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}