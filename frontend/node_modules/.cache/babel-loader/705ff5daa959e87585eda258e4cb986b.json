{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/list.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FaTrashAlt, FaExclamationCircle } from 'react-icons/fa';\nimport './styles.css';\nimport './styles-priority.css';\nimport { formValidationSchema } from './DetailItemofLines';\nimport { ItemofLinesService } from '../../../../shared/services/api/itemofLines/ItemofLinesService';\nimport { useVForm } from '../../../../shared/forms';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Notes = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const [changedNote, setChangedNote] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    formRef,\n    save,\n    saveAndClose,\n    isSaveAndClose\n  } = useVForm();\n  const {\n    id = 'nova'\n  } = useParams();\n  const navigate = useNavigate();\n  const [rows, setRows] = useState([]);\n  const [totalCount, setTotalCount] = useState(0);\n\n  const handleSave = dados => {\n    formValidationSchema.validate(dados, {\n      abortEarly: false\n    }).then(dadosValidados => {\n      setIsLoading(true);\n\n      if (id === 'nova') {\n        ItemofLinesService.create(dadosValidados).then(result => {\n          setIsLoading(false);\n\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            if (isSaveAndClose()) {\n              navigate('/itemofLines');\n            } else {\n              navigate(`/itemofLines/detail/${result}`);\n            }\n          }\n        });\n      } else {\n        ItemofLinesService.updateById(Number(id), {\n          id: Number(id),\n          ...dadosValidados\n        }).then(result => {\n          setIsLoading(false);\n\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            if (isSaveAndClose()) {\n              navigate('/itemofLines');\n            }\n          }\n        });\n      }\n    }).catch(errors => {\n      var _formRef$current;\n\n      const validationErrors = {};\n      errors.inner.forEach(error => {\n        if (!error.path) return;\n        validationErrors[error.path] = error.message;\n      });\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors(validationErrors);\n    });\n  };\n\n  const handleDelete = id => {\n    if (confirm('Realmente deseja apagar?')) {\n      ItemofLinesService.deleteById(id).then(result => {\n        if (result instanceof Error) {\n          alert(result.message);\n        } else {\n          alert('Registro apagado com sucesso!');\n          navigate('/itemofLines');\n        }\n      });\n    }\n  };\n  /* async function handleSave(e, notes) {\n      e.style.cursor = 'default';\n      e.style.boxShadow = 'none';\n      if (changedNote && changedNote !== notes) {\n          await api.post(`/contents/${data._id}`, {\n              notes: changedNote,\n          });\n      }\n  } */\n\n\n  async function handleEdit(e, priority) {\n    e.style.cursor = 'text';\n    e.style.borderRadius = '5px';\n\n    if (priority) {\n      e.style.boxShadow = '0 0 5px white';\n    } else {\n      e.style.boxShadow = '0 0 5px gray';\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: data.priority ? 'notepad-infos-priority' : 'notepad-infos',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {\n            size: \"20\",\n            onClick: () => handleDelete(data._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        defaultValue: data.notes,\n        onClick: e => handleEdit(e.target, data.priority),\n        onChange: e => setChangedNote(e.target.value),\n        onBlur: e => handleSave(e.target, data.notes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(FaExclamationCircle, {\n          size: \"20\" // onClick={() => handleChangePriority(data._id)}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Notes, \"Bgv8QpWH+qefdJWrBFtWrpLGHB8=\", false, function () {\n  return [useVForm, useParams, useNavigate];\n});\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/list.tsx"],"names":["React","useState","FaTrashAlt","FaExclamationCircle","formValidationSchema","ItemofLinesService","useVForm","useNavigate","useParams","Notes","data","changedNote","setChangedNote","isLoading","setIsLoading","formRef","save","saveAndClose","isSaveAndClose","id","navigate","rows","setRows","totalCount","setTotalCount","handleSave","dados","validate","abortEarly","then","dadosValidados","create","result","Error","alert","message","updateById","Number","catch","errors","validationErrors","inner","forEach","error","path","current","setErrors","handleDelete","confirm","deleteById","handleEdit","e","priority","style","cursor","borderRadius","boxShadow","title","_id","notes","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { FaTrashAlt, FaExclamationCircle } from 'react-icons/fa'\n\nimport './styles.css'\nimport './styles-priority.css'\nimport api from '../../services/api'\nimport { TextField, TextFieldProps } from '@mui/material'\nimport * as yup from 'yup'\nimport { DatePickerProps } from '@mui/x-date-pickers'\nimport { formValidationSchema } from './DetailItemofLines'\nimport { ItemofLinesService } from '../../../../shared/services/api/itemofLines/ItemofLinesService'\nimport { IVFormErrors, useVForm } from '../../../../shared/forms'\nimport { useNavigate, useParams } from 'react-router-dom'\n\ntype TVTextFieldProps = TextFieldProps & {\n    name: string\n    data: object\n}\n\ninterface IFormData {\n    orderID: number\n    itemID: number\n    amount: number\n    total: number\n}\n\nexport const Notes: React.FC<TVTextFieldProps> = ({ data }) => {\n    const [changedNote, setChangedNote] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const { formRef, save, saveAndClose, isSaveAndClose } = useVForm()\n    const { id = 'nova' } = useParams<'id'>()\n    const navigate = useNavigate()\n    const [rows, setRows] = useState<IListItemofLine[]>([])\n    const [totalCount, setTotalCount] = useState(0)\n\n    const handleSave = (dados: IFormData) => {\n        formValidationSchema\n            .validate(dados, { abortEarly: false })\n            .then((dadosValidados) => {\n                setIsLoading(true)\n\n                if (id === 'nova') {\n                    ItemofLinesService.create(dadosValidados).then((result) => {\n                        setIsLoading(false)\n\n                        if (result instanceof Error) {\n                            alert(result.message)\n                        } else {\n                            if (isSaveAndClose()) {\n                                navigate('/itemofLines')\n                            } else {\n                                navigate(`/itemofLines/detail/${result}`)\n                            }\n                        }\n                    })\n                } else {\n                    ItemofLinesService.updateById(Number(id), {\n                        id: Number(id),\n                        ...dadosValidados,\n                    }).then((result) => {\n                        setIsLoading(false)\n\n                        if (result instanceof Error) {\n                            alert(result.message)\n                        } else {\n                            if (isSaveAndClose()) {\n                                navigate('/itemofLines')\n                            }\n                        }\n                    })\n                }\n            })\n            .catch((errors: yup.ValidationError) => {\n                const validationErrors: IVFormErrors = {}\n\n                errors.inner.forEach((error) => {\n                    if (!error.path) return\n\n                    validationErrors[error.path] = error.message\n                })\n\n                formRef.current?.setErrors(validationErrors)\n            })\n    }\n\n    const handleDelete = (id: number) => {\n        if (confirm('Realmente deseja apagar?')) {\n            ItemofLinesService.deleteById(id).then((result) => {\n                if (result instanceof Error) {\n                    alert(result.message)\n                } else {\n                    alert('Registro apagado com sucesso!')\n                    navigate('/itemofLines')\n                }\n            })\n        }\n    }\n\n    /* async function handleSave(e, notes) {\n        e.style.cursor = 'default';\n        e.style.boxShadow = 'none';\n        if (changedNote && changedNote !== notes) {\n            await api.post(`/contents/${data._id}`, {\n                notes: changedNote,\n            });\n        }\n    } */\n\n    async function handleEdit(e, priority) {\n        e.style.cursor = 'text'\n        e.style.borderRadius = '5px'\n        if (priority) {\n            e.style.boxShadow = '0 0 5px white'\n        } else {\n            e.style.boxShadow = '0 0 5px gray'\n        }\n    }\n\n    return (\n        <>\n            <li\n                className={\n                    data.priority ? 'notepad-infos-priority' : 'notepad-infos'\n                }\n            >\n                <div>\n                    <strong>{data.title}</strong>\n                    <div>\n                        <FaTrashAlt\n                            size=\"20\"\n                            onClick={() => handleDelete(data._id)}\n                        />\n                    </div>\n                </div>\n                <textarea\n                    defaultValue={data.notes}\n                    onClick={(e) => handleEdit(e.target, data.priority)}\n                    onChange={(e) => setChangedNote(e.target.value)}\n                    onBlur={(e) => handleSave(e.target, data.notes)}\n                />\n                <span>\n                    <FaExclamationCircle\n                        size=\"20\"\n                    // onClick={() => handleChangePriority(data._id)}\n                    />\n                </span>\n            </li>\n        </>\n    )\n}\n\nexport default Notes\n"]},"metadata":{},"sourceType":"module"}