{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/DetailItemofLines.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Box, Grid, LinearProgress, Paper, Typography } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { VTextField, VForm, useVForm } from '../../../../shared/forms';\nimport { DetailTool } from '../../../../shared/components';\nimport { LayoutBaseDePagina } from '../../../../shared/layouts';\nimport { ItemofLinesService } from '../../../../shared/services/api/itemofLines/ItemofLinesService';\nimport { AutoCompleteItem } from './AutoCompleteItem';\nimport { ListItemofLines } from './ListItemofLines';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formValidationSchema = yup.object().shape({\n  amount: yup.number().required(),\n  total: yup.number().required(),\n  orderID: yup.number().integer().required(),\n  itemID: yup.number().integer().required()\n});\nexport const DetailItemofLines = () => {\n  _s();\n\n  const {\n    formRef,\n    save,\n    saveAndClose,\n    isSaveAndClose\n  } = useVForm();\n  const {\n    id = 'nova'\n  } = useParams();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (id !== 'nova') {\n      setIsLoading(true);\n      ItemofLinesService.getById(Number(id)).then(result => {\n        setIsLoading(false);\n\n        if (result instanceof Error) {\n          alert(result.message);\n          navigate('/itemofLines');\n        } else {\n          var _formRef$current;\n\n          (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setData(result);\n        }\n      });\n    } else {\n      var _formRef$current2;\n\n      (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setData({\n        setName: '',\n        setSerieNumber: '',\n        setType: '',\n        setDescription: ''\n      });\n    }\n  }, [id]);\n\n  const handleSave = dados => {\n    formValidationSchema.validate(dados, {\n      abortEarly: false\n    }).then(dadosValidados => {\n      setIsLoading(true);\n\n      if (id === 'nova') {\n        ItemofLinesService.create(dadosValidados).then(result => {\n          setIsLoading(false);\n\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            if (isSaveAndClose()) {\n              navigate('/itemofLines');\n            } else {\n              navigate(`/itemofLines/detail/${result}`);\n            }\n          }\n        });\n      } else {\n        ItemofLinesService.updateById(Number(id), {\n          id: Number(id),\n          ...dadosValidados\n        }).then(result => {\n          setIsLoading(false);\n\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            if (isSaveAndClose()) {\n              navigate('/itemofLines');\n            }\n          }\n        });\n      }\n    }).catch(errors => {\n      var _formRef$current3;\n\n      const validationErrors = {};\n      errors.inner.forEach(error => {\n        if (!error.path) return;\n        validationErrors[error.path] = error.message;\n      });\n      (_formRef$current3 = formRef.current) === null || _formRef$current3 === void 0 ? void 0 : _formRef$current3.setErrors(validationErrors);\n    });\n  };\n\n  const handleDelete = id => {\n    if (confirm('Realmente deseja apagar?')) {\n      ItemofLinesService.deleteById(id).then(result => {\n        if (result instanceof Error) {\n          alert(result.message);\n        } else {\n          alert('Registro apagado com sucesso!');\n          navigate('/itemofLines');\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LayoutBaseDePagina, {\n    titulo: id === 'nova' ? 'New Item' : '',\n    barraDeFerramentas: /*#__PURE__*/_jsxDEV(DetailTool, {\n      textoBotaoNovo: \"Nova\",\n      mostrarBotaoSalvarEFechar: true,\n      mostrarBotaoNovo: id !== 'nova',\n      mostrarBotaoApagar: id !== 'nova',\n      aoClicarEmSalvar: save,\n      aoClicarEmSalvarEFechar: saveAndClose,\n      aoClicarEmVoltar: () => navigate('/itemofLines'),\n      aoClicarEmApagar: () => handleDelete(Number(id)),\n      aoClicarEmNovo: () => navigate('/itemofLines/detail/nova')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(VForm, {\n      ref: formRef,\n      onSubmit: handleSave,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        margin: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        component: Paper,\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          padding: 2,\n          spacing: 2,\n          children: [isLoading && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"indeterminate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Register ItemofLine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            spacing: {\n              xs: 2,\n              md: 3\n            },\n            columns: {\n              xs: 3,\n              sm: 6,\n              md: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              sm: 3,\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(AutoCompleteItem, {\n                isExternalLoading: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              sm: 3,\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(VTextField, {\n                fullWidth: true,\n                name: \"amount\",\n                label: \"Quantidade\",\n                disabled: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(VTextField, {\n                fullWidth: true,\n                name: \"total\",\n                label: \"Total\",\n                disabled: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      margin: 1,\n      display: \"flex\",\n      flexDirection: \"column\",\n      component: Paper,\n      variant: \"outlined\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        padding: 2,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: {\n            xs: 2,\n            md: 3\n          },\n          columns: {\n            xs: 3,\n            sm: 6,\n            md: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemofLines, {\n            name: \"Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DetailItemofLines, \"i9FxWOjI+Y/kKjP7ejqVL7CFLWs=\", false, function () {\n  return [useVForm, useParams, useNavigate];\n});\n\n_c = DetailItemofLines;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailItemofLines\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/DetailItemofLines.tsx"],"names":["useEffect","useState","Box","Grid","LinearProgress","Paper","Typography","useNavigate","useParams","yup","VTextField","VForm","useVForm","DetailTool","LayoutBaseDePagina","ItemofLinesService","AutoCompleteItem","ListItemofLines","formValidationSchema","object","shape","amount","number","required","total","orderID","integer","itemID","DetailItemofLines","formRef","save","saveAndClose","isSaveAndClose","id","navigate","isLoading","setIsLoading","getById","Number","then","result","Error","alert","message","current","setData","setName","setSerieNumber","setType","setDescription","handleSave","dados","validate","abortEarly","dadosValidados","create","updateById","catch","errors","validationErrors","inner","forEach","error","path","setErrors","handleDelete","confirm","deleteById","xs","md","sm"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,cAApB,EAAoCC,KAApC,EAA2CC,UAA3C,QAA6D,eAA7D;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,QAA5B,QAA0D,0BAA1D;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,SAASC,kBAAT,QAAmC,gEAAnC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,eAAT,QAAgC,mBAAhC;;AAQA,MAAMC,oBAA6C,GAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AACvEC,EAAAA,MAAM,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,EAD+D;AAEvEC,EAAAA,KAAK,EAAEf,GAAG,CAACa,MAAJ,GAAaC,QAAb,EAFgE;AAGvEE,EAAAA,OAAO,EAAEhB,GAAG,CAACa,MAAJ,GAAaI,OAAb,GAAuBH,QAAvB,EAH8D;AAIvEI,EAAAA,MAAM,EAAElB,GAAG,CAACa,MAAJ,GAAaI,OAAb,GAAuBH,QAAvB;AAJ+D,CAAnB,CAAtD;AAOA,OAAO,MAAMK,iBAA2B,GAAG,MAAM;AAAA;;AAC/C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,YAAjB;AAA+BC,IAAAA;AAA/B,MAAkDpB,QAAQ,EAAhE;AACA,QAAM;AAAEqB,IAAAA,EAAE,GAAG;AAAP,MAAkBzB,SAAS,EAAjC;AACA,QAAM0B,QAAQ,GAAG3B,WAAW,EAA5B;AACA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,CAAC,KAAD,CAA1C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiC,EAAE,KAAK,MAAX,EAAmB;AACjBG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEArB,MAAAA,kBAAkB,CAACsB,OAAnB,CAA2BC,MAAM,CAACL,EAAD,CAAjC,EACGM,IADH,CACSC,MAAD,IAAY;AAChBJ,QAAAA,YAAY,CAAC,KAAD,CAAZ;;AAEA,YAAII,MAAM,YAAYC,KAAtB,EAA6B;AAC3BC,UAAAA,KAAK,CAACF,MAAM,CAACG,OAAR,CAAL;AACAT,UAAAA,QAAQ,CAAC,cAAD,CAAR;AACD,SAHD,MAGO;AAAA;;AACL,8BAAAL,OAAO,CAACe,OAAR,sEAAiBC,OAAjB,CAAyBL,MAAzB;AACD;AACF,OAVH;AAWD,KAdD,MAcO;AAAA;;AACL,2BAAAX,OAAO,CAACe,OAAR,wEAAiBC,OAAjB,CAAyB;AACvBC,QAAAA,OAAO,EAAE,EADc;AAEvBC,QAAAA,cAAc,EAAE,EAFO;AAGvBC,QAAAA,OAAO,EAAE,EAHc;AAIvBC,QAAAA,cAAc,EAAE;AAJO,OAAzB;AAMD;AACF,GAvBQ,EAuBN,CAAChB,EAAD,CAvBM,CAAT;;AA0BA,QAAMiB,UAAU,GAAIC,KAAD,IAAsB;AACvCjC,IAAAA,oBAAoB,CAClBkC,QADF,CACWD,KADX,EACkB;AAAEE,MAAAA,UAAU,EAAE;AAAd,KADlB,EAEGd,IAFH,CAESe,cAAD,IAAoB;AACxBlB,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,UAAIH,EAAE,KAAK,MAAX,EAAmB;AACjBlB,QAAAA,kBAAkB,CACfwC,MADH,CACUD,cADV,EAEGf,IAFH,CAESC,MAAD,IAAY;AAChBJ,UAAAA,YAAY,CAAC,KAAD,CAAZ;;AAEA,cAAII,MAAM,YAAYC,KAAtB,EAA6B;AAC3BC,YAAAA,KAAK,CAACF,MAAM,CAACG,OAAR,CAAL;AACD,WAFD,MAEO;AACL,gBAAIX,cAAc,EAAlB,EAAsB;AACpBE,cAAAA,QAAQ,CAAC,cAAD,CAAR;AACD,aAFD,MAEO;AACLA,cAAAA,QAAQ,CAAE,uBAAsBM,MAAO,EAA/B,CAAR;AACD;AACF;AACF,SAdH;AAeD,OAhBD,MAgBO;AACLzB,QAAAA,kBAAkB,CACfyC,UADH,CACclB,MAAM,CAACL,EAAD,CADpB,EAC0B;AAAEA,UAAAA,EAAE,EAAEK,MAAM,CAACL,EAAD,CAAZ;AAAkB,aAAGqB;AAArB,SAD1B,EAEGf,IAFH,CAESC,MAAD,IAAY;AAChBJ,UAAAA,YAAY,CAAC,KAAD,CAAZ;;AAEA,cAAII,MAAM,YAAYC,KAAtB,EAA6B;AAC3BC,YAAAA,KAAK,CAACF,MAAM,CAACG,OAAR,CAAL;AACD,WAFD,MAEO;AACL,gBAAIX,cAAc,EAAlB,EAAsB;AACpBE,cAAAA,QAAQ,CAAC,cAAD,CAAR;AACD;AACF;AACF,SAZH;AAaD;AACF,KApCH,EAqCGuB,KArCH,CAqCUC,MAAD,IAAiC;AAAA;;AACtC,YAAMC,gBAA8B,GAAG,EAAvC;AAEAD,MAAAA,MAAM,CAACE,KAAP,CAAaC,OAAb,CAAqBC,KAAK,IAAI;AAC5B,YAAI,CAACA,KAAK,CAACC,IAAX,EAAiB;AAEjBJ,QAAAA,gBAAgB,CAACG,KAAK,CAACC,IAAP,CAAhB,GAA+BD,KAAK,CAACnB,OAArC;AACD,OAJD;AAMA,2BAAAd,OAAO,CAACe,OAAR,wEAAiBoB,SAAjB,CAA2BL,gBAA3B;AACD,KA/CH;AAgDD,GAjDD;;AAmDA,QAAMM,YAAY,GAAIhC,EAAD,IAAgB;AACnC,QAAIiC,OAAO,CAAC,0BAAD,CAAX,EAAyC;AACvCnD,MAAAA,kBAAkB,CAACoD,UAAnB,CAA8BlC,EAA9B,EACGM,IADH,CACQC,MAAM,IAAI;AACd,YAAIA,MAAM,YAAYC,KAAtB,EAA6B;AAC3BC,UAAAA,KAAK,CAACF,MAAM,CAACG,OAAR,CAAL;AACD,SAFD,MAEO;AACLD,UAAAA,KAAK,CAAC,+BAAD,CAAL;AACAR,UAAAA,QAAQ,CAAC,cAAD,CAAR;AACD;AACF,OARH;AASD;AACF,GAZD;;AAeA,sBACE,QAAC,kBAAD;AACE,IAAA,MAAM,EAAED,EAAE,KAAK,MAAP,GAAgB,UAAhB,GAA6B,EADvC;AAEE,IAAA,kBAAkB,eAChB,QAAC,UAAD;AACE,MAAA,cAAc,EAAC,MADjB;AAEE,MAAA,yBAAyB,MAF3B;AAGE,MAAA,gBAAgB,EAAEA,EAAE,KAAK,MAH3B;AAIE,MAAA,kBAAkB,EAAEA,EAAE,KAAK,MAJ7B;AAME,MAAA,gBAAgB,EAAEH,IANpB;AAOE,MAAA,uBAAuB,EAAEC,YAP3B;AAQE,MAAA,gBAAgB,EAAE,MAAMG,QAAQ,CAAC,cAAD,CARlC;AASE,MAAA,gBAAgB,EAAE,MAAM+B,YAAY,CAAC3B,MAAM,CAACL,EAAD,CAAP,CATtC;AAUE,MAAA,cAAc,EAAE,MAAMC,QAAQ,CAAC,0BAAD;AAVhC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,4BAiBE,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEL,OAAZ;AAAqB,MAAA,QAAQ,EAAEqB,UAA/B;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,MAAM,EAAE,CAAb;AAAgB,QAAA,OAAO,EAAC,MAAxB;AAA+B,QAAA,aAAa,EAAC,QAA7C;AAAsD,QAAA,SAAS,EAAE7C,KAAjE;AAAwE,QAAA,OAAO,EAAC,UAAhF;AAAA,+BAEE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,SAAS,EAAC,QAA1B;AAAmC,UAAA,OAAO,EAAE,CAA5C;AAA+C,UAAA,OAAO,EAAE,CAAxD;AAAA,qBAEG8B,SAAS,iBACR,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,cAAD;AAAgB,cAAA,OAAO,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAQE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF,eAaE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,IAAI,MAApB;AAAqB,YAAA,OAAO,EAAE;AAAEiC,cAAAA,EAAE,EAAE,CAAN;AAASC,cAAAA,EAAE,EAAE;AAAb,aAA9B;AAAgD,YAAA,OAAO,EAAE;AAAED,cAAAA,EAAE,EAAE,CAAN;AAASE,cAAAA,EAAE,EAAE,CAAb;AAAgBD,cAAAA,EAAE,EAAE;AAApB,aAAzD;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAkB,cAAA,EAAE,EAAE,CAAtB;AAAyB,cAAA,EAAE,EAAE,CAA7B;AAAA,qCACE,QAAC,gBAAD;AAAkB,gBAAA,iBAAiB,EAAElC;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAkB,cAAA,EAAE,EAAE,CAAtB;AAAyB,cAAA,EAAE,EAAE,CAA7B;AAAA,qCACE,QAAC,UAAD;AACE,gBAAA,SAAS,MADX;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,KAAK,EAAC,YAHR;AAIE,gBAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAYE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAkB,cAAA,EAAE,EAAE,CAAtB;AAAyB,cAAA,EAAE,EAAE,CAA7B;AAAA,qCACE,QAAC,UAAD;AACE,gBAAA,SAAS,MADX;AAEE,gBAAA,IAAI,EAAC,OAFP;AAGE,gBAAA,KAAK,EAAC,OAHR;AAIE,gBAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF,eA6DE,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAb;AAAgB,MAAA,OAAO,EAAC,MAAxB;AAA+B,MAAA,aAAa,EAAC,QAA7C;AAAsD,MAAA,SAAS,EAAE9B,KAAjE;AAAwE,MAAA,OAAO,EAAC,UAAhF;AAAA,6BAEE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,OAAO,EAAE,CAA5C;AAA+C,QAAA,OAAO,EAAE,CAAxD;AAAA,+BAEE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,OAAO,EAAE;AAAE+D,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,EAAE,EAAE;AAAb,WAA9B;AAAgD,UAAA,OAAO,EAAE;AAAED,YAAAA,EAAE,EAAE,CAAN;AAASE,YAAAA,EAAE,EAAE,CAAb;AAAgBD,YAAAA,EAAE,EAAE;AAApB,WAAzD;AAAA,iCACE,QAAC,eAAD;AACE,YAAA,IAAI,EAAC;AADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YA7DF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8ED,CAjLM;;GAAMzC,iB;UAC6ChB,Q,EAChCJ,S,EACPD,W;;;KAHNqB,iB","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Box, Grid, LinearProgress, Paper, Typography } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport { VTextField, VForm, useVForm, IVFormErrors } from '../../../../shared/forms';\nimport { DetailTool } from '../../../../shared/components';\nimport { LayoutBaseDePagina } from '../../../../shared/layouts';\nimport { ItemofLinesService } from '../../../../shared/services/api/itemofLines/ItemofLinesService';\nimport { AutoCompleteItem } from './AutoCompleteItem';\nimport { ListItemofLines } from './ListItemofLines';\n\ninterface IFormData {\n  orderID: number,\n  itemID: number,\n  amount: number,\n  total: number,\n}\nconst formValidationSchema: yup.SchemaOf<IFormData> = yup.object().shape({\n  amount: yup.number().required(),\n  total: yup.number().required(),\n  orderID: yup.number().integer().required(),\n  itemID: yup.number().integer().required(),\n});\n\nexport const DetailItemofLines: React.FC = () => {\n  const { formRef, save, saveAndClose, isSaveAndClose } = useVForm();\n  const { id = 'nova' } = useParams<'id'>();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  useEffect(() => {\n    if (id !== 'nova') {\n      setIsLoading(true);\n\n      ItemofLinesService.getById(Number(id))\n        .then((result) => {\n          setIsLoading(false);\n\n          if (result instanceof Error) {\n            alert(result.message);\n            navigate('/itemofLines');\n          } else {\n            formRef.current?.setData(result);\n          }\n        });\n    } else {\n      formRef.current?.setData({\n        setName: '',\n        setSerieNumber: '',\n        setType: '',\n        setDescription: '',\n      });\n    }\n  }, [id]);\n\n\n  const handleSave = (dados: IFormData) => {\n    formValidationSchema.\n      validate(dados, { abortEarly: false })\n      .then((dadosValidados) => {\n        setIsLoading(true);\n\n        if (id === 'nova') {\n          ItemofLinesService\n            .create(dadosValidados)\n            .then((result) => {\n              setIsLoading(false);\n\n              if (result instanceof Error) {\n                alert(result.message);\n              } else {\n                if (isSaveAndClose()) {\n                  navigate('/itemofLines');\n                } else {\n                  navigate(`/itemofLines/detail/${result}`);\n                }\n              }\n            });\n        } else {\n          ItemofLinesService\n            .updateById(Number(id), { id: Number(id), ...dadosValidados })\n            .then((result) => {\n              setIsLoading(false);\n\n              if (result instanceof Error) {\n                alert(result.message);\n              } else {\n                if (isSaveAndClose()) {\n                  navigate('/itemofLines');\n                }\n              }\n            });\n        }\n      })\n      .catch((errors: yup.ValidationError) => {\n        const validationErrors: IVFormErrors = {};\n\n        errors.inner.forEach(error => {\n          if (!error.path) return;\n\n          validationErrors[error.path] = error.message;\n        });\n\n        formRef.current?.setErrors(validationErrors);\n      });\n  };\n\n  const handleDelete = (id: number) => {\n    if (confirm('Realmente deseja apagar?')) {\n      ItemofLinesService.deleteById(id)\n        .then(result => {\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            alert('Registro apagado com sucesso!');\n            navigate('/itemofLines');\n          }\n        });\n    }\n  };\n\n\n  return (\n    <LayoutBaseDePagina\n      titulo={id === 'nova' ? 'New Item' : ''}\n      barraDeFerramentas={\n        <DetailTool\n          textoBotaoNovo='Nova'\n          mostrarBotaoSalvarEFechar\n          mostrarBotaoNovo={id !== 'nova'}\n          mostrarBotaoApagar={id !== 'nova'}\n\n          aoClicarEmSalvar={save}\n          aoClicarEmSalvarEFechar={saveAndClose}\n          aoClicarEmVoltar={() => navigate('/itemofLines')}\n          aoClicarEmApagar={() => handleDelete(Number(id))}\n          aoClicarEmNovo={() => navigate('/itemofLines/detail/nova')}\n        />\n      }\n    >\n      <VForm ref={formRef} onSubmit={handleSave}>\n        <Box margin={1} display=\"flex\" flexDirection=\"column\" component={Paper} variant=\"outlined\">\n\n          <Grid container direction=\"column\" padding={2} spacing={2}>\n\n            {isLoading && (\n              <Grid item>\n                <LinearProgress variant='indeterminate' />\n              </Grid>\n            )}\n\n            <Grid item>\n              <Typography variant='h6'>Register ItemofLine</Typography>\n            </Grid>\n\n\n            <Grid container item spacing={{ xs: 2, md: 3 }} columns={{ xs: 3, sm: 6, md: 8 }}>\n              <Grid item xs={2} sm={3} md={2}>\n                <AutoCompleteItem isExternalLoading={isLoading} />\n              </Grid>\n              <Grid item xs={2} sm={3} md={2}>\n                <VTextField\n                  fullWidth\n                  name='amount'\n                  label='Quantidade'\n                  disabled={isLoading}\n                />\n              </Grid>\n              <Grid item xs={4} sm={6} md={4}>\n                <VTextField\n                  fullWidth\n                  name='total'\n                  label='Total'\n                  disabled={isLoading}\n                />\n              </Grid>\n            </Grid>\n\n\n          </Grid>\n\n\n        </Box>\n      </VForm>\n      <Box margin={1} display=\"flex\" flexDirection=\"column\" component={Paper} variant=\"outlined\">\n\n        <Grid container direction=\"column\" padding={2} spacing={2}>\n\n          <Grid container item spacing={{ xs: 2, md: 3 }} columns={{ xs: 3, sm: 6, md: 8 }}>\n            <ListItemofLines\n              name='Item'\n            />\n          </Grid>\n\n        </Grid>\n\n      </Box>\n\n    </LayoutBaseDePagina >\n  );\n};"]},"metadata":{},"sourceType":"module"}