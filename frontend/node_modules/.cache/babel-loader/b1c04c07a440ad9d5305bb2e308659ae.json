{"ast":null,"code":"import { createIsAfterIgnoreDatePart } from '../time-utils';\nexport var validateTime = function validateTime(_ref) {\n  var adapter = _ref.adapter,\n      value = _ref.value,\n      props = _ref.props;\n\n  if (value === null) {\n    return null;\n  }\n\n  var minTime = props.minTime,\n      maxTime = props.maxTime,\n      minutesStep = props.minutesStep,\n      shouldDisableClock = props.shouldDisableClock,\n      shouldDisableTime = props.shouldDisableTime,\n      _props$disableIgnorin = props.disableIgnoringDatePartForTimeValidation,\n      disableIgnoringDatePartForTimeValidation = _props$disableIgnorin === void 0 ? false : _props$disableIgnorin,\n      disablePast = props.disablePast,\n      disableFuture = props.disableFuture,\n      timezone = props.timezone;\n  var now = adapter.utils.dateWithTimezone(undefined, timezone);\n  var isAfter = createIsAfterIgnoreDatePart(disableIgnoringDatePartForTimeValidation, adapter.utils);\n\n  switch (true) {\n    case !adapter.utils.isValid(value):\n      return 'invalidDate';\n\n    case Boolean(minTime && isAfter(minTime, value)):\n      return 'minTime';\n\n    case Boolean(maxTime && isAfter(value, maxTime)):\n      return 'maxTime';\n\n    case Boolean(disableFuture && adapter.utils.isAfter(value, now)):\n      return 'disableFuture';\n\n    case Boolean(disablePast && adapter.utils.isBefore(value, now)):\n      return 'disablePast';\n\n    case Boolean(shouldDisableTime && shouldDisableTime(value, 'hours')):\n      return 'shouldDisableTime-hours';\n\n    case Boolean(shouldDisableTime && shouldDisableTime(value, 'minutes')):\n      return 'shouldDisableTime-minutes';\n\n    case Boolean(shouldDisableTime && shouldDisableTime(value, 'seconds')):\n      return 'shouldDisableTime-seconds';\n\n    case Boolean(shouldDisableClock && shouldDisableClock(adapter.utils.getHours(value), 'hours')):\n      return 'shouldDisableClock-hours';\n\n    case Boolean(shouldDisableClock && shouldDisableClock(adapter.utils.getMinutes(value), 'minutes')):\n      return 'shouldDisableClock-minutes';\n\n    case Boolean(shouldDisableClock && shouldDisableClock(adapter.utils.getSeconds(value), 'seconds')):\n      return 'shouldDisableClock-seconds';\n\n    case Boolean(minutesStep && adapter.utils.getMinutes(value) % minutesStep !== 0):\n      return 'minutesStep';\n\n    default:\n      return null;\n  }\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/internals/utils/validation/validateTime.js"],"names":["createIsAfterIgnoreDatePart","validateTime","adapter","value","props","minTime","maxTime","minutesStep","shouldDisableClock","shouldDisableTime","disableIgnoringDatePartForTimeValidation","disablePast","disableFuture","timezone","now","utils","dateWithTimezone","undefined","isAfter","isValid","Boolean","isBefore","getHours","getMinutes","getSeconds"],"mappings":"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","sourcesContent":["import { createIsAfterIgnoreDatePart } from '../time-utils';\nexport const validateTime = ({\n  adapter,\n  value,\n  props\n}) => {\n  if (value === null) {\n    return null;\n  }\n  const {\n    minTime,\n    maxTime,\n    minutesStep,\n    shouldDisableClock,\n    shouldDisableTime,\n    disableIgnoringDatePartForTimeValidation = false,\n    disablePast,\n    disableFuture,\n    timezone\n  } = props;\n  const now = adapter.utils.dateWithTimezone(undefined, timezone);\n  const isAfter = createIsAfterIgnoreDatePart(disableIgnoringDatePartForTimeValidation, adapter.utils);\n  switch (true) {\n    case !adapter.utils.isValid(value):\n      return 'invalidDate';\n    case Boolean(minTime && isAfter(minTime, value)):\n      return 'minTime';\n    case Boolean(maxTime && isAfter(value, maxTime)):\n      return 'maxTime';\n    case Boolean(disableFuture && adapter.utils.isAfter(value, now)):\n      return 'disableFuture';\n    case Boolean(disablePast && adapter.utils.isBefore(value, now)):\n      return 'disablePast';\n    case Boolean(shouldDisableTime && shouldDisableTime(value, 'hours')):\n      return 'shouldDisableTime-hours';\n    case Boolean(shouldDisableTime && shouldDisableTime(value, 'minutes')):\n      return 'shouldDisableTime-minutes';\n    case Boolean(shouldDisableTime && shouldDisableTime(value, 'seconds')):\n      return 'shouldDisableTime-seconds';\n    case Boolean(shouldDisableClock && shouldDisableClock(adapter.utils.getHours(value), 'hours')):\n      return 'shouldDisableClock-hours';\n    case Boolean(shouldDisableClock && shouldDisableClock(adapter.utils.getMinutes(value), 'minutes')):\n      return 'shouldDisableClock-minutes';\n    case Boolean(shouldDisableClock && shouldDisableClock(adapter.utils.getSeconds(value), 'seconds')):\n      return 'shouldDisableClock-seconds';\n    case Boolean(minutesStep && adapter.utils.getMinutes(value) % minutesStep !== 0):\n      return 'minutesStep';\n    default:\n      return null;\n  }\n};"]},"metadata":{},"sourceType":"module"}