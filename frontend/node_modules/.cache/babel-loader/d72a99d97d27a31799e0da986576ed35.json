{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/Site Node-Type-React/frontend/src/pages/cidades/DetalheDeCidades.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Box, Grid, LinearProgress, Paper, Typography } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { CidadesService } from '../../shared/services/api/cidades/CidadesService';\nimport { VTextField, VForm, useVForm } from '../../shared/forms';\nimport { FerramentasDeDetalhe } from '../../shared/components';\nimport { LayoutBaseDePagina } from '../../shared/layouts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formValidationSchema = yup.object().shape({\n  nome: yup.string().required().min(3)\n});\nexport const DetalheDeCidades = () => {\n  _s();\n\n  const {\n    formRef,\n    save,\n    saveAndClose,\n    isSaveAndClose\n  } = useVForm();\n  const {\n    id = 'nova'\n  } = useParams();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [nome, setNome] = useState('');\n  useEffect(() => {\n    if (id !== 'nova') {\n      setIsLoading(true);\n      CidadesService.getById(Number(id)).then(result => {\n        setIsLoading(false);\n\n        if (result instanceof Error) {\n          alert(result.message);\n          navigate('/cidades');\n        } else {\n          var _formRef$current;\n\n          setNome(result.nome);\n          (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setData(result);\n        }\n      });\n    } else {\n      var _formRef$current2;\n\n      (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setData({\n        nome: ''\n      });\n    }\n  }, [id]);\n\n  const handleSave = dados => {\n    formValidationSchema.validate(dados, {\n      abortEarly: false\n    }).then(dadosValidados => {\n      setIsLoading(true);\n\n      if (id === 'nova') {\n        CidadesService.create(dadosValidados).then(result => {\n          setIsLoading(false);\n\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            if (isSaveAndClose()) {\n              navigate('/cidades');\n            } else {\n              navigate(`/cidades/detalhe/${result}`);\n            }\n          }\n        });\n      } else {\n        CidadesService.updateById(Number(id), {\n          id: Number(id),\n          ...dadosValidados\n        }).then(result => {\n          setIsLoading(false);\n\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            if (isSaveAndClose()) {\n              navigate('/cidades');\n            }\n          }\n        });\n      }\n    }).catch(errors => {\n      var _formRef$current3;\n\n      const validationErrors = {};\n      errors.inner.forEach(error => {\n        if (!error.path) return;\n        validationErrors[error.path] = error.message;\n      });\n      (_formRef$current3 = formRef.current) === null || _formRef$current3 === void 0 ? void 0 : _formRef$current3.setErrors(validationErrors);\n    });\n  };\n\n  const handleDelete = id => {\n    if (confirm('Realmente deseja apagar?')) {\n      CidadesService.deleteById(id).then(result => {\n        if (result instanceof Error) {\n          alert(result.message);\n        } else {\n          alert('Registro apagado com sucesso!');\n          navigate('/cidades');\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LayoutBaseDePagina, {\n    titulo: id === 'nova' ? 'Nova cidade' : nome,\n    barraDeFerramentas: /*#__PURE__*/_jsxDEV(FerramentasDeDetalhe, {\n      textoBotaoNovo: \"Nova\",\n      mostrarBotaoSalvarEFechar: true,\n      mostrarBotaoNovo: id !== 'nova',\n      mostrarBotaoApagar: id !== 'nova',\n      aoClicarEmSalvar: save,\n      aoClicarEmSalvarEFechar: saveAndClose,\n      aoClicarEmVoltar: () => navigate('/cidades'),\n      aoClicarEmApagar: () => handleDelete(Number(id)),\n      aoClicarEmNovo: () => navigate('/cidades/detalhe/nova')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(VForm, {\n      ref: formRef,\n      onSubmit: handleSave,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        margin: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        component: Paper,\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          padding: 2,\n          spacing: 2,\n          children: [isLoading && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"indeterminate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Geral\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            direction: \"row\",\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 12,\n              md: 6,\n              lg: 4,\n              xl: 2,\n              children: /*#__PURE__*/_jsxDEV(VTextField, {\n                fullWidth: true,\n                name: \"nome\",\n                label: \"Nome\",\n                disabled: isLoading,\n                onChange: e => setNome(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DetalheDeCidades, \"Sqe1rLBPiA4usdgdiW0fP6UhPDQ=\", false, function () {\n  return [useVForm, useParams, useNavigate];\n});\n\n_c = DetalheDeCidades;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetalheDeCidades\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/Site Node-Type-React/frontend/src/pages/cidades/DetalheDeCidades.tsx"],"names":["useEffect","useState","Box","Grid","LinearProgress","Paper","Typography","useNavigate","useParams","yup","CidadesService","VTextField","VForm","useVForm","FerramentasDeDetalhe","LayoutBaseDePagina","formValidationSchema","object","shape","nome","string","required","min","DetalheDeCidades","formRef","save","saveAndClose","isSaveAndClose","id","navigate","isLoading","setIsLoading","setNome","getById","Number","then","result","Error","alert","message","current","setData","handleSave","dados","validate","abortEarly","dadosValidados","create","updateById","catch","errors","validationErrors","inner","forEach","error","path","setErrors","handleDelete","confirm","deleteById","e","target","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,cAApB,EAAoCC,KAApC,EAA2CC,UAA3C,QAA6D,eAA7D;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,cAAT,QAA+B,kDAA/B;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,QAA5B,QAA0D,oBAA1D;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;;AAMA,MAAMC,oBAA6C,GAAGP,GAAG,CAACQ,MAAJ,GAAaC,KAAb,CAAmB;AACvEC,EAAAA,IAAI,EAAEV,GAAG,CAACW,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,CAA5B;AADiE,CAAnB,CAAtD;AAIA,OAAO,MAAMC,gBAA0B,GAAG,MAAM;AAAA;;AAC9C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,YAAjB;AAA+BC,IAAAA;AAA/B,MAAkDd,QAAQ,EAAhE;AACA,QAAM;AAAEe,IAAAA,EAAE,GAAG;AAAP,MAAkBpB,SAAS,EAAjC;AACA,QAAMqB,QAAQ,GAAGtB,WAAW,EAA5B;AAGA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACkB,IAAD,EAAOa,OAAP,IAAkB/B,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,EAAE,KAAK,MAAX,EAAmB;AACjBG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEArB,MAAAA,cAAc,CAACuB,OAAf,CAAuBC,MAAM,CAACN,EAAD,CAA7B,EACGO,IADH,CACSC,MAAD,IAAY;AAChBL,QAAAA,YAAY,CAAC,KAAD,CAAZ;;AAEA,YAAIK,MAAM,YAAYC,KAAtB,EAA6B;AAC3BC,UAAAA,KAAK,CAACF,MAAM,CAACG,OAAR,CAAL;AACAV,UAAAA,QAAQ,CAAC,UAAD,CAAR;AACD,SAHD,MAGO;AAAA;;AACLG,UAAAA,OAAO,CAACI,MAAM,CAACjB,IAAR,CAAP;AACA,8BAAAK,OAAO,CAACgB,OAAR,sEAAiBC,OAAjB,CAAyBL,MAAzB;AACD;AACF,OAXH;AAYD,KAfD,MAeO;AAAA;;AACL,2BAAAZ,OAAO,CAACgB,OAAR,wEAAiBC,OAAjB,CAAyB;AACvBtB,QAAAA,IAAI,EAAE;AADiB,OAAzB;AAGD;AACF,GArBQ,EAqBN,CAACS,EAAD,CArBM,CAAT;;AAwBA,QAAMc,UAAU,GAAIC,KAAD,IAAsB;AACvC3B,IAAAA,oBAAoB,CAClB4B,QADF,CACWD,KADX,EACkB;AAAEE,MAAAA,UAAU,EAAE;AAAd,KADlB,EAEGV,IAFH,CAESW,cAAD,IAAoB;AACxBf,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,UAAIH,EAAE,KAAK,MAAX,EAAmB;AACjBlB,QAAAA,cAAc,CACXqC,MADH,CACUD,cADV,EAEGX,IAFH,CAESC,MAAD,IAAY;AAChBL,UAAAA,YAAY,CAAC,KAAD,CAAZ;;AAEA,cAAIK,MAAM,YAAYC,KAAtB,EAA6B;AAC3BC,YAAAA,KAAK,CAACF,MAAM,CAACG,OAAR,CAAL;AACD,WAFD,MAEO;AACL,gBAAIZ,cAAc,EAAlB,EAAsB;AACpBE,cAAAA,QAAQ,CAAC,UAAD,CAAR;AACD,aAFD,MAEO;AACLA,cAAAA,QAAQ,CAAE,oBAAmBO,MAAO,EAA5B,CAAR;AACD;AACF;AACF,SAdH;AAeD,OAhBD,MAgBO;AACL1B,QAAAA,cAAc,CACXsC,UADH,CACcd,MAAM,CAACN,EAAD,CADpB,EAC0B;AAAEA,UAAAA,EAAE,EAAEM,MAAM,CAACN,EAAD,CAAZ;AAAkB,aAAGkB;AAArB,SAD1B,EAEGX,IAFH,CAESC,MAAD,IAAY;AAChBL,UAAAA,YAAY,CAAC,KAAD,CAAZ;;AAEA,cAAIK,MAAM,YAAYC,KAAtB,EAA6B;AAC3BC,YAAAA,KAAK,CAACF,MAAM,CAACG,OAAR,CAAL;AACD,WAFD,MAEO;AACL,gBAAIZ,cAAc,EAAlB,EAAsB;AACpBE,cAAAA,QAAQ,CAAC,UAAD,CAAR;AACD;AACF;AACF,SAZH;AAaD;AACF,KApCH,EAqCGoB,KArCH,CAqCUC,MAAD,IAAiC;AAAA;;AACtC,YAAMC,gBAA8B,GAAG,EAAvC;AAEAD,MAAAA,MAAM,CAACE,KAAP,CAAaC,OAAb,CAAqBC,KAAK,IAAI;AAC5B,YAAI,CAACA,KAAK,CAACC,IAAX,EAAiB;AAEjBJ,QAAAA,gBAAgB,CAACG,KAAK,CAACC,IAAP,CAAhB,GAA+BD,KAAK,CAACf,OAArC;AACD,OAJD;AAMA,2BAAAf,OAAO,CAACgB,OAAR,wEAAiBgB,SAAjB,CAA2BL,gBAA3B;AACD,KA/CH;AAgDD,GAjDD;;AAmDA,QAAMM,YAAY,GAAI7B,EAAD,IAAgB;AACnC,QAAI8B,OAAO,CAAC,0BAAD,CAAX,EAAyC;AACvChD,MAAAA,cAAc,CAACiD,UAAf,CAA0B/B,EAA1B,EACGO,IADH,CACQC,MAAM,IAAI;AACd,YAAIA,MAAM,YAAYC,KAAtB,EAA6B;AAC3BC,UAAAA,KAAK,CAACF,MAAM,CAACG,OAAR,CAAL;AACD,SAFD,MAEO;AACLD,UAAAA,KAAK,CAAC,+BAAD,CAAL;AACAT,UAAAA,QAAQ,CAAC,UAAD,CAAR;AACD;AACF,OARH;AASD;AACF,GAZD;;AAeA,sBACE,QAAC,kBAAD;AACE,IAAA,MAAM,EAAED,EAAE,KAAK,MAAP,GAAgB,aAAhB,GAAgCT,IAD1C;AAEE,IAAA,kBAAkB,eAChB,QAAC,oBAAD;AACE,MAAA,cAAc,EAAC,MADjB;AAEE,MAAA,yBAAyB,MAF3B;AAGE,MAAA,gBAAgB,EAAES,EAAE,KAAK,MAH3B;AAIE,MAAA,kBAAkB,EAAEA,EAAE,KAAK,MAJ7B;AAME,MAAA,gBAAgB,EAAEH,IANpB;AAOE,MAAA,uBAAuB,EAAEC,YAP3B;AAQE,MAAA,gBAAgB,EAAE,MAAMG,QAAQ,CAAC,UAAD,CARlC;AASE,MAAA,gBAAgB,EAAE,MAAM4B,YAAY,CAACvB,MAAM,CAACN,EAAD,CAAP,CATtC;AAUE,MAAA,cAAc,EAAE,MAAMC,QAAQ,CAAC,uBAAD;AAVhC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,2BAiBE,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEL,OAAZ;AAAqB,MAAA,QAAQ,EAAEkB,UAA/B;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,MAAM,EAAE,CAAb;AAAgB,QAAA,OAAO,EAAC,MAAxB;AAA+B,QAAA,aAAa,EAAC,QAA7C;AAAsD,QAAA,SAAS,EAAErC,KAAjE;AAAwE,QAAA,OAAO,EAAC,UAAhF;AAAA,+BAEE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,SAAS,EAAC,QAA1B;AAAmC,UAAA,OAAO,EAAE,CAA5C;AAA+C,UAAA,OAAO,EAAE,CAAxD;AAAA,qBAEGyB,SAAS,iBACR,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,cAAD;AAAgB,cAAA,OAAO,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAQE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF,eAYE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,IAAI,MAApB;AAAqB,YAAA,SAAS,EAAC,KAA/B;AAAqC,YAAA,OAAO,EAAE,CAA9C;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,EAAvB;AAA2B,cAAA,EAAE,EAAE,CAA/B;AAAkC,cAAA,EAAE,EAAE,CAAtC;AAAyC,cAAA,EAAE,EAAE,CAA7C;AAAA,qCACE,QAAC,UAAD;AACE,gBAAA,SAAS,MADX;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,KAAK,EAAC,MAHR;AAIE,gBAAA,QAAQ,EAAEA,SAJZ;AAKE,gBAAA,QAAQ,EAAE8B,CAAC,IAAI5B,OAAO,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV;AALxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAjBF;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD,CAtJM;;GAAMvC,gB;UAC6CV,Q,EAChCL,S,EACPD,W;;;KAHNgB,gB","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Box, Grid, LinearProgress, Paper, Typography } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport { CidadesService } from '../../shared/services/api/cidades/CidadesService';\nimport { VTextField, VForm, useVForm, IVFormErrors } from '../../shared/forms';\nimport { FerramentasDeDetalhe } from '../../shared/components';\nimport { LayoutBaseDePagina } from '../../shared/layouts';\n\n\ninterface IFormData {\n  nome: string;\n}\nconst formValidationSchema: yup.SchemaOf<IFormData> = yup.object().shape({\n  nome: yup.string().required().min(3),\n});\n\nexport const DetalheDeCidades: React.FC = () => {\n  const { formRef, save, saveAndClose, isSaveAndClose } = useVForm();\n  const { id = 'nova' } = useParams<'id'>();\n  const navigate = useNavigate();\n\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [nome, setNome] = useState('');\n\n  useEffect(() => {\n    if (id !== 'nova') {\n      setIsLoading(true);\n\n      CidadesService.getById(Number(id))\n        .then((result) => {\n          setIsLoading(false);\n\n          if (result instanceof Error) {\n            alert(result.message);\n            navigate('/cidades');\n          } else {\n            setNome(result.nome);\n            formRef.current?.setData(result);\n          }\n        });\n    } else {\n      formRef.current?.setData({\n        nome: '',\n      });\n    }\n  }, [id]);\n\n\n  const handleSave = (dados: IFormData) => {\n    formValidationSchema.\n      validate(dados, { abortEarly: false })\n      .then((dadosValidados) => {\n        setIsLoading(true);\n\n        if (id === 'nova') {\n          CidadesService\n            .create(dadosValidados)\n            .then((result) => {\n              setIsLoading(false);\n\n              if (result instanceof Error) {\n                alert(result.message);\n              } else {\n                if (isSaveAndClose()) {\n                  navigate('/cidades');\n                } else {\n                  navigate(`/cidades/detalhe/${result}`);\n                }\n              }\n            });\n        } else {\n          CidadesService\n            .updateById(Number(id), { id: Number(id), ...dadosValidados })\n            .then((result) => {\n              setIsLoading(false);\n\n              if (result instanceof Error) {\n                alert(result.message);\n              } else {\n                if (isSaveAndClose()) {\n                  navigate('/cidades');\n                }\n              }\n            });\n        }\n      })\n      .catch((errors: yup.ValidationError) => {\n        const validationErrors: IVFormErrors = {};\n\n        errors.inner.forEach(error => {\n          if (!error.path) return;\n\n          validationErrors[error.path] = error.message;\n        });\n\n        formRef.current?.setErrors(validationErrors);\n      });\n  };\n\n  const handleDelete = (id: number) => {\n    if (confirm('Realmente deseja apagar?')) {\n      CidadesService.deleteById(id)\n        .then(result => {\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            alert('Registro apagado com sucesso!');\n            navigate('/cidades');\n          }\n        });\n    }\n  };\n\n\n  return (\n    <LayoutBaseDePagina\n      titulo={id === 'nova' ? 'Nova cidade' : nome}\n      barraDeFerramentas={\n        <FerramentasDeDetalhe\n          textoBotaoNovo='Nova'\n          mostrarBotaoSalvarEFechar\n          mostrarBotaoNovo={id !== 'nova'}\n          mostrarBotaoApagar={id !== 'nova'}\n\n          aoClicarEmSalvar={save}\n          aoClicarEmSalvarEFechar={saveAndClose}\n          aoClicarEmVoltar={() => navigate('/cidades')}\n          aoClicarEmApagar={() => handleDelete(Number(id))}\n          aoClicarEmNovo={() => navigate('/cidades/detalhe/nova')}\n        />\n      }\n    >\n      <VForm ref={formRef} onSubmit={handleSave}>\n        <Box margin={1} display=\"flex\" flexDirection=\"column\" component={Paper} variant=\"outlined\">\n\n          <Grid container direction=\"column\" padding={2} spacing={2}>\n\n            {isLoading && (\n              <Grid item>\n                <LinearProgress variant='indeterminate' />\n              </Grid>\n            )}\n\n            <Grid item>\n              <Typography variant='h6'>Geral</Typography>\n            </Grid>\n\n            <Grid container item direction=\"row\" spacing={2}>\n              <Grid item xs={12} sm={12} md={6} lg={4} xl={2}>\n                <VTextField\n                  fullWidth\n                  name='nome'\n                  label='Nome'\n                  disabled={isLoading}\n                  onChange={e => setNome(e.target.value)}\n                />\n              </Grid>\n            </Grid>\n\n          </Grid>\n\n        </Box>\n      </VForm>\n    </LayoutBaseDePagina>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}