{"ast":null,"code":"export const errorInterceptor = error => {\n  var _error$response;\n\n  if (error.message === 'Network Error') {\n    return Promise.reject(new Error('Erro de conexão.'));\n  }\n\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    var _error$config$url;\n\n    localStorage.removeItem('APP_ACCESS_TOKEN');\n\n    if ((_error$config$url = error.config.url) !== null && _error$config$url !== void 0 && _error$config$url.includes('entrar')) {\n      alert(error.response.data.errors.default);\n    } else {\n      window.location.reload();\n    }\n  }\n\n  return Promise.reject(error);\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/shared/services/api/axios-config/interceptors/ErrorInterceptor.ts"],"names":["errorInterceptor","error","message","Promise","reject","Error","response","status","localStorage","removeItem","config","url","includes","alert","data","errors","default","window","location","reload"],"mappings":"AAGA,OAAO,MAAMA,gBAAgB,GAAIC,KAAD,IAAuB;AAAA;;AAErD,MAAIA,KAAK,CAACC,OAAN,KAAkB,eAAtB,EAAuC;AACrC,WAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,kBAAV,CAAf,CAAP;AACD;;AAED,MAAI,oBAAAJ,KAAK,CAACK,QAAN,oEAAgBC,MAAhB,MAA2B,GAA/B,EAAoC;AAAA;;AAClCC,IAAAA,YAAY,CAACC,UAAb,CAAwB,kBAAxB;;AAEA,6BAAIR,KAAK,CAACS,MAAN,CAAaC,GAAjB,8CAAI,kBAAkBC,QAAlB,CAA2B,QAA3B,CAAJ,EAA0C;AACxCC,MAAAA,KAAK,CAACZ,KAAK,CAACK,QAAN,CAAeQ,IAAf,CAAoBC,MAApB,CAA2BC,OAA5B,CAAL;AACD,KAFD,MAEO;AACLC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF;;AAED,SAAOhB,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD,CAjBM","sourcesContent":["import { AxiosError } from 'axios';\n\n\nexport const errorInterceptor = (error: AxiosError) => {\n\n  if (error.message === 'Network Error') {\n    return Promise.reject(new Error('Erro de conexão.'));\n  }\n\n  if (error.response?.status === 401) {\n    localStorage.removeItem('APP_ACCESS_TOKEN');\n\n    if (error.config.url?.includes('entrar')) {\n      alert(error.response.data.errors.default);\n    } else {\n      window.location.reload();\n    }\n  }\n\n  return Promise.reject(error);\n};\n"]},"metadata":{},"sourceType":"module"}