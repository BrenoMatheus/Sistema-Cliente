{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/Projeto advocacia/frontend/src/pages/dashboard/components/Maps.tsx\",\n    _s = $RefreshSig$();\n\nimport { APIProvider, Map, useMap, useMapsLibrary } from '@vis.gl/react-google-maps';\nimport { Environment } from '../../../shared/environment';\nimport { useEffect, useState } from 'react';\nimport { ClientsService } from '../../../shared/services/api/clients/ClientsService';\nimport { useDebounce } from '../../../shared/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst latFromStorage = localStorage.getItem('lat');\nconst longFromStorage = localStorage.getItem('long');\nlet originDestination = {\n  lat: 0,\n  lng: 0\n};\n\nif (latFromStorage !== null && longFromStorage !== null) {\n  originDestination = {\n    lat: parseFloat(latFromStorage) >= 0 ? parseFloat(latFromStorage) : -23.512056786782846,\n    lng: parseFloat(latFromStorage) > 0 ? parseFloat(longFromStorage) : -46.70957145290148\n  };\n}\n\nexport const MapsDashboard = () => {\n  // const position = { lat: -23.512056, lng: -46.70957 };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(APIProvider, {\n      apiKey: Environment.API_KEY,\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        defaultCenter: originDestination,\n        defaultZoom: 9,\n        mapId: Environment.ID_MAP,\n        fullscreenControl: false,\n        children: /*#__PURE__*/_jsxDEV(Directions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = MapsDashboard;\n\nfunction Directions() {\n  _s();\n\n  var _leg$distance, _leg$duration;\n\n  const {\n    debounce\n  } = useDebounce(); //const [rows, setRows] = useState<IListClient[]>([]);\n\n  const map = useMap();\n  const routesLibrary = useMapsLibrary('routes');\n  const [directionsService, setDirectionsService] = useState();\n  const [directionsRenderer, setDirectionsRenderer] = useState();\n  const [routes, setRoutes] = useState([]);\n  const [routeIndex, setRouteIndex] = useState(0);\n  const selected = routes[routeIndex];\n  const leg = selected === null || selected === void 0 ? void 0 : selected.legs[0];\n  useEffect(() => {\n    if (!routesLibrary || !map) return;\n    setDirectionsService(new routesLibrary.DirectionsService());\n    setDirectionsRenderer(new routesLibrary.DirectionsRenderer({\n      map\n    }));\n  }, [routesLibrary, map]);\n  useEffect(() => {\n    if (!directionsService || !directionsRenderer) return;\n    debounce(() => {\n      ClientsService.getAll().then(result => {\n        if (result instanceof Error) {\n          alert(result.message);\n        } else {\n          const locations = result.data;\n          const LatLng = locations.map(location => ({\n            lat: parseFloat(location.latitude),\n            lng: parseFloat(location.longitude)\n          }));\n          const waypoints = LatLng.map(location => ({\n            location: location\n          })); // Adicionando o ponto de origem ao final da lista de pontos de parada\n          //waypoints.push({ location: originDestination });\n\n          const arrayWayPoints = [...waypoints];\n          console.log('vbbb', arrayWayPoints);\n          if (!originDestination) return;\n          directionsService.route({\n            origin: originDestination,\n            waypoints: arrayWayPoints,\n            destination: originDestination,\n            travelMode: google.maps.TravelMode.DRIVING,\n            provideRouteAlternatives: true\n          }).then(response => {\n            directionsRenderer.setDirections(response);\n            setRoutes(response.routes);\n          });\n        }\n      });\n    });\n  }, [directionsService, directionsRenderer]);\n  useEffect(() => {\n    if (!directionsRenderer) return;\n    directionsRenderer.setRouteIndex(routeIndex);\n  }, [routeIndex, directionsRenderer]);\n  if (!leg) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      boxShadow: '0 0 4px rgba(0,0,0,.15)',\n      backgroundColor: 'black',\n      color: 'white',\n      cursor: 'auto',\n      fontSize: '14px',\n      lineHeight: '18px',\n      outline: '0',\n      padding: '12px 24px',\n      position: 'absolute',\n      right: '0',\n      top: '0',\n      width: '284px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selected.summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [leg.start_address.split(',')[0], \" para \", leg.end_address.split(',')[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Distancia: \", (_leg$distance = leg.distance) === null || _leg$distance === void 0 ? void 0 : _leg$distance.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Dura\\xE7\\xE3o: \", (_leg$duration = leg.duration) === null || _leg$duration === void 0 ? void 0 : _leg$duration.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Outras rotas:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: routes.map((route, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setRouteIndex(index),\n          children: route.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, route.summary, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Directions, \"XxGHkLIZ6Edm6JBIksNRahAcv5w=\", false, function () {\n  return [useDebounce, useMap, useMapsLibrary];\n});\n\n_c2 = Directions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapsDashboard\");\n$RefreshReg$(_c2, \"Directions\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/Projeto advocacia/frontend/src/pages/dashboard/components/Maps.tsx"],"names":["APIProvider","Map","useMap","useMapsLibrary","Environment","useEffect","useState","ClientsService","useDebounce","latFromStorage","localStorage","getItem","longFromStorage","originDestination","lat","lng","parseFloat","MapsDashboard","height","width","API_KEY","ID_MAP","Directions","debounce","map","routesLibrary","directionsService","setDirectionsService","directionsRenderer","setDirectionsRenderer","routes","setRoutes","routeIndex","setRouteIndex","selected","leg","legs","DirectionsService","DirectionsRenderer","getAll","then","result","Error","alert","message","locations","data","LatLng","location","latitude","longitude","waypoints","arrayWayPoints","console","log","route","origin","destination","travelMode","google","maps","TravelMode","DRIVING","provideRouteAlternatives","response","setDirections","boxShadow","backgroundColor","color","cursor","fontSize","lineHeight","outline","padding","position","right","top","summary","start_address","split","end_address","distance","text","duration","index"],"mappings":"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","sourcesContent":["import {\n  APIProvider,\n  Map,\n  useMap,\n  useMapsLibrary,\n} from '@vis.gl/react-google-maps';\nimport { Environment } from '../../../shared/environment';\nimport { useEffect, useState } from 'react';\nimport { ClientsService } from '../../../shared/services/api/clients/ClientsService';\nimport { useDebounce } from '../../../shared/hooks';\nconst latFromStorage = localStorage.getItem('lat');\nconst longFromStorage = localStorage.getItem('long');\nlet originDestination: google.maps.LatLngLiteral = { lat: 0, lng: 0 };\n\nif (latFromStorage !== null && longFromStorage !== null) {\n  originDestination = {\n    lat:\n      parseFloat(latFromStorage) >= 0\n        ? parseFloat(latFromStorage)\n        : -23.512056786782846,\n    lng:\n      parseFloat(latFromStorage) > 0\n        ? parseFloat(longFromStorage)\n        : -46.70957145290148,\n  };\n}\n\nexport const MapsDashboard: React.FC = () => {\n  // const position = { lat: -23.512056, lng: -46.70957 };\n\n  return (\n    <div style={{ height: '100vh', width: '100%' }}>\n      <APIProvider apiKey={Environment.API_KEY}>\n        <Map\n          defaultCenter={originDestination}\n          defaultZoom={9}\n          mapId={Environment.ID_MAP}\n          fullscreenControl={false}\n        >\n          <Directions />\n        </Map>\n      </APIProvider>\n    </div>\n  );\n};\n\nfunction Directions() {\n  const { debounce } = useDebounce();\n  //const [rows, setRows] = useState<IListClient[]>([]);\n  const map = useMap();\n  const routesLibrary = useMapsLibrary('routes');\n  const [directionsService, setDirectionsService] =\n    useState<google.maps.DirectionsService>();\n  const [directionsRenderer, setDirectionsRenderer] =\n    useState<google.maps.DirectionsRenderer>();\n  const [routes, setRoutes] = useState<google.maps.DirectionsRoute[]>([]);\n  const [routeIndex, setRouteIndex] = useState(0);\n  const selected = routes[routeIndex];\n  const leg = selected?.legs[0];\n\n  useEffect(() => {\n    if (!routesLibrary || !map) return;\n    setDirectionsService(new routesLibrary.DirectionsService());\n    setDirectionsRenderer(new routesLibrary.DirectionsRenderer({ map }));\n  }, [routesLibrary, map]);\n\n  useEffect(() => {\n    if (!directionsService || !directionsRenderer) return;\n\n    debounce(() => {\n      ClientsService.getAll().then((result) => {\n        if (result instanceof Error) {\n          alert(result.message);\n        } else {\n          const locations = result.data;\n\n          const LatLng: google.maps.LatLngLiteral[] = locations.map(\n            (location) => ({\n              lat: parseFloat(location.latitude),\n              lng: parseFloat(location.longitude),\n            })\n          );\n\n          const waypoints: google.maps.DirectionsWaypoint[] = LatLng.map(\n            (location) => ({\n              location: location,\n            })\n          );\n\n          // Adicionando o ponto de origem ao final da lista de pontos de parada\n          //waypoints.push({ location: originDestination });\n\n          const arrayWayPoints: google.maps.DirectionsWaypoint[] = [\n            ...waypoints,\n          ];\n\n          console.log('vbbb', arrayWayPoints);\n\n          if (!originDestination) return;\n          directionsService\n            .route({\n              origin: originDestination,\n              waypoints: arrayWayPoints,\n              destination: originDestination,\n              travelMode: google.maps.TravelMode.DRIVING,\n              provideRouteAlternatives: true,\n            })\n            .then((response) => {\n              directionsRenderer.setDirections(response);\n              setRoutes(response.routes);\n            });\n        }\n      });\n    });\n  }, [directionsService, directionsRenderer]);\n\n  useEffect(() => {\n    if (!directionsRenderer) return;\n    directionsRenderer.setRouteIndex(routeIndex);\n  }, [routeIndex, directionsRenderer]);\n\n  if (!leg) return null;\n\n  return (\n    <div\n      style={{\n        boxShadow: '0 0 4px rgba(0,0,0,.15)',\n        backgroundColor: 'black',\n        color: 'white',\n        cursor: 'auto',\n        fontSize: '14px',\n        lineHeight: '18px',\n        outline: '0',\n        padding: '12px 24px',\n        position: 'absolute',\n        right: '0',\n        top: '0',\n        width: '284px',\n      }}\n    >\n      <h2>{selected.summary}</h2>\n      <p>\n        {leg.start_address.split(',')[0]} para {leg.end_address.split(',')[0]}\n      </p>\n      <p>Distancia: {leg.distance?.text}</p>\n      <p>Duração: {leg.duration?.text}</p>\n\n      <h2>Outras rotas:</h2>\n      <ul>\n        {routes.map((route, index) => (\n          <li key={route.summary}>\n            <button onClick={() => setRouteIndex(index)}>\n              {route.summary}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}