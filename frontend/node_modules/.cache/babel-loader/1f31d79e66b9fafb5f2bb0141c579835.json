{"ast":null,"code":"import _slicedToArray from\"/home/brenomatheus/Documentos/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useCallback,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var DrawerContext=/*#__PURE__*/createContext({});export var useDrawerContext=function useDrawerContext(){return useContext(DrawerContext);};export var DrawerProvider=function DrawerProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),drawerOptions=_useState2[0],setDrawerOptions=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isDrawerOpen=_useState4[0],setIsDrawerOpen=_useState4[1];var toggleDrawerOpen=useCallback(function(){setIsDrawerOpen(function(oldDrawerOpen){return!oldDrawerOpen;});},[]);var handleSetDrawerOptions=useCallback(function(newDrawerOptions){setDrawerOptions(newDrawerOptions);},[]);return/*#__PURE__*/_jsx(DrawerContext.Provider,{value:{isDrawerOpen:isDrawerOpen,drawerOptions:drawerOptions,toggleDrawerOpen:toggleDrawerOpen,setDrawerOptions:handleSetDrawerOptions},children:children});};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/shared/contexts/DrawerContext.tsx"],"names":["createContext","useCallback","useContext","useState","DrawerContext","useDrawerContext","DrawerProvider","children","drawerOptions","setDrawerOptions","isDrawerOpen","setIsDrawerOpen","toggleDrawerOpen","oldDrawerOpen","handleSetDrawerOptions","newDrawerOptions"],"mappings":"4HAAA,OAASA,aAAT,CAAwBC,WAAxB,CAAqCC,UAArC,CAAiDC,QAAjD,KAAiE,OAAjE,C,2CAeA,GAAMC,CAAAA,aAAa,cAAGJ,aAAa,CAAC,EAAD,CAAnC,CAEA,MAAO,IAAMK,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CACpC,MAAOH,CAAAA,UAAU,CAACE,aAAD,CAAjB,CACD,CAFM,CAOP,MAAO,IAAME,CAAAA,cAA8C,CAAG,QAAjDA,CAAAA,cAAiD,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC9E,cAA0CJ,QAAQ,CAAkB,EAAlB,CAAlD,wCAAOK,aAAP,eAAsBC,gBAAtB,eACA,eAAwCN,QAAQ,CAAC,KAAD,CAAhD,yCAAOO,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,gBAAgB,CAAGX,WAAW,CAAC,UAAM,CACzCU,eAAe,CAAC,SAAAE,aAAa,QAAI,CAACA,aAAL,EAAd,CAAf,CACD,CAFmC,CAEjC,EAFiC,CAApC,CAIA,GAAMC,CAAAA,sBAAsB,CAAGb,WAAW,CAAC,SAACc,gBAAD,CAAuC,CAChFN,gBAAgB,CAACM,gBAAD,CAAhB,CACD,CAFyC,CAEvC,EAFuC,CAA1C,CAIA,mBACE,KAAC,aAAD,CAAe,QAAf,EAAwB,KAAK,CAAE,CAAEL,YAAY,CAAZA,YAAF,CAAgBF,aAAa,CAAbA,aAAhB,CAA+BI,gBAAgB,CAAhBA,gBAA/B,CAAiDH,gBAAgB,CAAEK,sBAAnE,CAA/B,UACGP,QADH,EADF,CAKD,CAjBM","sourcesContent":["import { createContext, useCallback, useContext, useState } from 'react';\n\ninterface IDrawerOption {\n  icon: string;\n  path: string;\n  label: string;\n}\n\ninterface IDrawerContextData {\n  isDrawerOpen: boolean;\n  toggleDrawerOpen: () => void;\n  drawerOptions: IDrawerOption[];\n  setDrawerOptions: (newDrawerOptions: IDrawerOption[]) => void;\n}\n\nconst DrawerContext = createContext({} as IDrawerContextData);\n\nexport const useDrawerContext = () => {\n  return useContext(DrawerContext);\n};\n\ninterface IDrawerProviderProps {\n  children: React.ReactNode\n}\nexport const DrawerProvider: React.FC<IDrawerProviderProps> = ({ children }) => {\n  const [drawerOptions, setDrawerOptions] = useState<IDrawerOption[]>([]);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\n  const toggleDrawerOpen = useCallback(() => {\n    setIsDrawerOpen(oldDrawerOpen => !oldDrawerOpen);\n  }, []);\n\n  const handleSetDrawerOptions = useCallback((newDrawerOptions: IDrawerOption[]) => {\n    setDrawerOptions(newDrawerOptions);\n  }, []);\n\n  return (\n    <DrawerContext.Provider value={{ isDrawerOpen, drawerOptions, toggleDrawerOpen, setDrawerOptions: handleSetDrawerOptions }}>\n      {children}\n    </DrawerContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}