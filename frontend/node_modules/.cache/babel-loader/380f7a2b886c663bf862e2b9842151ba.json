{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/frontend/src/shared/forms/VDateField.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { useField } from '@unform/core';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VDateField = _ref => {\n  _s();\n\n  let {\n    name,\n    ...rest\n  } = _ref;\n  const {\n    fieldName,\n    registerField,\n    defaultValue\n  } = useField(name);\n  const [value, setValue] = useState < Dayjs || null > (defaultValue || '');\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      getValue: () => value,\n      setValue: (_, value) => setValue(value)\n    });\n  }, [registerField, fieldName, dayjs(value)]);\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDayjs,\n    children: /*#__PURE__*/_jsxDEV(DemoContainer, {\n      components: ['DatePicker'],\n      children: /*#__PURE__*/_jsxDEV(DatePicker, { ...rest,\n        value: dayjs(value),\n        onChange: newValue => setValue(newValue)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VDateField, \"KUu0W9QFyOU1x11YyLOHFDBTDkQ=\", false, function () {\n  return [useField];\n});\n\n_c = VDateField;\n\nvar _c;\n\n$RefreshReg$(_c, \"VDateField\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/shared/forms/VDateField.tsx"],"names":["React","useEffect","useState","dayjs","Dayjs","DemoContainer","LocalizationProvider","AdapterDayjs","useField","DatePicker","VDateField","name","rest","fieldName","registerField","defaultValue","value","setValue","getValue","_","newValue"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,IAAgBC,KAAhB,QAA6B,OAA7B;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,SAASC,oBAAT,QAAqC,0CAArC;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,UAAT,QAA4C,qBAA5C;;AAMA,OAAO,MAAMC,UAAsC,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,GAAsB;AAE3E,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA;AAA5B,MAA4CP,QAAQ,CAACG,IAAD,CAA1D;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,GAACE,KAAT,IAAkB,QAAMW,YAAY,IAAI,EAAtB,CAA5C;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,aAAa,CAAC;AACZH,MAAAA,IAAI,EAAEE,SADM;AAEZK,MAAAA,QAAQ,EAAE,MAAMF,KAFJ;AAGZC,MAAAA,QAAQ,EAAE,CAACE,CAAD,EAAIH,KAAJ,KAAcC,QAAQ,CAACD,KAAD;AAHpB,KAAD,CAAb;AAKD,GANQ,EAMN,CAACF,aAAD,EAAgBD,SAAhB,EAA2BV,KAAK,CAACa,KAAD,CAAhC,CANM,CAAT;AAQA,sBACE,QAAC,oBAAD;AAAsB,IAAA,WAAW,EAAET,YAAnC;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,UAAU,EAAE,CAAC,YAAD,CAA3B;AAAA,6BACE,QAAC,UAAD,OACMK,IADN;AAEE,QAAA,KAAK,EAAET,KAAK,CAACa,KAAD,CAFd;AAGE,QAAA,QAAQ,EAAGI,QAAD,IAAcH,QAAQ,CAACG,QAAD;AAHlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzBM;;GAAMV,U;UAEuCF,Q;;;KAFvCE,U","sourcesContent":["import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { useField } from '@unform/core';\nimport { DatePicker, DatePickerProps } from '@mui/x-date-pickers';\n\ntype TVTextFieldProps = DatePickerProps<any> & {\n  name: string;\n}\n\nexport const VDateField: React.FC<TVTextFieldProps> = ({ name, ...rest }) => {\n\n  const { fieldName, registerField, defaultValue} = useField(name);\n\n  const [value, setValue] = useState<Dayjs || null>(defaultValue || '');\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      getValue: () => value,\n      setValue: (_, value) => setValue(value),\n    });\n  }, [registerField, fieldName, dayjs(value)]);\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DemoContainer components={['DatePicker']}>\n        <DatePicker \n          {...rest}\n          value={dayjs(value)}\n          onChange={(newValue) => setValue(newValue)}\n        />\n      </DemoContainer>\n    </LocalizationProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}