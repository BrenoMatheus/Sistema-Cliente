{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"views\", \"format\"];\nimport { resolveTimeFormat, isTimeView, isInternalTimeView } from './time-utils';\nimport { resolveDateFormat } from './date-utils';\nexport const resolveDateTimeFormat = (utils, _ref) => {\n  let {\n    views,\n    format\n  } = _ref,\n      other = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  if (format) {\n    return format;\n  }\n\n  const dateViews = [];\n  const timeViews = [];\n  views.forEach(view => {\n    if (isTimeView(view)) {\n      timeViews.push(view);\n    } else {\n      dateViews.push(view);\n    }\n  });\n\n  if (timeViews.length === 0) {\n    return resolveDateFormat(utils, _extends({\n      views: dateViews\n    }, other), false);\n  }\n\n  if (dateViews.length === 0) {\n    return resolveTimeFormat(utils, _extends({\n      views: timeViews\n    }, other));\n  }\n\n  const timeFormat = resolveTimeFormat(utils, _extends({\n    views: timeViews\n  }, other));\n  const dateFormat = resolveDateFormat(utils, _extends({\n    views: dateViews\n  }, other), false);\n  return `${dateFormat} ${timeFormat}`;\n};\n\nconst resolveViews = (ampm, views, shouldUseSingleColumn) => {\n  if (shouldUseSingleColumn) {\n    return views.filter(view => !isInternalTimeView(view) || view === 'hours');\n  }\n\n  return ampm ? [...views, 'meridiem'] : views;\n};\n\nconst resolveShouldRenderTimeInASingleColumn = (timeSteps, threshold) => {\n  var _timeSteps$hours, _timeSteps$minutes;\n\n  return 24 * 60 / (((_timeSteps$hours = timeSteps.hours) != null ? _timeSteps$hours : 1) * ((_timeSteps$minutes = timeSteps.minutes) != null ? _timeSteps$minutes : 5)) <= threshold;\n};\n\nexport function resolveTimeViewsResponse(_ref2) {\n  let {\n    thresholdToRenderTimeInASingleColumn: inThreshold,\n    ampm,\n    timeSteps: inTimeSteps,\n    views\n  } = _ref2;\n  const thresholdToRenderTimeInASingleColumn = inThreshold != null ? inThreshold : 24;\n\n  const timeSteps = _extends({\n    hours: 1,\n    minutes: 5,\n    seconds: 5\n  }, inTimeSteps);\n\n  const shouldRenderTimeInASingleColumn = resolveShouldRenderTimeInASingleColumn(timeSteps, thresholdToRenderTimeInASingleColumn);\n  return {\n    thresholdToRenderTimeInASingleColumn,\n    timeSteps,\n    shouldRenderTimeInASingleColumn,\n    views: resolveViews(ampm, views, shouldRenderTimeInASingleColumn)\n  };\n}","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/internals/utils/date-time-utils.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","resolveTimeFormat","isTimeView","isInternalTimeView","resolveDateFormat","resolveDateTimeFormat","utils","_ref","views","format","other","dateViews","timeViews","forEach","view","push","length","timeFormat","dateFormat","resolveViews","ampm","shouldUseSingleColumn","filter","resolveShouldRenderTimeInASingleColumn","timeSteps","threshold","_timeSteps$hours","_timeSteps$minutes","hours","minutes","resolveTimeViewsResponse","thresholdToRenderTimeInASingleColumn","inThreshold","inTimeSteps","seconds","shouldRenderTimeInASingleColumn"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,MAAMC,SAAS,GAAG,CAAC,OAAD,EAAU,QAAV,CAAlB;AACA,SAASC,iBAAT,EAA4BC,UAA5B,EAAwCC,kBAAxC,QAAkE,cAAlE;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACpD,MAAI;AACAC,IAAAA,KADA;AAEAC,IAAAA;AAFA,MAGEF,IAHN;AAAA,MAIEG,KAAK,GAAGX,6BAA6B,CAACQ,IAAD,EAAOP,SAAP,CAJvC;;AAKA,MAAIS,MAAJ,EAAY;AACV,WAAOA,MAAP;AACD;;AACD,QAAME,SAAS,GAAG,EAAlB;AACA,QAAMC,SAAS,GAAG,EAAlB;AACAJ,EAAAA,KAAK,CAACK,OAAN,CAAcC,IAAI,IAAI;AACpB,QAAIZ,UAAU,CAACY,IAAD,CAAd,EAAsB;AACpBF,MAAAA,SAAS,CAACG,IAAV,CAAeD,IAAf;AACD,KAFD,MAEO;AACLH,MAAAA,SAAS,CAACI,IAAV,CAAeD,IAAf;AACD;AACF,GAND;;AAOA,MAAIF,SAAS,CAACI,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAOZ,iBAAiB,CAACE,KAAD,EAAQR,QAAQ,CAAC;AACvCU,MAAAA,KAAK,EAAEG;AADgC,KAAD,EAErCD,KAFqC,CAAhB,EAEb,KAFa,CAAxB;AAGD;;AACD,MAAIC,SAAS,CAACK,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAOf,iBAAiB,CAACK,KAAD,EAAQR,QAAQ,CAAC;AACvCU,MAAAA,KAAK,EAAEI;AADgC,KAAD,EAErCF,KAFqC,CAAhB,CAAxB;AAGD;;AACD,QAAMO,UAAU,GAAGhB,iBAAiB,CAACK,KAAD,EAAQR,QAAQ,CAAC;AACnDU,IAAAA,KAAK,EAAEI;AAD4C,GAAD,EAEjDF,KAFiD,CAAhB,CAApC;AAGA,QAAMQ,UAAU,GAAGd,iBAAiB,CAACE,KAAD,EAAQR,QAAQ,CAAC;AACnDU,IAAAA,KAAK,EAAEG;AAD4C,GAAD,EAEjDD,KAFiD,CAAhB,EAEzB,KAFyB,CAApC;AAGA,SAAQ,GAAEQ,UAAW,IAAGD,UAAW,EAAnC;AACD,CAnCM;;AAoCP,MAAME,YAAY,GAAG,CAACC,IAAD,EAAOZ,KAAP,EAAca,qBAAd,KAAwC;AAC3D,MAAIA,qBAAJ,EAA2B;AACzB,WAAOb,KAAK,CAACc,MAAN,CAAaR,IAAI,IAAI,CAACX,kBAAkB,CAACW,IAAD,CAAnB,IAA6BA,IAAI,KAAK,OAA3D,CAAP;AACD;;AACD,SAAOM,IAAI,GAAG,CAAC,GAAGZ,KAAJ,EAAW,UAAX,CAAH,GAA4BA,KAAvC;AACD,CALD;;AAMA,MAAMe,sCAAsC,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACvE,MAAIC,gBAAJ,EAAsBC,kBAAtB;;AACA,SAAO,KAAK,EAAL,IAAW,CAAC,CAACD,gBAAgB,GAAGF,SAAS,CAACI,KAA9B,KAAwC,IAAxC,GAA+CF,gBAA/C,GAAkE,CAAnE,KAAyE,CAACC,kBAAkB,GAAGH,SAAS,CAACK,OAAhC,KAA4C,IAA5C,GAAmDF,kBAAnD,GAAwE,CAAjJ,CAAX,KAAmKF,SAA1K;AACD,CAHD;;AAIA,OAAO,SAASK,wBAAT,QAKJ;AAAA,MALsC;AACvCC,IAAAA,oCAAoC,EAAEC,WADC;AAEvCZ,IAAAA,IAFuC;AAGvCI,IAAAA,SAAS,EAAES,WAH4B;AAIvCzB,IAAAA;AAJuC,GAKtC;AACD,QAAMuB,oCAAoC,GAAGC,WAAW,IAAI,IAAf,GAAsBA,WAAtB,GAAoC,EAAjF;;AACA,QAAMR,SAAS,GAAG1B,QAAQ,CAAC;AACzB8B,IAAAA,KAAK,EAAE,CADkB;AAEzBC,IAAAA,OAAO,EAAE,CAFgB;AAGzBK,IAAAA,OAAO,EAAE;AAHgB,GAAD,EAIvBD,WAJuB,CAA1B;;AAKA,QAAME,+BAA+B,GAAGZ,sCAAsC,CAACC,SAAD,EAAYO,oCAAZ,CAA9E;AACA,SAAO;AACLA,IAAAA,oCADK;AAELP,IAAAA,SAFK;AAGLW,IAAAA,+BAHK;AAIL3B,IAAAA,KAAK,EAAEW,YAAY,CAACC,IAAD,EAAOZ,KAAP,EAAc2B,+BAAd;AAJd,GAAP;AAMD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"views\", \"format\"];\nimport { resolveTimeFormat, isTimeView, isInternalTimeView } from './time-utils';\nimport { resolveDateFormat } from './date-utils';\nexport const resolveDateTimeFormat = (utils, _ref) => {\n  let {\n      views,\n      format\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (format) {\n    return format;\n  }\n  const dateViews = [];\n  const timeViews = [];\n  views.forEach(view => {\n    if (isTimeView(view)) {\n      timeViews.push(view);\n    } else {\n      dateViews.push(view);\n    }\n  });\n  if (timeViews.length === 0) {\n    return resolveDateFormat(utils, _extends({\n      views: dateViews\n    }, other), false);\n  }\n  if (dateViews.length === 0) {\n    return resolveTimeFormat(utils, _extends({\n      views: timeViews\n    }, other));\n  }\n  const timeFormat = resolveTimeFormat(utils, _extends({\n    views: timeViews\n  }, other));\n  const dateFormat = resolveDateFormat(utils, _extends({\n    views: dateViews\n  }, other), false);\n  return `${dateFormat} ${timeFormat}`;\n};\nconst resolveViews = (ampm, views, shouldUseSingleColumn) => {\n  if (shouldUseSingleColumn) {\n    return views.filter(view => !isInternalTimeView(view) || view === 'hours');\n  }\n  return ampm ? [...views, 'meridiem'] : views;\n};\nconst resolveShouldRenderTimeInASingleColumn = (timeSteps, threshold) => {\n  var _timeSteps$hours, _timeSteps$minutes;\n  return 24 * 60 / (((_timeSteps$hours = timeSteps.hours) != null ? _timeSteps$hours : 1) * ((_timeSteps$minutes = timeSteps.minutes) != null ? _timeSteps$minutes : 5)) <= threshold;\n};\nexport function resolveTimeViewsResponse({\n  thresholdToRenderTimeInASingleColumn: inThreshold,\n  ampm,\n  timeSteps: inTimeSteps,\n  views\n}) {\n  const thresholdToRenderTimeInASingleColumn = inThreshold != null ? inThreshold : 24;\n  const timeSteps = _extends({\n    hours: 1,\n    minutes: 5,\n    seconds: 5\n  }, inTimeSteps);\n  const shouldRenderTimeInASingleColumn = resolveShouldRenderTimeInASingleColumn(timeSteps, thresholdToRenderTimeInASingleColumn);\n  return {\n    thresholdToRenderTimeInASingleColumn,\n    timeSteps,\n    shouldRenderTimeInASingleColumn,\n    views: resolveViews(ampm, views, shouldRenderTimeInASingleColumn)\n  };\n}"]},"metadata":{},"sourceType":"module"}