{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/frontend/src/shared/contexts/DrawerContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useCallback, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawerContext = /*#__PURE__*/createContext({});\nexport const useDrawerContext = () => {\n  _s();\n\n  return useContext(DrawerContext);\n};\n\n_s(useDrawerContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const DrawerProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [drawerOptions, setDrawerOptions] = useState([]);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const toggleDrawerOpen = useCallback(() => {\n    setIsDrawerOpen(oldDrawerOpen => !oldDrawerOpen);\n  }, []);\n  const handleSetDrawerOptions = useCallback(newDrawerOptions => {\n    setDrawerOptions(newDrawerOptions);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DrawerContext.Provider, {\n    value: {\n      isDrawerOpen,\n      drawerOptions,\n      toggleDrawerOpen,\n      setDrawerOptions: handleSetDrawerOptions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(DrawerProvider, \"34DnybbzaedWPzLgWpggHp9Wz2M=\");\n\n_c = DrawerProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerProvider\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/shared/contexts/DrawerContext.tsx"],"names":["createContext","useCallback","useContext","useState","DrawerContext","useDrawerContext","DrawerProvider","children","drawerOptions","setDrawerOptions","isDrawerOpen","setIsDrawerOpen","toggleDrawerOpen","oldDrawerOpen","handleSetDrawerOptions","newDrawerOptions"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,EAAiDC,QAAjD,QAAiE,OAAjE;;AAeA,MAAMC,aAAa,gBAAGJ,aAAa,CAAC,EAAD,CAAnC;AAEA,OAAO,MAAMK,gBAAgB,GAAG,MAAM;AAAA;;AACpC,SAAOH,UAAU,CAACE,aAAD,CAAjB;AACD,CAFM;;GAAMC,gB;;AAOb,OAAO,MAAMC,cAA8C,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC9E,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAkB,EAAlB,CAAlD;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMS,gBAAgB,GAAGX,WAAW,CAAC,MAAM;AACzCU,IAAAA,eAAe,CAACE,aAAa,IAAI,CAACA,aAAnB,CAAf;AACD,GAFmC,EAEjC,EAFiC,CAApC;AAIA,QAAMC,sBAAsB,GAAGb,WAAW,CAAEc,gBAAD,IAAuC;AAChFN,IAAAA,gBAAgB,CAACM,gBAAD,CAAhB;AACD,GAFyC,EAEvC,EAFuC,CAA1C;AAIA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEL,MAAAA,YAAF;AAAgBF,MAAAA,aAAhB;AAA+BI,MAAAA,gBAA/B;AAAiDH,MAAAA,gBAAgB,EAAEK;AAAnE,KAA/B;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjBM;;IAAMD,c;;KAAAA,c","sourcesContent":["import { createContext, useCallback, useContext, useState } from 'react';\n\ninterface IDrawerOption {\n  icon: string;\n  path: string;\n  label: string;\n}\n\ninterface IDrawerContextData {\n  isDrawerOpen: boolean;\n  toggleDrawerOpen: () => void;\n  drawerOptions: IDrawerOption[];\n  setDrawerOptions: (newDrawerOptions: IDrawerOption[]) => void;\n}\n\nconst DrawerContext = createContext({} as IDrawerContextData);\n\nexport const useDrawerContext = () => {\n  return useContext(DrawerContext);\n};\n\ninterface IDrawerProviderProps {\n  children: React.ReactNode\n}\nexport const DrawerProvider: React.FC<IDrawerProviderProps> = ({ children }) => {\n  const [drawerOptions, setDrawerOptions] = useState<IDrawerOption[]>([]);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\n  const toggleDrawerOpen = useCallback(() => {\n    setIsDrawerOpen(oldDrawerOpen => !oldDrawerOpen);\n  }, []);\n\n  const handleSetDrawerOptions = useCallback((newDrawerOptions: IDrawerOption[]) => {\n    setDrawerOptions(newDrawerOptions);\n  }, []);\n\n  return (\n    <DrawerContext.Provider value={{ isDrawerOpen, drawerOptions, toggleDrawerOpen, setDrawerOptions: handleSetDrawerOptions }}>\n      {children}\n    </DrawerContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}