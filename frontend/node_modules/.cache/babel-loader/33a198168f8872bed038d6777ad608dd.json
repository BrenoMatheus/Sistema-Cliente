{"ast":null,"code":"import * as React from 'react';\nimport { useLocalizationContext } from './useUtils';\nexport function useValidation(props, validate, isSameError, defaultErrorState) {\n  var value = props.value,\n      onError = props.onError;\n  var adapter = useLocalizationContext();\n  var previousValidationErrorRef = React.useRef(defaultErrorState);\n  var validationError = validate({\n    adapter: adapter,\n    value: value,\n    props: props\n  });\n  React.useEffect(function () {\n    if (onError && !isSameError(validationError, previousValidationErrorRef.current)) {\n      onError(validationError, value);\n    }\n\n    previousValidationErrorRef.current = validationError;\n  }, [isSameError, onError, previousValidationErrorRef, validationError, value]);\n  return validationError;\n}","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/internals/hooks/useValidation.js"],"names":["React","useLocalizationContext","useValidation","props","validate","isSameError","defaultErrorState","value","onError","adapter","previousValidationErrorRef","useRef","validationError","useEffect","current"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,sBAAT,QAAuC,YAAvC;AACA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,QAA9B,EAAwCC,WAAxC,EAAqDC,iBAArD,EAAwE;AAC7E,MACEC,KADF,GAGIJ,KAHJ,CACEI,KADF;AAAA,MAEEC,OAFF,GAGIL,KAHJ,CAEEK,OAFF;AAIA,MAAMC,OAAO,GAAGR,sBAAsB,EAAtC;AACA,MAAMS,0BAA0B,GAAGV,KAAK,CAACW,MAAN,CAAaL,iBAAb,CAAnC;AACA,MAAMM,eAAe,GAAGR,QAAQ,CAAC;AAC/BK,IAAAA,OAAO,EAAPA,OAD+B;AAE/BF,IAAAA,KAAK,EAALA,KAF+B;AAG/BJ,IAAAA,KAAK,EAALA;AAH+B,GAAD,CAAhC;AAKAH,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAM;AACpB,QAAIL,OAAO,IAAI,CAACH,WAAW,CAACO,eAAD,EAAkBF,0BAA0B,CAACI,OAA7C,CAA3B,EAAkF;AAChFN,MAAAA,OAAO,CAACI,eAAD,EAAkBL,KAAlB,CAAP;AACD;;AACDG,IAAAA,0BAA0B,CAACI,OAA3B,GAAqCF,eAArC;AACD,GALD,EAKG,CAACP,WAAD,EAAcG,OAAd,EAAuBE,0BAAvB,EAAmDE,eAAnD,EAAoEL,KAApE,CALH;AAMA,SAAOK,eAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { useLocalizationContext } from './useUtils';\nexport function useValidation(props, validate, isSameError, defaultErrorState) {\n  const {\n    value,\n    onError\n  } = props;\n  const adapter = useLocalizationContext();\n  const previousValidationErrorRef = React.useRef(defaultErrorState);\n  const validationError = validate({\n    adapter,\n    value,\n    props\n  });\n  React.useEffect(() => {\n    if (onError && !isSameError(validationError, previousValidationErrorRef.current)) {\n      onError(validationError, value);\n    }\n    previousValidationErrorRef.current = validationError;\n  }, [isSameError, onError, previousValidationErrorRef, validationError, value]);\n  return validationError;\n}"]},"metadata":{},"sourceType":"module"}