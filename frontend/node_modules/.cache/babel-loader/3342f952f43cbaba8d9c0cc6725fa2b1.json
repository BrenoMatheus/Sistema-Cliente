{"ast":null,"code":"export const errorInterceptor = error => {\n  var _error$response;\n\n  if (error.message === 'Network Error') {\n    return Promise.reject(new Error('Erro de conexão.'));\n  }\n\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {// Do something\n  }\n\n  return Promise.reject(error);\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/Site Node-Type-React/frontend/src/shared/services/api/axios-config/interceptors/ErrorInterceptor.ts"],"names":["errorInterceptor","error","message","Promise","reject","Error","response","status"],"mappings":"AAGA,OAAO,MAAMA,gBAAgB,GAAIC,KAAD,IAAuB;AAAA;;AAErD,MAAIA,KAAK,CAACC,OAAN,KAAkB,eAAtB,EAAuC;AACrC,WAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,kBAAV,CAAf,CAAP;AACD;;AAED,MAAI,oBAAAJ,KAAK,CAACK,QAAN,oEAAgBC,MAAhB,MAA2B,GAA/B,EAAoC,CAClC;AACD;;AAED,SAAOJ,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD,CAXM","sourcesContent":["import { AxiosError } from 'axios';\n\n\nexport const errorInterceptor = (error: AxiosError) => {\n\n  if (error.message === 'Network Error') {\n    return Promise.reject(new Error('Erro de conexão.'));\n  }\n\n  if (error.response?.status === 401) {\n    // Do something\n  }\n\n  return Promise.reject(error);\n};\n"]},"metadata":{},"sourceType":"module"}