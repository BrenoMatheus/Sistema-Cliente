{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/ListItemofLines.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { Icon, IconButton, LinearProgress, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TableRow } from '@mui/material';\nimport { ItemofLinesService } from '../../../../shared/services/api/itemofLines/ItemofLinesService';\nimport { Environment } from '../../../../shared/environment';\nimport { useDebounce } from '../../../../shared/hooks';\nimport { useField } from '@unform/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListItemofLines = _ref => {\n  _s();\n\n  let {\n    name\n  } = _ref;\n  const {\n    fieldName,\n    registerField,\n    defaultValue,\n    error,\n    clearError\n  } = useField('itemofLineID');\n  const {\n    debounce\n  } = useDebounce();\n  const [selectedId, setSelectedId] = useState(defaultValue);\n  const [opcoes, setOpcoes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [busca, setBusca] = useState('');\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      getValue: () => selectedId,\n      setValue: (_, newSelectedId) => setSelectedId(newSelectedId)\n    });\n  }, [registerField, fieldName, selectedId]);\n  useEffect(() => {\n    setIsLoading(true);\n    debounce(() => {\n      ItemofLinesService.getAll(1, busca, selectedId).then(result => {\n        setIsLoading(false);\n\n        if (result instanceof Error) {// alert(result.message);\n        } else {\n          //console.log(result);\n          setOpcoes(result.data.map(itemofLine => ({\n            id: itemofLine.id,\n            label: itemofLine.name\n          })));\n        }\n      });\n    });\n  }, [busca, selectedId]);\n  const autoCompleteSelectedOption = useMemo(() => {\n    if (!selectedId) return null;\n    const selectedOption = opcoes.find(opcao => opcao.id === selectedId);\n    if (!selectedOption) return null;\n    return selectedOption;\n  }, [selectedId, opcoes]);\n\n  const handleDelete = id => {\n    if (confirm('Realmente deseja apagar?')) {\n      ItemofLinesService.deleteById(id).then(result => {\n        if (result instanceof Error) {\n          alert(result.message);\n        } else {\n          setRows(oldRows => [...oldRows.filter(oldRow => oldRow.id !== id)]);\n          alert('Registro apagado com sucesso!');\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    variant: \"outlined\",\n    sx: {\n      m: 1,\n      width: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            width: 100,\n            children: \"A\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Quantidade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleDelete(row.id),\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => navigate(`/itemofLines/detail/${row.id}`),\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                children: \"edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.itemID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), totalCount === 0 && !isLoading && /*#__PURE__*/_jsxDEV(\"caption\", {\n        children: Environment.EMPTY_LISTING\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: isLoading && /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"indeterminate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListItemofLines, \"y+Bgb2X7SPauLgUl3d7qQzaoJm8=\", false, function () {\n  return [useField, useDebounce];\n});\n\n_c = ListItemofLines;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItemofLines\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/ListItemofLines.tsx"],"names":["useEffect","useMemo","useState","Icon","IconButton","LinearProgress","Paper","Table","TableBody","TableCell","TableContainer","TableFooter","TableHead","TableRow","ItemofLinesService","Environment","useDebounce","useField","ListItemofLines","name","fieldName","registerField","defaultValue","error","clearError","debounce","selectedId","setSelectedId","opcoes","setOpcoes","isLoading","setIsLoading","busca","setBusca","getValue","setValue","_","newSelectedId","getAll","then","result","Error","data","map","itemofLine","id","label","autoCompleteSelectedOption","selectedOption","find","opcao","handleDelete","confirm","deleteById","alert","message","setRows","oldRows","filter","oldRow","m","width","rows","row","navigate","itemID","amount","total","totalCount","EMPTY_LISTING"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,cAA3B,EAAuDC,KAAvD,EAA8DC,KAA9D,EAAqEC,SAArE,EAAgFC,SAAhF,EAA2FC,cAA3F,EAA2GC,WAA3G,EAAwHC,SAAxH,EAAmIC,QAAnI,QAAmK,eAAnK;AAGA,SAA0BC,kBAA1B,QAAqD,gEAArD;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAUA,OAAO,MAAMC,eAA2C,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACvE,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA,YAA5B;AAA0CC,IAAAA,KAA1C;AAAiDC,IAAAA;AAAjD,MAAgEP,QAAQ,CAAC,cAAD,CAA9E;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeT,WAAW,EAAhC;AAEA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAqBoB,YAArB,CAA5C;AAEA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAW,EAAX,CAApC;AACA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC8B,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,EAAD,CAAlC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,aAAa,CAAC;AACZF,MAAAA,IAAI,EAAEC,SADM;AAEZc,MAAAA,QAAQ,EAAE,MAAMR,UAFJ;AAGZS,MAAAA,QAAQ,EAAE,CAACC,CAAD,EAAIC,aAAJ,KAAsBV,aAAa,CAACU,aAAD;AAHjC,KAAD,CAAb;AAKD,GANQ,EAMN,CAAChB,aAAD,EAAgBD,SAAhB,EAA2BM,UAA3B,CANM,CAAT;AAQA1B,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAN,IAAAA,QAAQ,CAAC,MAAM;AACbX,MAAAA,kBAAkB,CAACwB,MAAnB,CAA0B,CAA1B,EAA6BN,KAA7B,EAAoCN,UAApC,EACGa,IADH,CACSC,MAAD,IAAY;AAChBT,QAAAA,YAAY,CAAC,KAAD,CAAZ;;AAEA,YAAIS,MAAM,YAAYC,KAAtB,EAA6B,CAC3B;AACD,SAFD,MAEO;AACL;AACAZ,UAAAA,SAAS,CAACW,MAAM,CAACE,IAAP,CAAYC,GAAZ,CAAgBC,UAAU,KAAK;AAAEC,YAAAA,EAAE,EAAED,UAAU,CAACC,EAAjB;AAAqBC,YAAAA,KAAK,EAAEF,UAAU,CAACzB;AAAvC,WAAL,CAA1B,CAAD,CAAT;AACD;AACF,OAVH;AAWD,KAZO,CAAR;AAaD,GAhBQ,EAgBN,CAACa,KAAD,EAAQN,UAAR,CAhBM,CAAT;AAkBA,QAAMqB,0BAA0B,GAAG9C,OAAO,CAAC,MAAM;AAC/C,QAAI,CAACyB,UAAL,EAAiB,OAAO,IAAP;AAEjB,UAAMsB,cAAc,GAAGpB,MAAM,CAACqB,IAAP,CAAYC,KAAK,IAAIA,KAAK,CAACL,EAAN,KAAanB,UAAlC,CAAvB;AACA,QAAI,CAACsB,cAAL,EAAqB,OAAO,IAAP;AAErB,WAAOA,cAAP;AACD,GAPyC,EAOvC,CAACtB,UAAD,EAAaE,MAAb,CAPuC,CAA1C;;AAUA,QAAMuB,YAAY,GAAIN,EAAD,IAAgB;AACnC,QAAIO,OAAO,CAAC,0BAAD,CAAX,EAAyC;AACvCtC,MAAAA,kBAAkB,CAACuC,UAAnB,CAA8BR,EAA9B,EACGN,IADH,CACQC,MAAM,IAAI;AACd,YAAIA,MAAM,YAAYC,KAAtB,EAA6B;AAC3Ba,UAAAA,KAAK,CAACd,MAAM,CAACe,OAAR,CAAL;AACD,SAFD,MAEO;AACLC,UAAAA,OAAO,CAACC,OAAO,IAAI,CACjB,GAAGA,OAAO,CAACC,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACd,EAAP,KAAcA,EAAvC,CADc,CAAZ,CAAP;AAGAS,UAAAA,KAAK,CAAC,+BAAD,CAAL;AACD;AACF,OAVH;AAWD;AACF,GAdD;;AAiBA,sBACE,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAEhD,KAA3B;AAAkC,IAAA,OAAO,EAAC,UAA1C;AAAqD,IAAA,EAAE,EAAE;AAAEsD,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,KAAK,EAAE;AAAf,KAAzD;AAAA,2BACE,QAAC,KAAD;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,SAAD;AAAA,kBACGC,IAAI,CAACnB,GAAL,CAASoB,GAAG,iBACX,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,IAAI,EAAC,OAAjB;AAAyB,cAAA,OAAO,EAAE,MAAMZ,YAAY,CAACY,GAAG,CAAClB,EAAL,CAApD;AAAA,qCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,UAAD;AAAY,cAAA,IAAI,EAAC,OAAjB;AAAyB,cAAA,OAAO,EAAE,MAAMmB,QAAQ,CAAE,uBAAsBD,GAAG,CAAClB,EAAG,EAA/B,CAAhD;AAAA,qCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,SAAD;AAAA,sBAAYkB,GAAG,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE,QAAC,SAAD;AAAA,sBAAYF,GAAG,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAVF,eAWE,QAAC,SAAD;AAAA,sBAAYH,GAAG,CAACI;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA,WAAeJ,GAAG,CAAClB,EAAnB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cATF,EA2BGuB,UAAU,KAAK,CAAf,IAAoB,CAACtC,SAArB,iBACC;AAAA,kBAAUf,WAAW,CAACsD;AAAtB;AAAA;AAAA;AAAA;AAAA,cA5BJ,eA+BE,QAAC,WAAD;AAAA,kBACGvC,SAAS,iBACR,QAAC,QAAD;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,OAAO,EAAE,CAApB;AAAA,mCACE,QAAC,cAAD;AAAgB,cAAA,OAAO,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CA7GM;;GAAMZ,e;UAC2DD,Q,EACjDD,W;;;KAFVE,e","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { Icon, IconButton, LinearProgress, Pagination, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TableRow, TextFieldProps } from '@mui/material';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport { IListItemofLine, ItemofLinesService, } from '../../../../shared/services/api/itemofLines/ItemofLinesService';\nimport { Environment } from '../../../../shared/environment';\nimport { useDebounce } from '../../../../shared/hooks';\nimport { useField } from '@unform/core';\n\ntype TVTextFieldProps = TextFieldProps & {\n  name: string;\n}\n\ninterface IProps {\n  isExternalLoading?: boolean;\n}\n\nexport const ListItemofLines: React.FC<TVTextFieldProps> = ({ name }) => {\n  const { fieldName, registerField, defaultValue, error, clearError } = useField('itemofLineID');\n  const { debounce } = useDebounce();\n\n  const [selectedId, setSelectedId] = useState<number | undefined>(defaultValue);\n\n  const [opcoes, setOpcoes] = useState<IProps[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [busca, setBusca] = useState('');\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      getValue: () => selectedId,\n      setValue: (_, newSelectedId) => setSelectedId(newSelectedId),\n    });\n  }, [registerField, fieldName, selectedId]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    debounce(() => {\n      ItemofLinesService.getAll(1, busca, selectedId)\n        .then((result) => {\n          setIsLoading(false);\n\n          if (result instanceof Error) {\n            // alert(result.message);\n          } else {\n            //console.log(result);\n            setOpcoes(result.data.map(itemofLine => ({ id: itemofLine.id, label: itemofLine.name })));\n          }\n        });\n    });\n  }, [busca, selectedId]);\n\n  const autoCompleteSelectedOption = useMemo(() => {\n    if (!selectedId) return null;\n\n    const selectedOption = opcoes.find(opcao => opcao.id === selectedId);\n    if (!selectedOption) return null;\n\n    return selectedOption;\n  }, [selectedId, opcoes]);\n\n\n  const handleDelete = (id: number) => {\n    if (confirm('Realmente deseja apagar?')) {\n      ItemofLinesService.deleteById(id)\n        .then(result => {\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            setRows(oldRows => [\n              ...oldRows.filter(oldRow => oldRow.id !== id),\n            ]);\n            alert('Registro apagado com sucesso!');\n          }\n        });\n    }\n  };\n\n\n  return (\n    <TableContainer component={Paper} variant=\"outlined\" sx={{ m: 1, width: 'auto' }}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell width={100}>Ações</TableCell>\n            <TableCell>Nome</TableCell>\n            <TableCell>Quantidade</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>\n                <IconButton size=\"small\" onClick={() => handleDelete(row.id)}>\n                  <Icon>delete</Icon>\n                </IconButton>\n                <IconButton size=\"small\" onClick={() => navigate(`/itemofLines/detail/${row.id}`)}>\n                  <Icon>edit</Icon>\n                </IconButton>\n              </TableCell>\n              <TableCell>{row.itemID}</TableCell>\n              <TableCell>{row.amount}</TableCell>\n              <TableCell>{row.total}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n\n        {totalCount === 0 && !isLoading && (\n          <caption>{Environment.EMPTY_LISTING}</caption>\n        )}\n\n        <TableFooter>\n          {isLoading && (\n            <TableRow>\n              <TableCell colSpan={3}>\n                <LinearProgress variant='indeterminate' />\n              </TableCell>\n            </TableRow>\n          )}\n\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}