{"ast":null,"code":"import { Environment } from '../../../environment';\nimport { Api } from '../axios-config';\n\nconst getAll = async function () {\n  let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  let filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  try {\n    const urlRelativa = `/equipments?page=${page}&limit=${Environment.LIMITE_DE_LINHAS}&filter=${filter}&id=${id}`;\n    const {\n      data,\n      headers\n    } = await Api().get(urlRelativa);\n\n    if (data) {\n      return {\n        data,\n        totalCount: Number(headers['x-total-count'] || Environment.LIMITE_DE_LINHAS)\n      };\n    }\n\n    return new Error('Erro ao listar os registros.');\n  } catch (error) {\n    var _response;\n\n    console.error(error);\n    return new Error(((_response = error.response) === null || _response === void 0 ? void 0 : _response.data.errors.default) || 'Erro ao listar os registros.');\n  }\n};\n\nconst getById = async id => {\n  try {\n    const {\n      data\n    } = await Api().get(`/cidades/${id}`);\n\n    if (data) {\n      return data;\n    }\n\n    return new Error('Erro ao consultar o registro.');\n  } catch (error) {\n    var _response2;\n\n    console.error(error);\n    return new Error(((_response2 = error.response) === null || _response2 === void 0 ? void 0 : _response2.data.errors.default) || 'Erro ao consultar o registro.');\n  }\n};\n\nconst create = async dados => {\n  try {\n    const {\n      data\n    } = await Api().post('/cidades', dados);\n\n    if (data) {\n      return data;\n    }\n\n    return new Error('Erro ao criar o registro.');\n  } catch (error) {\n    var _response3;\n\n    console.error(error);\n    return new Error(((_response3 = error.response) === null || _response3 === void 0 ? void 0 : _response3.data.errors.default) || 'Erro ao criar o registro.');\n  }\n};\n\nconst updateById = async (id, dados) => {\n  try {\n    await Api().put(`/cidades/${id}`, dados);\n  } catch (error) {\n    var _response4;\n\n    console.error(error);\n    return new Error(((_response4 = error.response) === null || _response4 === void 0 ? void 0 : _response4.data.errors.default) || 'Erro ao atualizar o registro.');\n  }\n};\n\nconst deleteById = async id => {\n  try {\n    await Api().delete(`/cidades/${id}`);\n  } catch (error) {\n    var _response5;\n\n    return new Error(((_response5 = error.response) === null || _response5 === void 0 ? void 0 : _response5.data.errors.default) || 'Erro ao apagar o registro.');\n  }\n};\n\nexport const EquipmentsService = {\n  getAll,\n  create,\n  getById,\n  updateById,\n  deleteById\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/shared/services/api/equipments/EquipmentsService.ts"],"names":["Environment","Api","getAll","page","filter","id","urlRelativa","LIMITE_DE_LINHAS","data","headers","get","totalCount","Number","Error","error","console","response","errors","default","getById","create","dados","post","updateById","put","deleteById","delete","EquipmentsService"],"mappings":"AAEA,SAASA,WAAT,QAA4B,sBAA5B;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAwBA,MAAMC,MAAM,GAAG,kBAAgF;AAAA,MAAzEC,IAAyE,uEAAlE,CAAkE;AAAA,MAA/DC,MAA+D,uEAAtD,EAAsD;AAAA,MAAlDC,EAAkD,uEAA7C,CAA6C;;AAC7F,MAAI;AACF,UAAMC,WAAW,GAAI,oBAAmBH,IAAK,UAASH,WAAW,CAACO,gBAAiB,WAAUH,MAAO,OAAMC,EAAG,EAA7G;AAEA,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoB,MAAMR,GAAG,GAAGS,GAAN,CAAUJ,WAAV,CAAhC;;AAEA,QAAIE,IAAJ,EAAU;AACR,aAAO;AACLA,QAAAA,IADK;AAELG,QAAAA,UAAU,EAAEC,MAAM,CAACH,OAAO,CAAC,eAAD,CAAP,IAA4BT,WAAW,CAACO,gBAAzC;AAFb,OAAP;AAID;;AAED,WAAO,IAAIM,KAAJ,CAAU,8BAAV,CAAP;AACD,GAbD,CAaE,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAO,IAAID,KAAJ,CAAU,cAACC,KAAD,CAAsBE,QAAtB,wDAAgCR,IAAhC,CAAqCS,MAArC,CAA4CC,OAA5C,KAAuD,8BAAjE,CAAP;AACD;AACF,CAlBD;;AAoBA,MAAMC,OAAO,GAAG,MAAOd,EAAP,IAAyD;AACvE,MAAI;AACF,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAMP,GAAG,GAAGS,GAAN,CAAW,YAAWL,EAAG,EAAzB,CAAvB;;AAEA,QAAIG,IAAJ,EAAU;AACR,aAAOA,IAAP;AACD;;AAED,WAAO,IAAIK,KAAJ,CAAU,+BAAV,CAAP;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAO,IAAID,KAAJ,CAAU,eAACC,KAAD,CAAsBE,QAAtB,0DAAgCR,IAAhC,CAAqCS,MAArC,CAA4CC,OAA5C,KAAuD,+BAAjE,CAAP;AACD;AACF,CAbD;;AAeA,MAAME,MAAM,GAAG,MAAOC,KAAP,IAAwE;AACrF,MAAI;AACF,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMP,GAAG,GAAGqB,IAAN,CAAmB,UAAnB,EAA+BD,KAA/B,CAAvB;;AAEA,QAAIb,IAAJ,EAAU;AACR,aAAOA,IAAP;AACD;;AAED,WAAO,IAAIK,KAAJ,CAAU,2BAAV,CAAP;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAO,IAAID,KAAJ,CAAU,eAACC,KAAD,CAAsBE,QAAtB,0DAAgCR,IAAhC,CAAqCS,MAArC,CAA4CC,OAA5C,KAAuD,2BAAjE,CAAP;AACD;AACF,CAbD;;AAeA,MAAMK,UAAU,GAAG,OAAOlB,EAAP,EAAmBgB,KAAnB,KAAsE;AACvF,MAAI;AACF,UAAMpB,GAAG,GAAGuB,GAAN,CAAW,YAAWnB,EAAG,EAAzB,EAA4BgB,KAA5B,CAAN;AACD,GAFD,CAEE,OAAOP,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAO,IAAID,KAAJ,CAAU,eAACC,KAAD,CAAsBE,QAAtB,0DAAgCR,IAAhC,CAAqCS,MAArC,CAA4CC,OAA5C,KAAuD,+BAAjE,CAAP;AACD;AACF,CAPD;;AASA,MAAMO,UAAU,GAAG,MAAOpB,EAAP,IAA6C;AAC9D,MAAI;AACF,UAAMJ,GAAG,GAAGyB,MAAN,CAAc,YAAWrB,EAAG,EAA5B,CAAN;AACD,GAFD,CAEE,OAAOS,KAAP,EAAc;AAAA;;AACd,WAAO,IAAID,KAAJ,CAAU,eAACC,KAAD,CAAsBE,QAAtB,0DAAgCR,IAAhC,CAAqCS,MAArC,CAA4CC,OAA5C,KAAuD,4BAAjE,CAAP;AACD;AACF,CAND;;AASA,OAAO,MAAMS,iBAAiB,GAAG;AAC/BzB,EAAAA,MAD+B;AAE/BkB,EAAAA,MAF+B;AAG/BD,EAAAA,OAH+B;AAI/BI,EAAAA,UAJ+B;AAK/BE,EAAAA;AAL+B,CAA1B","sourcesContent":["import { AxiosError } from 'axios';\n\nimport { Environment } from '../../../environment';\nimport { Api } from '../axios-config';\n\n\nexport interface IListEquipment {\n  id: number,\n  name: string, \n  serieNumber: string, \n  type: string,\n  description?: string,\n}\n\nexport interface IDetailEquipment {\n  id: number,\n  name: string, \n  serieNumber: string, \n  type: string,\n  description?: string,\n}\n\ntype TEquipmentTotalCount = {\n  data: IListEquipment[];\n  totalCount: number;\n}\n\nconst getAll = async (page = 1, filter = '', id = 0): Promise<TEquipmentTotalCount | Error> => {\n  try {\n    const urlRelativa = `/equipments?page=${page}&limit=${Environment.LIMITE_DE_LINHAS}&filter=${filter}&id=${id}`;\n\n    const { data, headers } = await Api().get(urlRelativa);\n\n    if (data) {\n      return {\n        data,\n        totalCount: Number(headers['x-total-count'] || Environment.LIMITE_DE_LINHAS),\n      };\n    }\n\n    return new Error('Erro ao listar os registros.');\n  } catch (error) {\n    console.error(error);\n    return new Error((error as AxiosError).response?.data.errors.default || 'Erro ao listar os registros.');\n  }\n};\n\nconst getById = async (id: number): Promise<IDetailEquipment | Error> => {\n  try {\n    const { data } = await Api().get(`/cidades/${id}`);\n\n    if (data) {\n      return data;\n    }\n\n    return new Error('Erro ao consultar o registro.');\n  } catch (error) {\n    console.error(error);\n    return new Error((error as AxiosError).response?.data.errors.default || 'Erro ao consultar o registro.');\n  }\n};\n\nconst create = async (dados: Omit<IDetailEquipment, 'id'>): Promise<number | Error> => {\n  try {\n    const { data } = await Api().post<number>('/cidades', dados);\n\n    if (data) {\n      return data;\n    }\n\n    return new Error('Erro ao criar o registro.');\n  } catch (error) {\n    console.error(error);\n    return new Error((error as AxiosError).response?.data.errors.default || 'Erro ao criar o registro.');\n  }\n};\n\nconst updateById = async (id: number, dados: IDetailEquipment): Promise<void | Error> => {\n  try {\n    await Api().put(`/cidades/${id}`, dados);\n  } catch (error) {\n    console.error(error);\n    return new Error((error as AxiosError).response?.data.errors.default || 'Erro ao atualizar o registro.');\n  }\n};\n\nconst deleteById = async (id: number): Promise<void | Error> => {\n  try {\n    await Api().delete(`/cidades/${id}`);\n  } catch (error) {\n    return new Error((error as AxiosError).response?.data.errors.default || 'Erro ao apagar o registro.');\n  }\n};\n\n\nexport const EquipmentsService = {\n  getAll,\n  create,\n  getById,\n  updateById,\n  deleteById,\n};\n"]},"metadata":{},"sourceType":"module"}