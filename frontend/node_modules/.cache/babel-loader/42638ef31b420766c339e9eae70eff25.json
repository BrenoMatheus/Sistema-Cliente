{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { useUtils } from '../internals/hooks/useUtils';\nimport { TimePickerToolbar } from './TimePickerToolbar';\nimport { applyDefaultViewProps } from '../internals/utils/views';\nimport { uncapitalizeObjectKeys } from '../internals/utils/slots-migration';\nexport function useTimePickerDefaultizedProps(props, name) {\n  var _themeProps$ampm, _themeProps$slots, _themeProps$slotProps, _themeProps$disableFu, _themeProps$disablePa;\n\n  const utils = useUtils();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const ampm = (_themeProps$ampm = themeProps.ampm) != null ? _themeProps$ampm : utils.is12HourCycleInCurrentLocale();\n  const localeText = React.useMemo(() => {\n    var _themeProps$localeTex;\n\n    if (((_themeProps$localeTex = themeProps.localeText) == null ? void 0 : _themeProps$localeTex.toolbarTitle) == null) {\n      return themeProps.localeText;\n    }\n\n    return _extends({}, themeProps.localeText, {\n      timePickerToolbarTitle: themeProps.localeText.toolbarTitle\n    });\n  }, [themeProps.localeText]);\n  const slots = (_themeProps$slots = themeProps.slots) != null ? _themeProps$slots : uncapitalizeObjectKeys(themeProps.components);\n  const slotProps = (_themeProps$slotProps = themeProps.slotProps) != null ? _themeProps$slotProps : themeProps.componentsProps;\n  return _extends({}, themeProps, {\n    ampm,\n    localeText\n  }, applyDefaultViewProps({\n    views: themeProps.views,\n    openTo: themeProps.openTo,\n    defaultViews: ['hours', 'minutes'],\n    defaultOpenTo: 'hours'\n  }), {\n    disableFuture: (_themeProps$disableFu = themeProps.disableFuture) != null ? _themeProps$disableFu : false,\n    disablePast: (_themeProps$disablePa = themeProps.disablePast) != null ? _themeProps$disablePa : false,\n    slots: _extends({\n      toolbar: TimePickerToolbar\n    }, slots),\n    slotProps: _extends({}, slotProps, {\n      toolbar: _extends({\n        ampm,\n        ampmInClock: themeProps.ampmInClock\n      }, slotProps == null ? void 0 : slotProps.toolbar)\n    })\n  });\n}","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/TimePicker/shared.js"],"names":["_extends","React","useThemeProps","useUtils","TimePickerToolbar","applyDefaultViewProps","uncapitalizeObjectKeys","useTimePickerDefaultizedProps","props","name","_themeProps$ampm","_themeProps$slots","_themeProps$slotProps","_themeProps$disableFu","_themeProps$disablePa","utils","themeProps","ampm","is12HourCycleInCurrentLocale","localeText","useMemo","_themeProps$localeTex","toolbarTitle","timePickerToolbarTitle","slots","components","slotProps","componentsProps","views","openTo","defaultViews","defaultOpenTo","disableFuture","disablePast","toolbar","ampmInClock"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { useUtils } from '../internals/hooks/useUtils';\nimport { TimePickerToolbar } from './TimePickerToolbar';\nimport { applyDefaultViewProps } from '../internals/utils/views';\nimport { uncapitalizeObjectKeys } from '../internals/utils/slots-migration';\nexport function useTimePickerDefaultizedProps(props, name) {\n  var _themeProps$ampm, _themeProps$slots, _themeProps$slotProps, _themeProps$disableFu, _themeProps$disablePa;\n  const utils = useUtils();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const ampm = (_themeProps$ampm = themeProps.ampm) != null ? _themeProps$ampm : utils.is12HourCycleInCurrentLocale();\n  const localeText = React.useMemo(() => {\n    var _themeProps$localeTex;\n    if (((_themeProps$localeTex = themeProps.localeText) == null ? void 0 : _themeProps$localeTex.toolbarTitle) == null) {\n      return themeProps.localeText;\n    }\n    return _extends({}, themeProps.localeText, {\n      timePickerToolbarTitle: themeProps.localeText.toolbarTitle\n    });\n  }, [themeProps.localeText]);\n  const slots = (_themeProps$slots = themeProps.slots) != null ? _themeProps$slots : uncapitalizeObjectKeys(themeProps.components);\n  const slotProps = (_themeProps$slotProps = themeProps.slotProps) != null ? _themeProps$slotProps : themeProps.componentsProps;\n  return _extends({}, themeProps, {\n    ampm,\n    localeText\n  }, applyDefaultViewProps({\n    views: themeProps.views,\n    openTo: themeProps.openTo,\n    defaultViews: ['hours', 'minutes'],\n    defaultOpenTo: 'hours'\n  }), {\n    disableFuture: (_themeProps$disableFu = themeProps.disableFuture) != null ? _themeProps$disableFu : false,\n    disablePast: (_themeProps$disablePa = themeProps.disablePast) != null ? _themeProps$disablePa : false,\n    slots: _extends({\n      toolbar: TimePickerToolbar\n    }, slots),\n    slotProps: _extends({}, slotProps, {\n      toolbar: _extends({\n        ampm,\n        ampmInClock: themeProps.ampmInClock\n      }, slotProps == null ? void 0 : slotProps.toolbar)\n    })\n  });\n}"]},"metadata":{},"sourceType":"module"}