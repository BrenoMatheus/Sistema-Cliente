{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/List.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { Icon, IconButton, LinearProgress, Pagination, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TableRow } from '@mui/material';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { ItemofLinesService } from '../../../../shared/services/api/itemofLines/ItemofLinesService';\nimport { ToolsListing } from '../../../../shared/components';\nimport { LayoutBaseDePagina } from '../../../../shared/layouts';\nimport { Environment } from '../../../../shared/environment';\nimport { useDebounce } from '../../../../shared/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListItemofLines = () => {\n  _s();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const {\n    debounce\n  } = useDebounce();\n  const navigate = useNavigate();\n  const [rows, setRows] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalCount, setTotalCount] = useState(0);\n  const search = useMemo(() => {\n    return searchParams.get('search') || '';\n  }, [searchParams]);\n  const page = useMemo(() => {\n    return Number(searchParams.get('page') || '1');\n  }, [searchParams]);\n  useEffect(() => {\n    setIsLoading(true);\n    debounce(() => {\n      ItemofLinesService.getAll(page, search).then(result => {\n        setIsLoading(false);\n\n        if (result instanceof Error) {\n          alert(result.message);\n        } else {\n          console.log(result);\n          setTotalCount(result.totalCount);\n          setRows(result.data);\n        }\n      });\n    });\n  }, [search, page]);\n\n  const handleDelete = id => {\n    if (confirm('Realmente deseja apagar?')) {\n      ItemofLinesService.deleteById(id).then(result => {\n        if (result instanceof Error) {\n          alert(result.message);\n        } else {\n          setRows(oldRows => [...oldRows.filter(oldRow => oldRow.id !== id)]);\n          alert('Registro apagado com sucesso!');\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LayoutBaseDePagina, {\n    titulo: \"Produtos/Servi\\xE7os\",\n    barraDeFerramentas: /*#__PURE__*/_jsxDEV(ToolsListing, {\n      mostrarInputBusca: true,\n      textoDaBusca: search,\n      textoBotaoNovo: \"Nova\",\n      aoClicarEmNovo: () => navigate('/itemofLines/detail/nova'),\n      aoMudarTextoDeBusca: texto => setSearchParams({\n        search: texto,\n        page: '1'\n      }, {\n        replace: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      variant: \"outlined\",\n      sx: {\n        m: 1,\n        width: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              width: 100,\n              children: \"A\\xE7\\xF5es\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Quantidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: () => handleDelete(row.id),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: () => navigate(`/itemofLines/detail/${row.id}`),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  children: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.itemID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.total\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), totalCount === 0 && !isLoading && /*#__PURE__*/_jsxDEV(\"caption\", {\n          children: Environment.EMPTY_LISTING\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n          children: [isLoading && /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 3,\n              children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"indeterminate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), totalCount > 0 && totalCount > Environment.LIMITE_DE_LINHAS && /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 3,\n              children: /*#__PURE__*/_jsxDEV(Pagination, {\n                page: page,\n                count: Math.ceil(totalCount / Environment.LIMITE_DE_LINHAS),\n                onChange: (_, newPage) => setSearchParams({\n                  search,\n                  page: newPage.toString()\n                }, {\n                  replace: true\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListItemofLines, \"owXZ6K3DvZBlsTShgC7QRVLCdDo=\", false, function () {\n  return [useSearchParams, useDebounce, useNavigate];\n});\n\n_c = ListItemofLines;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItemofLines\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/List.tsx"],"names":["useEffect","useMemo","useState","Icon","IconButton","LinearProgress","Pagination","Paper","Table","TableBody","TableCell","TableContainer","TableFooter","TableHead","TableRow","useNavigate","useSearchParams","ItemofLinesService","ToolsListing","LayoutBaseDePagina","Environment","useDebounce","ListItemofLines","searchParams","setSearchParams","debounce","navigate","rows","setRows","isLoading","setIsLoading","totalCount","setTotalCount","search","get","page","Number","getAll","then","result","Error","alert","message","console","log","data","handleDelete","id","confirm","deleteById","oldRows","filter","oldRow","texto","replace","m","width","map","row","itemID","amount","total","EMPTY_LISTING","LIMITE_DE_LINHAS","Math","ceil","_","newPage","toString"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { Icon, IconButton, LinearProgress, Pagination, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TableRow } from '@mui/material';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport { IListItemofLine, ItemofLinesService, } from '../../../../shared/services/api/itemofLines/ItemofLinesService';\nimport { ToolsListing } from '../../../../shared/components';\nimport { LayoutBaseDePagina } from '../../../../shared/layouts';\nimport { Environment } from '../../../../shared/environment';\nimport { useDebounce } from '../../../../shared/hooks';\n\n\nexport const ListItemofLines: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { debounce } = useDebounce();\n  const navigate = useNavigate();\n\n  const [rows, setRows] = useState<IListItemofLine[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalCount, setTotalCount] = useState(0);\n\n\n  const search = useMemo(() => {\n    return searchParams.get('search') || '';\n  }, [searchParams]);\n\n  const page = useMemo(() => {\n    return Number(searchParams.get('page') || '1');\n  }, [searchParams]);\n\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    debounce(() => {\n      ItemofLinesService.getAll(page, search)\n        .then((result) => {\n          setIsLoading(false);\n\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            console.log(result);\n\n            setTotalCount(result.totalCount);\n            setRows(result.data);\n          }\n        });\n    });\n  }, [search, page]);\n\n  const handleDelete = (id: number) => {\n    if (confirm('Realmente deseja apagar?')) {\n      ItemofLinesService.deleteById(id)\n        .then(result => {\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            setRows(oldRows => [\n              ...oldRows.filter(oldRow => oldRow.id !== id),\n            ]);\n            alert('Registro apagado com sucesso!');\n          }\n        });\n    }\n  };\n\n\n  return (\n    <LayoutBaseDePagina\n      titulo='Produtos/Serviços'\n      barraDeFerramentas={\n        <ToolsListing\n          mostrarInputBusca\n          textoDaBusca={search}\n          textoBotaoNovo='Nova'\n          aoClicarEmNovo={() => navigate('/itemofLines/detail/nova')}\n          aoMudarTextoDeBusca={texto => setSearchParams({ search: texto, page: '1' }, { replace: true })}\n        />\n      }\n    >\n      <TableContainer component={Paper} variant=\"outlined\" sx={{ m: 1, width: 'auto' }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell width={100}>Ações</TableCell>\n              <TableCell>Nome</TableCell>\n              <TableCell>Quantidade</TableCell>\n              <TableCell>Total</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow key={row.id}>\n                <TableCell>\n                  <IconButton size=\"small\" onClick={() => handleDelete(row.id)}>\n                    <Icon>delete</Icon>\n                  </IconButton>\n                  <IconButton size=\"small\" onClick={() => navigate(`/itemofLines/detail/${row.id}`)}>\n                    <Icon>edit</Icon>\n                  </IconButton>\n                </TableCell>\n                <TableCell>{row.itemID}</TableCell>\n                <TableCell>{row.amount}</TableCell>\n                <TableCell>{row.total}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n\n          {totalCount === 0 && !isLoading && (\n            <caption>{Environment.EMPTY_LISTING}</caption>\n          )}\n\n          <TableFooter>\n            {isLoading && (\n              <TableRow>\n                <TableCell colSpan={3}>\n                  <LinearProgress variant='indeterminate' />\n                </TableCell>\n              </TableRow>\n            )}\n            {(totalCount > 0 && totalCount > Environment.LIMITE_DE_LINHAS) && (\n              <TableRow>\n                <TableCell colSpan={3}>\n                  <Pagination\n                    page={page}\n                    count={Math.ceil(totalCount / Environment.LIMITE_DE_LINHAS)}\n                    onChange={(_, newPage) => setSearchParams({ search, page: newPage.toString() }, { replace: true })}\n                  />\n                </TableCell>\n              </TableRow>\n            )}\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </LayoutBaseDePagina>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}