{"ast":null,"code":"export const areViewsEqual = (views, expectedViews) => {\n  if (views.length !== expectedViews.length) {\n    return false;\n  }\n\n  return expectedViews.every(expectedView => views.includes(expectedView));\n};\nexport const applyDefaultViewProps = _ref => {\n  let {\n    openTo,\n    defaultOpenTo,\n    views,\n    defaultViews\n  } = _ref;\n  const viewsWithDefault = views != null ? views : defaultViews;\n  let openToWithDefault;\n\n  if (openTo != null) {\n    openToWithDefault = openTo;\n  } else if (viewsWithDefault.includes(defaultOpenTo)) {\n    openToWithDefault = defaultOpenTo;\n  } else if (viewsWithDefault.length > 0) {\n    openToWithDefault = viewsWithDefault[0];\n  } else {\n    throw new Error('MUI: The `views` prop must contain at least one view');\n  }\n\n  return {\n    views: viewsWithDefault,\n    openTo: openToWithDefault\n  };\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/internals/utils/views.js"],"names":["areViewsEqual","views","expectedViews","length","every","expectedView","includes","applyDefaultViewProps","openTo","defaultOpenTo","defaultViews","viewsWithDefault","openToWithDefault","Error"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,KAAD,EAAQC,aAAR,KAA0B;AACrD,MAAID,KAAK,CAACE,MAAN,KAAiBD,aAAa,CAACC,MAAnC,EAA2C;AACzC,WAAO,KAAP;AACD;;AACD,SAAOD,aAAa,CAACE,KAAd,CAAoBC,YAAY,IAAIJ,KAAK,CAACK,QAAN,CAAeD,YAAf,CAApC,CAAP;AACD,CALM;AAMP,OAAO,MAAME,qBAAqB,GAAG,QAK/B;AAAA,MALgC;AACpCC,IAAAA,MADoC;AAEpCC,IAAAA,aAFoC;AAGpCR,IAAAA,KAHoC;AAIpCS,IAAAA;AAJoC,GAKhC;AACJ,QAAMC,gBAAgB,GAAGV,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBS,YAAjD;AACA,MAAIE,iBAAJ;;AACA,MAAIJ,MAAM,IAAI,IAAd,EAAoB;AAClBI,IAAAA,iBAAiB,GAAGJ,MAApB;AACD,GAFD,MAEO,IAAIG,gBAAgB,CAACL,QAAjB,CAA0BG,aAA1B,CAAJ,EAA8C;AACnDG,IAAAA,iBAAiB,GAAGH,aAApB;AACD,GAFM,MAEA,IAAIE,gBAAgB,CAACR,MAAjB,GAA0B,CAA9B,EAAiC;AACtCS,IAAAA,iBAAiB,GAAGD,gBAAgB,CAAC,CAAD,CAApC;AACD,GAFM,MAEA;AACL,UAAM,IAAIE,KAAJ,CAAU,sDAAV,CAAN;AACD;;AACD,SAAO;AACLZ,IAAAA,KAAK,EAAEU,gBADF;AAELH,IAAAA,MAAM,EAAEI;AAFH,GAAP;AAID,CArBM","sourcesContent":["export const areViewsEqual = (views, expectedViews) => {\n  if (views.length !== expectedViews.length) {\n    return false;\n  }\n  return expectedViews.every(expectedView => views.includes(expectedView));\n};\nexport const applyDefaultViewProps = ({\n  openTo,\n  defaultOpenTo,\n  views,\n  defaultViews\n}) => {\n  const viewsWithDefault = views != null ? views : defaultViews;\n  let openToWithDefault;\n  if (openTo != null) {\n    openToWithDefault = openTo;\n  } else if (viewsWithDefault.includes(defaultOpenTo)) {\n    openToWithDefault = defaultOpenTo;\n  } else if (viewsWithDefault.length > 0) {\n    openToWithDefault = viewsWithDefault[0];\n  } else {\n    throw new Error('MUI: The `views` prop must contain at least one view');\n  }\n  return {\n    views: viewsWithDefault,\n    openTo: openToWithDefault\n  };\n};"]},"metadata":{},"sourceType":"module"}