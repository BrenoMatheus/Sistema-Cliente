{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"props\", \"getOpenDialogAriaText\"];\nimport * as React from 'react';\nimport { useSlotProps } from '@mui/base/utils';\nimport useForkRef from '@mui/utils/useForkRef';\nimport useId from '@mui/utils/useId';\nimport { PickersModalDialog } from '../../components/PickersModalDialog';\nimport { usePicker } from '../usePicker';\nimport { onSpaceOrEnter } from '../../utils/utils';\nimport { useUtils } from '../useUtils';\nimport { LocalizationProvider } from '../../../LocalizationProvider';\nimport { PickersLayout } from '../../../PickersLayout';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * Hook managing all the single-date mobile pickers:\n * - MobileDatePicker\n * - MobileDateTimePicker\n * - MobileTimePicker\n */\n\nexport const useMobilePicker = _ref => {\n  var _innerSlotProps$toolb, _innerSlotProps$toolb2, _slots$layout;\n\n  let {\n    props,\n    getOpenDialogAriaText\n  } = _ref,\n      pickerParams = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const {\n    slots,\n    slotProps: innerSlotProps,\n    className,\n    sx,\n    format,\n    formatDensity,\n    timezone,\n    name,\n    label,\n    inputRef,\n    readOnly,\n    disabled,\n    localeText\n  } = props;\n  const utils = useUtils();\n  const internalInputRef = React.useRef(null);\n  const labelId = useId();\n  const isToolbarHidden = (_innerSlotProps$toolb = innerSlotProps == null || (_innerSlotProps$toolb2 = innerSlotProps.toolbar) == null ? void 0 : _innerSlotProps$toolb2.hidden) != null ? _innerSlotProps$toolb : false;\n  const {\n    open,\n    actions,\n    layoutProps,\n    renderCurrentView,\n    fieldProps: pickerFieldProps\n  } = usePicker(_extends({}, pickerParams, {\n    props,\n    inputRef: internalInputRef,\n    autoFocusView: true,\n    additionalViewProps: {},\n    wrapperVariant: 'mobile'\n  }));\n  const Field = slots.field;\n  const fieldProps = useSlotProps({\n    elementType: Field,\n    externalSlotProps: innerSlotProps == null ? void 0 : innerSlotProps.field,\n    additionalProps: _extends({}, pickerFieldProps, isToolbarHidden && {\n      id: labelId\n    }, !(disabled || readOnly) && {\n      onClick: actions.onOpen,\n      onKeyDown: onSpaceOrEnter(actions.onOpen)\n    }, {\n      readOnly: readOnly != null ? readOnly : true,\n      disabled,\n      className,\n      sx,\n      format,\n      formatDensity,\n      timezone,\n      label,\n      name\n    }),\n    ownerState: props\n  }); // TODO: Move to `useSlotProps` when https://github.com/mui/material-ui/pull/35088 will be merged\n\n  fieldProps.inputProps = _extends({}, fieldProps.inputProps, {\n    'aria-label': getOpenDialogAriaText(pickerFieldProps.value, utils)\n  });\n\n  const slotsForField = _extends({\n    textField: slots.textField\n  }, fieldProps.slots);\n\n  const Layout = (_slots$layout = slots.layout) != null ? _slots$layout : PickersLayout;\n  const handleInputRef = useForkRef(internalInputRef, fieldProps.inputRef, inputRef);\n  let labelledById = labelId;\n\n  if (isToolbarHidden) {\n    if (label) {\n      labelledById = `${labelId}-label`;\n    } else {\n      labelledById = undefined;\n    }\n  }\n\n  const slotProps = _extends({}, innerSlotProps, {\n    toolbar: _extends({}, innerSlotProps == null ? void 0 : innerSlotProps.toolbar, {\n      titleId: labelId\n    }),\n    mobilePaper: _extends({\n      'aria-labelledby': labelledById\n    }, innerSlotProps == null ? void 0 : innerSlotProps.mobilePaper)\n  });\n\n  const renderPicker = () => /*#__PURE__*/_jsxs(LocalizationProvider, {\n    localeText: localeText,\n    children: [/*#__PURE__*/_jsx(Field, _extends({}, fieldProps, {\n      slots: slotsForField,\n      slotProps: slotProps,\n      inputRef: handleInputRef\n    })), /*#__PURE__*/_jsx(PickersModalDialog, _extends({}, actions, {\n      open: open,\n      slots: slots,\n      slotProps: slotProps,\n      children: /*#__PURE__*/_jsx(Layout, _extends({}, layoutProps, slotProps == null ? void 0 : slotProps.layout, {\n        slots: slots,\n        slotProps: slotProps,\n        children: renderCurrentView()\n      }))\n    }))]\n  });\n\n  return {\n    renderPicker\n  };\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/internals/hooks/useMobilePicker/useMobilePicker.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useSlotProps","useForkRef","useId","PickersModalDialog","usePicker","onSpaceOrEnter","useUtils","LocalizationProvider","PickersLayout","jsx","_jsx","jsxs","_jsxs","useMobilePicker","_ref","_innerSlotProps$toolb","_innerSlotProps$toolb2","_slots$layout","props","getOpenDialogAriaText","pickerParams","slots","slotProps","innerSlotProps","className","sx","format","formatDensity","timezone","name","label","inputRef","readOnly","disabled","localeText","utils","internalInputRef","useRef","labelId","isToolbarHidden","toolbar","hidden","open","actions","layoutProps","renderCurrentView","fieldProps","pickerFieldProps","autoFocusView","additionalViewProps","wrapperVariant","Field","field","elementType","externalSlotProps","additionalProps","id","onClick","onOpen","onKeyDown","ownerState","inputProps","value","slotsForField","textField","Layout","layout","handleInputRef","labelledById","undefined","titleId","mobilePaper","renderPicker","children"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,MAAMC,SAAS,GAAG,CAAC,OAAD,EAAU,uBAAV,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,kBAAT,QAAmC,qCAAnC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,oBAAT,QAAqC,+BAArC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAGC,IAAI,IAAI;AACrC,MAAIC,qBAAJ,EAA2BC,sBAA3B,EAAmDC,aAAnD;;AACA,MAAI;AACAC,IAAAA,KADA;AAEAC,IAAAA;AAFA,MAGEL,IAHN;AAAA,MAIEM,YAAY,GAAGvB,6BAA6B,CAACiB,IAAD,EAAOhB,SAAP,CAJ9C;;AAKA,QAAM;AACJuB,IAAAA,KADI;AAEJC,IAAAA,SAAS,EAAEC,cAFP;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,EAJI;AAKJC,IAAAA,MALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,IARI;AASJC,IAAAA,KATI;AAUJC,IAAAA,QAVI;AAWJC,IAAAA,QAXI;AAYJC,IAAAA,QAZI;AAaJC,IAAAA;AAbI,MAcFhB,KAdJ;AAeA,QAAMiB,KAAK,GAAG7B,QAAQ,EAAtB;AACA,QAAM8B,gBAAgB,GAAGrC,KAAK,CAACsC,MAAN,CAAa,IAAb,CAAzB;AACA,QAAMC,OAAO,GAAGpC,KAAK,EAArB;AACA,QAAMqC,eAAe,GAAG,CAACxB,qBAAqB,GAAGQ,cAAc,IAAI,IAAlB,IAA0B,CAACP,sBAAsB,GAAGO,cAAc,CAACiB,OAAzC,KAAqD,IAA/E,GAAsF,KAAK,CAA3F,GAA+FxB,sBAAsB,CAACyB,MAA/I,KAA0J,IAA1J,GAAiK1B,qBAAjK,GAAyL,KAAjN;AACA,QAAM;AACJ2B,IAAAA,IADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,iBAJI;AAKJC,IAAAA,UAAU,EAAEC;AALR,MAMF3C,SAAS,CAACR,QAAQ,CAAC,EAAD,EAAKwB,YAAL,EAAmB;AACvCF,IAAAA,KADuC;AAEvCa,IAAAA,QAAQ,EAAEK,gBAF6B;AAGvCY,IAAAA,aAAa,EAAE,IAHwB;AAIvCC,IAAAA,mBAAmB,EAAE,EAJkB;AAKvCC,IAAAA,cAAc,EAAE;AALuB,GAAnB,CAAT,CANb;AAaA,QAAMC,KAAK,GAAG9B,KAAK,CAAC+B,KAApB;AACA,QAAMN,UAAU,GAAG9C,YAAY,CAAC;AAC9BqD,IAAAA,WAAW,EAAEF,KADiB;AAE9BG,IAAAA,iBAAiB,EAAE/B,cAAc,IAAI,IAAlB,GAAyB,KAAK,CAA9B,GAAkCA,cAAc,CAAC6B,KAFtC;AAG9BG,IAAAA,eAAe,EAAE3D,QAAQ,CAAC,EAAD,EAAKmD,gBAAL,EAAuBR,eAAe,IAAI;AACjEiB,MAAAA,EAAE,EAAElB;AAD6D,KAA1C,EAEtB,EAAEL,QAAQ,IAAID,QAAd,KAA2B;AAC5ByB,MAAAA,OAAO,EAAEd,OAAO,CAACe,MADW;AAE5BC,MAAAA,SAAS,EAAEtD,cAAc,CAACsC,OAAO,CAACe,MAAT;AAFG,KAFL,EAKtB;AACD1B,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,IAAZ,GAAmBA,QAAnB,GAA8B,IADvC;AAEDC,MAAAA,QAFC;AAGDT,MAAAA,SAHC;AAIDC,MAAAA,EAJC;AAKDC,MAAAA,MALC;AAMDC,MAAAA,aANC;AAODC,MAAAA,QAPC;AAQDE,MAAAA,KARC;AASDD,MAAAA;AATC,KALsB,CAHK;AAmB9B+B,IAAAA,UAAU,EAAE1C;AAnBkB,GAAD,CAA/B,CAxCqC,CA8DrC;;AACA4B,EAAAA,UAAU,CAACe,UAAX,GAAwBjE,QAAQ,CAAC,EAAD,EAAKkD,UAAU,CAACe,UAAhB,EAA4B;AAC1D,kBAAc1C,qBAAqB,CAAC4B,gBAAgB,CAACe,KAAlB,EAAyB3B,KAAzB;AADuB,GAA5B,CAAhC;;AAGA,QAAM4B,aAAa,GAAGnE,QAAQ,CAAC;AAC7BoE,IAAAA,SAAS,EAAE3C,KAAK,CAAC2C;AADY,GAAD,EAE3BlB,UAAU,CAACzB,KAFgB,CAA9B;;AAGA,QAAM4C,MAAM,GAAG,CAAChD,aAAa,GAAGI,KAAK,CAAC6C,MAAvB,KAAkC,IAAlC,GAAyCjD,aAAzC,GAAyDT,aAAxE;AACA,QAAM2D,cAAc,GAAGlE,UAAU,CAACmC,gBAAD,EAAmBU,UAAU,CAACf,QAA9B,EAAwCA,QAAxC,CAAjC;AACA,MAAIqC,YAAY,GAAG9B,OAAnB;;AACA,MAAIC,eAAJ,EAAqB;AACnB,QAAIT,KAAJ,EAAW;AACTsC,MAAAA,YAAY,GAAI,GAAE9B,OAAQ,QAA1B;AACD,KAFD,MAEO;AACL8B,MAAAA,YAAY,GAAGC,SAAf;AACD;AACF;;AACD,QAAM/C,SAAS,GAAG1B,QAAQ,CAAC,EAAD,EAAK2B,cAAL,EAAqB;AAC7CiB,IAAAA,OAAO,EAAE5C,QAAQ,CAAC,EAAD,EAAK2B,cAAc,IAAI,IAAlB,GAAyB,KAAK,CAA9B,GAAkCA,cAAc,CAACiB,OAAtD,EAA+D;AAC9E8B,MAAAA,OAAO,EAAEhC;AADqE,KAA/D,CAD4B;AAI7CiC,IAAAA,WAAW,EAAE3E,QAAQ,CAAC;AACpB,yBAAmBwE;AADC,KAAD,EAElB7C,cAAc,IAAI,IAAlB,GAAyB,KAAK,CAA9B,GAAkCA,cAAc,CAACgD,WAF/B;AAJwB,GAArB,CAA1B;;AAQA,QAAMC,YAAY,GAAG,MAAM,aAAa5D,KAAK,CAACL,oBAAD,EAAuB;AAClE2B,IAAAA,UAAU,EAAEA,UADsD;AAElEuC,IAAAA,QAAQ,EAAE,CAAC,aAAa/D,IAAI,CAACyC,KAAD,EAAQvD,QAAQ,CAAC,EAAD,EAAKkD,UAAL,EAAiB;AAC3DzB,MAAAA,KAAK,EAAE0C,aADoD;AAE3DzC,MAAAA,SAAS,EAAEA,SAFgD;AAG3DS,MAAAA,QAAQ,EAAEoC;AAHiD,KAAjB,CAAhB,CAAlB,EAIL,aAAazD,IAAI,CAACP,kBAAD,EAAqBP,QAAQ,CAAC,EAAD,EAAK+C,OAAL,EAAc;AAC/DD,MAAAA,IAAI,EAAEA,IADyD;AAE/DrB,MAAAA,KAAK,EAAEA,KAFwD;AAG/DC,MAAAA,SAAS,EAAEA,SAHoD;AAI/DmD,MAAAA,QAAQ,EAAE,aAAa/D,IAAI,CAACuD,MAAD,EAASrE,QAAQ,CAAC,EAAD,EAAKgD,WAAL,EAAkBtB,SAAS,IAAI,IAAb,GAAoB,KAAK,CAAzB,GAA6BA,SAAS,CAAC4C,MAAzD,EAAiE;AAC3G7C,QAAAA,KAAK,EAAEA,KADoG;AAE3GC,QAAAA,SAAS,EAAEA,SAFgG;AAG3GmD,QAAAA,QAAQ,EAAE5B,iBAAiB;AAHgF,OAAjE,CAAjB;AAJoC,KAAd,CAA7B,CAJZ;AAFwD,GAAvB,CAA7C;;AAiBA,SAAO;AACL2B,IAAAA;AADK,GAAP;AAGD,CA3GM","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"props\", \"getOpenDialogAriaText\"];\nimport * as React from 'react';\nimport { useSlotProps } from '@mui/base/utils';\nimport useForkRef from '@mui/utils/useForkRef';\nimport useId from '@mui/utils/useId';\nimport { PickersModalDialog } from '../../components/PickersModalDialog';\nimport { usePicker } from '../usePicker';\nimport { onSpaceOrEnter } from '../../utils/utils';\nimport { useUtils } from '../useUtils';\nimport { LocalizationProvider } from '../../../LocalizationProvider';\nimport { PickersLayout } from '../../../PickersLayout';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * Hook managing all the single-date mobile pickers:\n * - MobileDatePicker\n * - MobileDateTimePicker\n * - MobileTimePicker\n */\nexport const useMobilePicker = _ref => {\n  var _innerSlotProps$toolb, _innerSlotProps$toolb2, _slots$layout;\n  let {\n      props,\n      getOpenDialogAriaText\n    } = _ref,\n    pickerParams = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const {\n    slots,\n    slotProps: innerSlotProps,\n    className,\n    sx,\n    format,\n    formatDensity,\n    timezone,\n    name,\n    label,\n    inputRef,\n    readOnly,\n    disabled,\n    localeText\n  } = props;\n  const utils = useUtils();\n  const internalInputRef = React.useRef(null);\n  const labelId = useId();\n  const isToolbarHidden = (_innerSlotProps$toolb = innerSlotProps == null || (_innerSlotProps$toolb2 = innerSlotProps.toolbar) == null ? void 0 : _innerSlotProps$toolb2.hidden) != null ? _innerSlotProps$toolb : false;\n  const {\n    open,\n    actions,\n    layoutProps,\n    renderCurrentView,\n    fieldProps: pickerFieldProps\n  } = usePicker(_extends({}, pickerParams, {\n    props,\n    inputRef: internalInputRef,\n    autoFocusView: true,\n    additionalViewProps: {},\n    wrapperVariant: 'mobile'\n  }));\n  const Field = slots.field;\n  const fieldProps = useSlotProps({\n    elementType: Field,\n    externalSlotProps: innerSlotProps == null ? void 0 : innerSlotProps.field,\n    additionalProps: _extends({}, pickerFieldProps, isToolbarHidden && {\n      id: labelId\n    }, !(disabled || readOnly) && {\n      onClick: actions.onOpen,\n      onKeyDown: onSpaceOrEnter(actions.onOpen)\n    }, {\n      readOnly: readOnly != null ? readOnly : true,\n      disabled,\n      className,\n      sx,\n      format,\n      formatDensity,\n      timezone,\n      label,\n      name\n    }),\n    ownerState: props\n  });\n\n  // TODO: Move to `useSlotProps` when https://github.com/mui/material-ui/pull/35088 will be merged\n  fieldProps.inputProps = _extends({}, fieldProps.inputProps, {\n    'aria-label': getOpenDialogAriaText(pickerFieldProps.value, utils)\n  });\n  const slotsForField = _extends({\n    textField: slots.textField\n  }, fieldProps.slots);\n  const Layout = (_slots$layout = slots.layout) != null ? _slots$layout : PickersLayout;\n  const handleInputRef = useForkRef(internalInputRef, fieldProps.inputRef, inputRef);\n  let labelledById = labelId;\n  if (isToolbarHidden) {\n    if (label) {\n      labelledById = `${labelId}-label`;\n    } else {\n      labelledById = undefined;\n    }\n  }\n  const slotProps = _extends({}, innerSlotProps, {\n    toolbar: _extends({}, innerSlotProps == null ? void 0 : innerSlotProps.toolbar, {\n      titleId: labelId\n    }),\n    mobilePaper: _extends({\n      'aria-labelledby': labelledById\n    }, innerSlotProps == null ? void 0 : innerSlotProps.mobilePaper)\n  });\n  const renderPicker = () => /*#__PURE__*/_jsxs(LocalizationProvider, {\n    localeText: localeText,\n    children: [/*#__PURE__*/_jsx(Field, _extends({}, fieldProps, {\n      slots: slotsForField,\n      slotProps: slotProps,\n      inputRef: handleInputRef\n    })), /*#__PURE__*/_jsx(PickersModalDialog, _extends({}, actions, {\n      open: open,\n      slots: slots,\n      slotProps: slotProps,\n      children: /*#__PURE__*/_jsx(Layout, _extends({}, layoutProps, slotProps == null ? void 0 : slotProps.layout, {\n        slots: slots,\n        slotProps: slotProps,\n        children: renderCurrentView()\n      }))\n    }))]\n  });\n  return {\n    renderPicker\n  };\n};"]},"metadata":{},"sourceType":"module"}