{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"props\", \"ref\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { usePicker } from '../usePicker';\nimport { LocalizationProvider } from '../../../LocalizationProvider';\nimport { PickersLayout } from '../../../PickersLayout';\nimport { DIALOG_WIDTH } from '../../constants/dimensions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PickerStaticLayout = styled(PickersLayout)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    overflow: 'hidden',\n    minWidth: DIALOG_WIDTH,\n    backgroundColor: (theme.vars || theme).palette.background.paper\n  };\n});\n/**\n * Hook managing all the single-date static pickers:\n * - StaticDatePicker\n * - StaticDateTimePicker\n * - StaticTimePicker\n */\n\nexport const useStaticPicker = _ref => {\n  var _slots$layout;\n\n  let {\n    props,\n    ref\n  } = _ref,\n      pickerParams = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const {\n    localeText,\n    slots,\n    slotProps,\n    className,\n    sx,\n    displayStaticWrapperAs,\n    autoFocus\n  } = props;\n  const {\n    layoutProps,\n    renderCurrentView\n  } = usePicker(_extends({}, pickerParams, {\n    props,\n    autoFocusView: autoFocus != null ? autoFocus : false,\n    additionalViewProps: {},\n    wrapperVariant: displayStaticWrapperAs\n  }));\n  const Layout = (_slots$layout = slots == null ? void 0 : slots.layout) != null ? _slots$layout : PickerStaticLayout;\n\n  const renderPicker = () => {\n    var _slotProps$layout, _slotProps$layout2, _slotProps$layout3;\n\n    return /*#__PURE__*/_jsx(LocalizationProvider, {\n      localeText: localeText,\n      children: /*#__PURE__*/_jsx(Layout, _extends({}, layoutProps, slotProps == null ? void 0 : slotProps.layout, {\n        slots: slots,\n        slotProps: slotProps,\n        sx: [...(Array.isArray(sx) ? sx : [sx]), ...(Array.isArray(slotProps == null || (_slotProps$layout = slotProps.layout) == null ? void 0 : _slotProps$layout.sx) ? slotProps.layout.sx : [slotProps == null || (_slotProps$layout2 = slotProps.layout) == null ? void 0 : _slotProps$layout2.sx])],\n        className: clsx(className, slotProps == null || (_slotProps$layout3 = slotProps.layout) == null ? void 0 : _slotProps$layout3.className),\n        ref: ref,\n        children: renderCurrentView()\n      }))\n    });\n  };\n\n  return {\n    renderPicker\n  };\n};","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/node_modules/@mui/x-date-pickers/internals/hooks/useStaticPicker/useStaticPicker.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","clsx","styled","usePicker","LocalizationProvider","PickersLayout","DIALOG_WIDTH","jsx","_jsx","PickerStaticLayout","theme","overflow","minWidth","backgroundColor","vars","palette","background","paper","useStaticPicker","_ref","_slots$layout","props","ref","pickerParams","localeText","slots","slotProps","className","sx","displayStaticWrapperAs","autoFocus","layoutProps","renderCurrentView","autoFocusView","additionalViewProps","wrapperVariant","Layout","layout","renderPicker","_slotProps$layout","_slotProps$layout2","_slotProps$layout3","children","Array","isArray"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"props\", \"ref\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { usePicker } from '../usePicker';\nimport { LocalizationProvider } from '../../../LocalizationProvider';\nimport { PickersLayout } from '../../../PickersLayout';\nimport { DIALOG_WIDTH } from '../../constants/dimensions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PickerStaticLayout = styled(PickersLayout)(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  minWidth: DIALOG_WIDTH,\n  backgroundColor: (theme.vars || theme).palette.background.paper\n}));\n\n/**\n * Hook managing all the single-date static pickers:\n * - StaticDatePicker\n * - StaticDateTimePicker\n * - StaticTimePicker\n */\nexport const useStaticPicker = _ref => {\n  var _slots$layout;\n  let {\n      props,\n      ref\n    } = _ref,\n    pickerParams = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const {\n    localeText,\n    slots,\n    slotProps,\n    className,\n    sx,\n    displayStaticWrapperAs,\n    autoFocus\n  } = props;\n  const {\n    layoutProps,\n    renderCurrentView\n  } = usePicker(_extends({}, pickerParams, {\n    props,\n    autoFocusView: autoFocus != null ? autoFocus : false,\n    additionalViewProps: {},\n    wrapperVariant: displayStaticWrapperAs\n  }));\n  const Layout = (_slots$layout = slots == null ? void 0 : slots.layout) != null ? _slots$layout : PickerStaticLayout;\n  const renderPicker = () => {\n    var _slotProps$layout, _slotProps$layout2, _slotProps$layout3;\n    return /*#__PURE__*/_jsx(LocalizationProvider, {\n      localeText: localeText,\n      children: /*#__PURE__*/_jsx(Layout, _extends({}, layoutProps, slotProps == null ? void 0 : slotProps.layout, {\n        slots: slots,\n        slotProps: slotProps,\n        sx: [...(Array.isArray(sx) ? sx : [sx]), ...(Array.isArray(slotProps == null || (_slotProps$layout = slotProps.layout) == null ? void 0 : _slotProps$layout.sx) ? slotProps.layout.sx : [slotProps == null || (_slotProps$layout2 = slotProps.layout) == null ? void 0 : _slotProps$layout2.sx])],\n        className: clsx(className, slotProps == null || (_slotProps$layout3 = slotProps.layout) == null ? void 0 : _slotProps$layout3.className),\n        ref: ref,\n        children: renderCurrentView()\n      }))\n    });\n  };\n  return {\n    renderPicker\n  };\n};"]},"metadata":{},"sourceType":"module"}