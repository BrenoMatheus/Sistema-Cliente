{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useRef } from 'react';\nexport const useDebounce = function () {\n  _s();\n\n  let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 300;\n  let notDelayInFirstTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  const isFirstTime = useRef(notDelayInFirstTime);\n  const debouncing = useRef();\n  const debounce = useCallback(func => {\n    if (isFirstTime.current) {\n      isFirstTime.current = false;\n      func();\n    } else {\n      if (debouncing.current) {\n        clearTimeout(debouncing.current);\n      }\n\n      debouncing.current = setTimeout(() => func(), delay);\n    }\n  }, [delay]);\n  return {\n    debounce\n  };\n};\n\n_s(useDebounce, \"3MtlP+JwfidqQQ+JQt/Fp2sxv18=\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/Site Node-Type-React/frontend/src/shared/hooks/UseDebounce.ts"],"names":["useCallback","useRef","useDebounce","delay","notDelayInFirstTime","isFirstTime","debouncing","debounce","func","current","clearTimeout","setTimeout"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,OAApC;AAGA,OAAO,MAAMC,WAAW,GAAG,YAA6C;AAAA;;AAAA,MAA5CC,KAA4C,uEAApC,GAAoC;AAAA,MAA/BC,mBAA+B,uEAAT,IAAS;AACtE,QAAMC,WAAW,GAAGJ,MAAM,CAACG,mBAAD,CAA1B;AACA,QAAME,UAAU,GAAGL,MAAM,EAAzB;AAGA,QAAMM,QAAQ,GAAGP,WAAW,CAAEQ,IAAD,IAAsB;AACjD,QAAIH,WAAW,CAACI,OAAhB,EAAyB;AACvBJ,MAAAA,WAAW,CAACI,OAAZ,GAAsB,KAAtB;AACAD,MAAAA,IAAI;AACL,KAHD,MAGO;AACL,UAAIF,UAAU,CAACG,OAAf,EAAwB;AACtBC,QAAAA,YAAY,CAACJ,UAAU,CAACG,OAAZ,CAAZ;AACD;;AACDH,MAAAA,UAAU,CAACG,OAAX,GAAqBE,UAAU,CAAC,MAAMH,IAAI,EAAX,EAAeL,KAAf,CAA/B;AACD;AACF,GAV2B,EAUzB,CAACA,KAAD,CAVyB,CAA5B;AAYA,SAAO;AAAEI,IAAAA;AAAF,GAAP;AACD,CAlBM;;GAAML,W","sourcesContent":["import { useCallback, useRef } from 'react';\n\n\nexport const useDebounce = (delay = 300, notDelayInFirstTime = true) => {\n  const isFirstTime = useRef(notDelayInFirstTime);\n  const debouncing = useRef<NodeJS.Timeout>();\n\n\n  const debounce = useCallback((func: () => void) => {\n    if (isFirstTime.current) {\n      isFirstTime.current = false;\n      func();\n    } else {\n      if (debouncing.current) {\n        clearTimeout(debouncing.current);\n      }\n      debouncing.current = setTimeout(() => func(), delay);\n    }\n  }, [delay]);\n\n  return { debounce };\n};\n"]},"metadata":{},"sourceType":"module"}