{"ast":null,"code":"var _jsxFileName = \"/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/list.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FaTrashAlt, FaExclamationCircle } from \"react-icons/fa\";\nimport './styles.css';\nimport './styles-priority.css';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Notes(_ref) {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const [changedNote, setChangedNote] = useState('');\n\n  async function handleSave(e, notes) {\n    e.style.cursor = 'default';\n    e.style.boxShadow = 'none';\n\n    if (changedNote && changedNote !== notes) {\n      await api.post(`/contents/${data._id}`, {\n        notes: changedNote\n      });\n    }\n  }\n\n  async function handleEdit(e, priority) {\n    e.style.cursor = 'text';\n    e.style.borderRadius = '5px';\n\n    if (priority) {\n      e.style.boxShadow = '0 0 5px white';\n    } else {\n      e.style.boxShadow = '0 0 5px gray';\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: data.priority ? 'notepad-infos-priority' : \"notepad-infos\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {\n            size: \"20\",\n            onClick: () => handleDelete(data._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        defaultValue: data.notes,\n        onClick: e => handleEdit(e.target, data.priority),\n        onChange: e => setChangedNote(e.target.value),\n        onBlur: e => handleSave(e.target, data.notes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(FaExclamationCircle, {\n          size: \"20\",\n          onClick: () => handleChangePriority(data._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Notes, \"/sd3Q0o6H0tAjF93kG7qLYDhiZ4=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/home/brenomatheus/Documentos/frontend/src/pages/orders/components/itemofLines/list.tsx"],"names":["React","useState","FaTrashAlt","FaExclamationCircle","api","Notes","id","changedNote","setChangedNote","handleSave","e","notes","style","cursor","boxShadow","post","data","_id","handleEdit","priority","borderRadius","title","handleDelete","target","value","handleChangePriority"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,mBAArB,QAAgD,gBAAhD;AAEA,OAAO,cAAP;AACA,OAAO,uBAAP;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;;;AAOA,SAASC,KAAT,OAAqB;AAAA;;AAAA,MAAN;AAACC,IAAAA;AAAD,GAAM;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;;AAEA,iBAAeQ,UAAf,CAA0BC,CAA1B,EAA6BC,KAA7B,EAAoC;AAChCD,IAAAA,CAAC,CAACE,KAAF,CAAQC,MAAR,GAAiB,SAAjB;AACAH,IAAAA,CAAC,CAACE,KAAF,CAAQE,SAAR,GAAoB,MAApB;;AACA,QAAIP,WAAW,IAAIA,WAAW,KAAKI,KAAnC,EAA0C;AACtC,YAAMP,GAAG,CAACW,IAAJ,CAAU,aAAYC,IAAI,CAACC,GAAI,EAA/B,EAAkC;AACpCN,QAAAA,KAAK,EAAEJ;AAD6B,OAAlC,CAAN;AAGH;AACJ;;AAED,iBAAeW,UAAf,CAA0BR,CAA1B,EAA6BS,QAA7B,EAAuC;AACnCT,IAAAA,CAAC,CAACE,KAAF,CAAQC,MAAR,GAAiB,MAAjB;AACAH,IAAAA,CAAC,CAACE,KAAF,CAAQQ,YAAR,GAAuB,KAAvB;;AACA,QAAID,QAAJ,EAAc;AACVT,MAAAA,CAAC,CAACE,KAAF,CAAQE,SAAR,GAAoB,eAApB;AACH,KAFD,MAEO;AACHJ,MAAAA,CAAC,CAACE,KAAF,CAAQE,SAAR,GAAoB,cAApB;AACH;AAEJ;;AAED,sBACI;AAAA,2BACI;AAAI,MAAA,SAAS,EAAEE,IAAI,CAACG,QAAL,GAAgB,wBAAhB,GAA2C,eAA1D;AAAA,8BACI;AAAA,gCACI;AAAA,oBAASH,IAAI,CAACK;AAAd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCACI,QAAC,UAAD;AACI,YAAA,IAAI,EAAC,IADT;AAEI,YAAA,OAAO,EAAE,MAAMC,YAAY,CAACN,IAAI,CAACC,GAAN;AAF/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AACI,QAAA,YAAY,EAAED,IAAI,CAACL,KADvB;AAEI,QAAA,OAAO,EAAED,CAAC,IAAIQ,UAAU,CAACR,CAAC,CAACa,MAAH,EAAWP,IAAI,CAACG,QAAhB,CAF5B;AAGI,QAAA,QAAQ,EAAET,CAAC,IAAIF,cAAc,CAACE,CAAC,CAACa,MAAF,CAASC,KAAV,CAHjC;AAII,QAAA,MAAM,EAAEd,CAAC,IAAID,UAAU,CAACC,CAAC,CAACa,MAAH,EAAWP,IAAI,CAACL,KAAhB;AAJ3B;AAAA;AAAA;AAAA;AAAA,cAVJ,eAgBI;AAAA,+BACI,QAAC,mBAAD;AACI,UAAA,IAAI,EAAC,IADT;AAEI,UAAA,OAAO,EAAE,MAAMc,oBAAoB,CAACT,IAAI,CAACC,GAAN;AAFvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA2BH;;GAnDQZ,K;;KAAAA,K;AAqDT,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FaTrashAlt, FaExclamationCircle } from \"react-icons/fa\";\n\nimport './styles.css'\nimport './styles-priority.css'\nimport api from '../../services/api'\nimport { DatePickerProps } from \"@mui/x-date-pickers\";\n\ntype TVTextFieldProps = DatePickerProps<any> & {\n    name: string;\n  }\n\nfunction Notes({id}) {\n    const [changedNote, setChangedNote] = useState('');\n\n    async function handleSave(e, notes) {\n        e.style.cursor = 'default';\n        e.style.boxShadow = 'none';\n        if (changedNote && changedNote !== notes) {\n            await api.post(`/contents/${data._id}`, {\n                notes: changedNote,\n            });\n        }\n    }\n\n    async function handleEdit(e, priority) {\n        e.style.cursor = 'text';\n        e.style.borderRadius = '5px';\n        if (priority) {\n            e.style.boxShadow = '0 0 5px white';\n        } else {\n            e.style.boxShadow = '0 0 5px gray';\n        }\n\n    }\n\n    return (\n        <>\n            <li className={data.priority ? 'notepad-infos-priority' : \"notepad-infos\"}>\n                <div>\n                    <strong>{data.title}</strong>\n                    <div>\n                        <FaTrashAlt\n                            size=\"20\"\n                            onClick={() => handleDelete(data._id)}\n                        />\n                    </div>\n                </div>\n                <textarea\n                    defaultValue={data.notes}\n                    onClick={e => handleEdit(e.target, data.priority)}\n                    onChange={e => setChangedNote(e.target.value)}\n                    onBlur={e => handleSave(e.target, data.notes)}\n                />\n                <span>\n                    <FaExclamationCircle\n                        size=\"20\"\n                        onClick={() => handleChangePriority(data._id)}\n                    />\n                </span>\n            </li>\n        </>\n    )\n}\n\nexport default Notes"]},"metadata":{},"sourceType":"module"}